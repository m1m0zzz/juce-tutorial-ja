"use strict";(self.webpackChunkjuce_tutorial_ja=self.webpackChunkjuce_tutorial_ja||[]).push([[6724],{6058:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var t=s(4848),o=s(8453),i=s(3449);s(6378);const r={title:"DSP\u5165\u9580",sidebar_position:1},c="\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebDSP\u5165\u9580",l={id:"dsp/tutorial_dsp_introduction",title:"DSP\u5165\u9580",description:"\u30c7\u30b8\u30bf\u30eb\u4fe1\u53f7\u51e6\u7406\u3068\u30aa\u30fc\u30c7\u30a3\u30aa\u30d0\u30c3\u30d5\u30a1\u64cd\u4f5c\u306e\u9818\u57df\u3092\u767a\u898b\u3057\u3066\u304f\u3060\u3055\u3044\u3002JUCE DSP\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u57fa\u790e\u3068\u3001\u305d\u306e\u30af\u30e9\u30b9\u3092\u81ea\u5206\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u30fb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3084\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u7d44\u307f\u8fbc\u3080\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002",source:"@site/docs/dsp/tutorial_dsp_introduction.mdx",sourceDirName:"dsp",slug:"/dsp/tutorial_dsp_introduction",permalink:"/juce-tutorial-ja/dsp/tutorial_dsp_introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/m1m0zzz/juce-tutorial-ja/tree/main/docs/dsp/tutorial_dsp_introduction.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"DSP\u5165\u9580",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"DSP",permalink:"/juce-tutorial-ja/category/dsp"},next:{title:"\u30a6\u30a7\u30fc\u30d6\u30b7\u30a7\u30fc\u30d4\u30f3\u30b0\u3068\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u308b\u6b6a\u307f\u306e\u8ffd\u52a0",permalink:"/juce-tutorial-ja/dsp/tutorial_dsp_convolution"}},a={},d=[{value:"\u306f\u3058\u3081\u308b",id:"\u306f\u3058\u3081\u308b",level:2},{value:"The Fast Fourier Transform or FFT",id:"the-fast-fourier-transform-or-fft",level:2},{value:"Finite/Infinite Impulse Response or FIR/IIR",id:"finiteinfinite-impulse-response-or-firiir",level:2},{value:"The processor chain",id:"the-processor-chain",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebdsp\u5165\u9580",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebDSP\u5165\u9580"})}),"\n",(0,t.jsx)(n.p,{children:"\u30c7\u30b8\u30bf\u30eb\u4fe1\u53f7\u51e6\u7406\u3068\u30aa\u30fc\u30c7\u30a3\u30aa\u30d0\u30c3\u30d5\u30a1\u64cd\u4f5c\u306e\u9818\u57df\u3092\u767a\u898b\u3057\u3066\u304f\u3060\u3055\u3044\u3002JUCE DSP\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u57fa\u790e\u3068\u3001\u305d\u306e\u30af\u30e9\u30b9\u3092\u81ea\u5206\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u30fb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3084\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u7d44\u307f\u8fbc\u3080\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u30ec\u30d9\u30eb\uff1aAdvanced"}),"\n",(0,t.jsx)(n.p,{children:"\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\uff1aWindows, macOS, Linux"}),"\n",(0,t.jsx)(n.p,{children:"\u30d7\u30e9\u30b0\u30a4\u30f3\u5f62\u5f0f\uff1aVST, AU, Standalone"}),"\n",(0,t.jsxs)(n.p,{children:["\u30af\u30e9\u30b9\uff1a ",(0,t.jsx)(n.a,{href:"https://docs.juce.com/master/classdsp_1_1ProcessorChain",title:"This variadically-templated class lets you join together any number of processor classes into a singl...",children:"dsp::ProcessorChain"}),", ",(0,t.jsx)(n.a,{href:"https://docs.juce.com/master/classdsp_1_1Gain",title:"Applies a gain to audio samples as single samples or AudioBlocks.",children:"dsp::Gain"}),", ",(0,t.jsx)(n.a,{href:"https://docs.juce.com/master/classdsp_1_1Oscillator",title:"Generates a signal based on a user-supplied function.",children:"dsp::Oscillator"}),", ",(0,t.jsx)(n.a,{href:"https://docs.juce.com/master/classdsp_1_1LadderFilter",title:"Multi-mode filter based on the Moog ladder filter.",children:"dsp::LadderFilter"}),", ",(0,t.jsx)(n.a,{href:"https://docs.juce.com/master/classdsp_1_1Reverb",title:"Processor wrapper around juce::Reverb for easy integration into ProcessorChain.",children:"dsp::Reverb"})]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u3001C++14\u306e\u6a5f\u80fd\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u5fc5\u8981\u3067\u3059\u3002Xcode\u3068Visual Studio\u306e\u6700\u8fd1\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u306f\u3001\u3053\u306e\u30b5\u30dd\u30fc\u30c8\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002"})}),"\n",(0,t.jsx)(n.h2,{id:"\u306f\u3058\u3081\u308b",children:"\u306f\u3058\u3081\u308b"}),"\n",(0,t.jsxs)(n.p,{children:["Before reading this tutorial, make sure you understand the basics of synthesis and have been introduced to MPE. If you would like to find more about MPE, check out this tutorial ",(0,t.jsx)(n.a,{href:"../tutorial_mpe_introduction/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30de\u30eb\u30c1\u30fb\u30dd\u30ea\u30d5\u30a9\u30cb\u30c3\u30af\u30fb\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Download the demo project for this tutorial here: ",(0,t.jsx)(n.a,{href:"/tutorials/PIPs/DSPIntroductionTutorial.zip",children:"\u30d4\u30c3\u30d7"})," | ",(0,t.jsx)(n.a,{href:"/tutorials/ZIPs/DSPIntroductionTutorial.zip",children:"\u30b8\u30c3\u30d7"}),". Unzip the project and open the first header file in the Projucer."]}),"\n",(0,t.jsxs)(n.p,{children:["If you need help with this step, see ",(0,t.jsx)(n.a,{href:"../tutorial_new_projucer_project/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebProjucer\u30d1\u30fc\u30c81\uff1aProjucer\u3092\u59cb\u3081\u308b"}),"."]}),"\n",(0,t.jsx)(n.h1,{id:"the-demo-project",children:"The demo project"}),"\n",(0,t.jsx)(n.p,{children:"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u3066\u69cb\u60f3\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001IDE\u3067\u9069\u5207\u306a\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30fb\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3067\u3001\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30f3\u30fb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Xcode\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306e\u3088\u3046\u306b\u3001\u30e1\u30a4\u30f3\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5de6\u4e0a\u3067\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff1a"}),"\n",(0,t.jsx)(i.A,{src:"https://docs.juce.com/master/tutorial_dsp_introduction_standalone_screenshot1.png",caption:"Changing the deployment target in Xcode"}),"\n",(0,t.jsx)(n.p,{children:"\u30c7\u30e2\u30fb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4e0a\u534a\u5206\u306bMIDI\u30ad\u30fc\u30dc\u30fc\u30c9\u304c\u753b\u9762\u4e0a\u306b\u8868\u793a\u3055\u308c\u3001\u4e0b\u534a\u5206\u306b\u306f\u30aa\u30b7\u30ed\u30b9\u30b3\u30fc\u30d7\u3092\u901a\u3057\u3066\u4fe1\u53f7\u304c\u8996\u899a\u7684\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u73fe\u5728\u306e\u3068\u3053\u308d\u3001\u9375\u76e4\u304c\u62bc\u3055\u308c\u3066\u3082\u3001\u30aa\u30b7\u30ec\u30fc\u30bf\u30fc\u306e\u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u306a\u3044\u9650\u308a\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306f\u97f3\u3092\u51fa\u529b\u3057\u307e\u305b\u3093\u3002"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(i.A,{src:"https://docs.juce.com/master/tutorial_dsp_introduction_screenshot1.png",caption:"The demo project plugin window"}),":::note"]}),"\n",(0,t.jsx)(n.p,{children:"MIDI\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u304a\u6301\u3061\u306e\u5834\u5408\u306f\u3001\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u4e2d\u3001\u753b\u9762\u4e0a\u306e\u30ad\u30fc\u30dc\u30fc\u30c9\u3092\u4f7f\u3046\u4ee3\u308f\u308a\u306b\u3001MIDI\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u63a5\u7d9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002"}),"\n",(0,t.jsx)(n.p,{children:":::"}),"\n",(0,t.jsx)(n.h1,{id:"what-is-dsp",children:"What is DSP?"}),"\n",(0,t.jsx)(n.p,{children:"\u30c7\u30b8\u30bf\u30eb\u4fe1\u53f7\u51e6\u7406\u3067\u306f\u3001\u30c7\u30b8\u30bf\u30eb\u30c7\u30fc\u30bf\u3092\u64cd\u4f5c\u3057\u3066\u3001\u4fe1\u53f7\u306b\u5bfe\u3057\u3066\u7279\u5b9a\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\u30c7\u30b8\u30bf\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa\u51e6\u7406\u3067\u306f\u3001\u7570\u306a\u308b\u30c9\u30e1\u30a4\u30f3\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30fc\u30bf\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff1a"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u6642\u9593\u9818\u57df\uff1a\u6642\u9593\u306b\u95a2\u3057\u3066\u5206\u6790\u304c\u884c\u308f\u308c\u308b\u4e00\u6b21\u5143\u4fe1\u53f7\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u7a7a\u9593\u9818\u57df\uff1a\u3042\u308b\u7a7a\u9593\u306b\u95a2\u3057\u3066\u5206\u6790\u304c\u884c\u308f\u308c\u308b\u591a\u6b21\u5143\u4fe1\u53f7\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u5468\u6ce2\u6570\u9818\u57df\uff1a\u6642\u9593\u307e\u305f\u306f\u7a7a\u9593\u3092\u5468\u6ce2\u6570\u3067\u8868\u3059\u7279\u5b9a\u306e\u9818\u57df\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"the-fast-fourier-transform-or-fft",children:"The Fast Fourier Transform or FFT"}),"\n",(0,t.jsx)(n.p,{children:"\u6642\u9593\u9818\u57df\u307e\u305f\u306f\u7a7a\u9593\u9818\u57df\u306e\u4fe1\u53f7\u306f\u3001\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3068\u547c\u3070\u308c\u308b\u5909\u63db\u5f0f\u3092\u7528\u3044\u3066\u5468\u6ce2\u6570\u9818\u57df\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5909\u63db\u95a2\u6570\u306e\u4e00\u822c\u7684\u306a\u52b9\u7387\u7684\u5b9f\u88c5\u306f\u9ad8\u901f\u30d5\u30fc\u30ea\u30a8\u5909\u63db\uff08FFT\uff09\u3067\u3042\u308a\u3001JUCE DSP\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u906d\u9047\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002"}),"\n",(0,t.jsx)(n.p,{children:"FFT\u306f\u3001\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u3092\u5468\u6ce2\u6570\u306b\u5206\u89e3\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u5468\u6ce2\u6570\u306e\u5927\u304d\u3055\u3068\u4f4d\u76f8\u60c5\u5831\u3092\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u9006\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u4fe1\u53f7\u3092\u5143\u306e\u30c9\u30e1\u30a4\u30f3\u306b\u623b\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u305f\u3081\u3001\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306a\u3069\u500b\u3005\u306e\u5468\u6ce2\u6570\u6210\u5206\u3092\u51e6\u7406\u3059\u308b\u306e\u306b\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"finiteinfinite-impulse-response-or-firiir",children:"Finite/Infinite Impulse Response or FIR/IIR"}),"\n",(0,t.jsx)(n.p,{children:"dsp\u306b\u306f\u4e3b\u306b2\u3064\u306e\u30c7\u30b8\u30bf\u30eb\u30fb\u30d5\u30a3\u30eb\u30bf\u30fc\u8a2d\u8a08\u304c\u3042\u308b\uff1a"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u6709\u9650\u30a4\u30f3\u30d1\u30eb\u30b9\u5fdc\u7b54\u30d5\u30a3\u30eb\u30bf\u30fc\uff08FIR\uff09\uff1a\u5404\u51fa\u529b\u30b5\u30f3\u30d7\u30eb\u3092\u4ee5\u524d\u306e\u5165\u529b\u30b5\u30f3\u30d7\u30eb\u306e\u95a2\u6570\u3068\u3057\u3066\u51e6\u7406\u3059\u308b\u5b89\u5b9a\u3057\u305f\u8a2d\u8a08\u3002FIR\u30d5\u30a3\u30eb\u30bf\u306f\u7dda\u5f62\u4f4d\u76f8\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u591a\u304f\u306e\u5834\u5408\u3001\u8a2d\u8a08\u306f\u5358\u7d14\u3060\u304cIIR\u30d5\u30a3\u30eb\u30bf\u3088\u308a\u52b9\u7387\u306f\u4f4e\u3044\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u7121\u9650\u30a4\u30f3\u30d1\u30eb\u30b9\u5fdc\u7b54\u30d5\u30a3\u30eb\u30bf\u30fc\uff08IIR\uff09\uff1a\u5404\u51fa\u529b\u30b5\u30f3\u30d7\u30eb\u3092\u4ee5\u524d\u306e\u5165\u529b\u30b5\u30f3\u30d7\u30eb\u3068\u51fa\u529b\u30b5\u30f3\u30d7\u30eb\u306e\u95a2\u6570\u3068\u3057\u3066\u51e6\u7406\u3059\u308b\u3001\u4e0d\u5b89\u5b9a\u306a\u8a2d\u8a08\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002IIR\u30d5\u30a3\u30eb\u30bf\u306f\u4ee5\u524d\u306e\u51fa\u529b\u30b5\u30f3\u30d7\u30eb\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u5185\u90e8\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u304c\u767a\u751f\u3057\u3001\u8a2d\u8a08\u306f\u96e3\u3057\u3044\u304cFIR\u30d5\u30a3\u30eb\u30bf\u3088\u308a\u3082\u52b9\u7387\u7684\u3067\u3042\u308b\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u3053\u308c\u3089\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u8a2d\u8a08\u306e\u4e2d\u306b\u306f\u3001\u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u92ed\u3055\u3084\u9077\u79fb\u5468\u6ce2\u6570\u3067\u767a\u751f\u3059\u308b\u30ea\u30c3\u30d7\u30eb\u306e\u91cf\u3092\u6c7a\u5b9a\u3059\u308b\u591a\u304f\u306e\u7570\u306a\u308b\u4f1d\u9054\u95a2\u6570\u304c\u3042\u308b\u3002\u3053\u308c\u3089\u306e\u8a2d\u8a08\u306e\u591a\u304f\u306f\u3001\u30a2\u30ca\u30ed\u30b0\u30fb\u30d5\u30a3\u30eb\u30bf\u30fc\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u305f\u3082\u306e\u3067\u3042\u308a\u3001\u7570\u306a\u308b\u4f1d\u9054\u95a2\u6570\u306f\u3001\u7570\u306a\u308b\u30a2\u30ca\u30ed\u30b0\u5bfe\u5fdc\u3092\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u3002"}),"\n",(0,t.jsx)(n.p,{children:"JUCE DSP\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8ee2\u9001\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\uff1a"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"FIR\u4f1d\u9054\u95a2\u6570\u30a6\u30a3\u30f3\u30c9\u30a6\u3001\u30ab\u30a4\u30b6\u30fc\u3001\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3\u3001\u6700\u5c0f\u4e8c\u4e57\u6cd5\u3001\u30cf\u30fc\u30d5\u30d0\u30f3\u30c9\u30a4\u30b3\u30e9\u30a4\u30b6\u30c3\u30d7\u30eb\u3002"}),"\n",(0,t.jsx)(n.li,{children:"IIR\u4f1d\u9054\u95a2\u6570\uff1a\u30d0\u30bf\u30fc\u30ef\u30fc\u30b9\u3001\u30c1\u30a7\u30d3\u30b7\u30a7\u30d5\u30fb\u30bf\u30a4\u30d71\u3001\u30c1\u30a7\u30d3\u30b7\u30a7\u30d5\u30fb\u30bf\u30a4\u30d72\u3001\u6955\u5186\u3001\u30cf\u30fc\u30d5\u30d0\u30f3\u30c9\u30fb\u30dd\u30ea\u30d5\u30a7\u30fc\u30ba\u30fb\u30aa\u30fc\u30eb\u30d1\u30b9\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u3053\u306e\u3088\u3046\u306a\u30d5\u30a3\u30eb\u30bf\u30fc\u8a2d\u8a08\u306b\u8208\u5473\u304c\u3042\u308b\u65b9\u306f\u3001\u3053\u306e\u30c8\u30d4\u30c3\u30af\u306b\u3064\u3044\u3066\u3088\u308a\u6df1\u304f\u89e3\u8aac\u3057\u305f\u8cc7\u6599\u3092\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u305f\u304f\u3055\u3093\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u76ee\u7684\u4e0a\u3001\u79c1\u305f\u3061\u304c\u59cb\u3081\u308b\u305f\u3081\u306e\u57fa\u672c\u7684\u306a\u3053\u3068\u4ee5\u4e0a\u306e\u3053\u3068\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3057\u305f\u3002"}),"\n",(0,t.jsx)(n.h1,{id:"the-signal-processing-lifecycle",children:"The signal processing lifecycle"}),"\n",(0,t.jsxs)(n.p,{children:["Similarly to the audio application lifecycle of the ",(0,t.jsx)(n.a,{href:"https://docs.juce.com/master/classAudioProcessor",title:"Base class for audio processing classes or plugins.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5"})," with its ",(0,t.jsx)(n.code,{children:"prepareToPlay()"})," and ",(0,t.jsx)(n.code,{children:"getNextAudioBlock()"})," functions, we have to implement the ",(0,t.jsx)(n.code,{children:"prepare()"})," and ",(0,t.jsx)(n.code,{children:"\u30ec\u30f3\u30c0\u30fc\u30cd\u30af\u30b9\u30c8\u30d6\u30ed\u30c3\u30af()"})," functions of our ",(0,t.jsx)(n.code,{children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30a8\u30f3\u30b8\u30f3"})," class derived from ",(0,t.jsx)(n.a,{href:"https://docs.juce.com/master/classMPESynthesiser",title:"Base class for an MPE-compatible musical device that can play sounds.",children:"MPESynthesiser"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"\u5404dsp\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306f\u307e\u305f\u3001\u9069\u5207\u306b\u6a5f\u80fd\u3059\u308b\u3088\u3046\u3001\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3092\u5b9f\u88c5\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff1a"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"prepare()"}),": called before the processing starts to set sample rate and block size."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"\u30d7\u30ed\u30bb\u30b9()"}),": processes the input and output buffers supplied in the processing context."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"\u30ea\u30bb\u30c3\u30c8"}),": resets the internal state of the processor with smoothing if necessary."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"the-processor-chain",children:"The processor chain"}),"\n",(0,t.jsxs)(n.p,{children:["A convenient template class of the DSP module is the ",(0,t.jsx)(n.code,{children:"juce::dsp::ProcessorChain"})," which allows us to apply different processes in series by calling the ",(0,t.jsx)(n.code,{children:"prepare()"}),", ",(0,t.jsx)(n.code,{children:"\u30d7\u30ed\u30bb\u30b9()"})," and ",(0,t.jsx)(n.code,{children:"\u30ea\u30bb\u30c3\u30c8"})," methods automatically one after the other."]}),"\n",(0,t.jsx)(n.p,{children:"\u3053\u306e\u3088\u3046\u306b\u3001\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u578b\u3068\u3057\u3066\u5ba3\u8a00\u3059\u308b\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"juce::dsp::ProcessorChain, juce::dsp::Gain> processorChain\uff1b\n"})}),"\n",(0,t.jsxs)(n.p,{children:["We can then apply all our processes on the ",(0,t.jsx)(n.code,{children:"\u30d7\u30ed\u30bb\u30c3\u30b5\u30c1\u30a7\u30fc\u30f3"})," instance directly."]}),"\n",(0,t.jsx)(n.p,{children:"dsp\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u3069\u306e\u3088\u3046\u306b\u52d5\u4f5c\u3059\u308b\u304b\u306b\u3064\u3044\u3066\u306e\u57fa\u672c\u7684\u306a\u77e5\u8b58\u3092\u5f97\u305f\u3068\u3053\u308d\u3067\u3001\u3044\u304f\u3064\u304b\u306e\u4fe1\u53f7\u51e6\u7406\u3092\u59cb\u3081\u3066\u307f\u3088\u3046\uff01"}),"\n",(0,t.jsx)(n.h1,{id:"creating-an-oscillator",children:"Creating an oscillator"}),"\n",(0,t.jsxs)(n.p,{children:["In the ",(0,t.jsx)(n.code,{children:"\u30ab\u30b9\u30bf\u30e0\u30aa\u30b7\u30ec\u30fc\u30bf\u30fc"})," class, define a juce::dsp::ProcessorChain with juce::dsp::Oscillator and juce::dsp::Gain processors in this top-down order [1]. We want the gain processing to affect the output of the oscillator to be able to trim the level coming out. Also define an enum with processor indices [2] to be able to clearly refer to the corresponding process via its index later on."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    enum\n    {\n        oscIndex,\n        gainIndex   // [2]\n    };\n \n    juce::dsp::ProcessorChain, juce::dsp::Gain> processorChain; // [1].\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the ",(0,t.jsx)(n.code,{children:"prepare()"})," function, call the prepare functions of each processor in the processor chain sequentially [3]."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"void prepare (const juce::dsp::ProcessSpec& spec)\n    {\n        processorChain.prepare (spec); // [3].\n    }\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the ",(0,t.jsx)(n.code,{children:"\u30ea\u30bb\u30c3\u30c8"})," function, call the reset functions of each processor in the processor chain sequentially [4]."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"void reset() noexcept\n    {\n         processorChain.reset(); // [4].\n    }\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u6b21\u306b\u3001\u30aa\u30b7\u30ec\u30fc\u30bf\u30fc\u304c\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u3092\u751f\u6210\u3059\u308b\u306e\u306b\u4f7f\u3046\u5468\u671f\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u7c21\u5358\u306a\u4f8b\u3068\u3057\u3066\u3001\u30b5\u30a4\u30f3\u6ce2\u304b\u3089\u59cb\u3081\u307e\u3059\u3002"}),"\n",(0,t.jsxs)(n.p,{children:["In the constructor, get a reference to the Oscillator by supplying the index of the process and use the ",(0,t.jsx)(n.code,{children:"processorChain.get<>()"})," method [5]. Let's initialise the oscillator using a lambda function and the ",(0,t.jsx)(n.code,{children:"\u6a19\u6e96\u5024::sin"})," function to provide the sine wave to the oscillator [6]."]}),"\n",(0,t.jsx)(n.p,{children:"\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30c6\u30fc\u30d6\u30eb\u306f\u3001\u4f9b\u7d66\u3055\u308c\u308b\u96e2\u6563\u70b9\u306e\u6570\u306b\u5fdc\u3058\u3066\u3001\u9ad8\u4fa1\u306a\u7b97\u8853\u6f14\u7b97\u3092\u8fd1\u4f3c\u3059\u308b\u3002\u3053\u3053\u3067\u306f128\u70b9\u3068\u3059\u308b\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"public:\n    //==============================================================================\n    CustomOscillator()\n    {\n        auto& osc = processorChain.template get(); // [5]\n        osc.initialise ([] (Type x) { return std::sin (x); }, 128); // [6].\n    }\nxfloat xDefinition juce_UnityPluginInterface.h:191\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To set the frequency of the oscillator, we need to once again get a reference to it similarly to the previous step and call the ",(0,t.jsx)(n.code,{children:"setFrequency()"})," method on it [7]."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    void setFrequency (Type newValue, bool force = false)\n    {\n        auto& osc = processorChain.template get();\n        osc.setFrequency (newValue, force); // [7].\n    }\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Same process with the gain processor and its ",(0,t.jsx)(n.code,{children:"setGainLinear()"})," method [8]."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    void setLevel (Type newValue)\n    {\n        auto& gain = processorChain.template get();\n        gain.setGainLinear (newValue); // [8].\n    }\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the ",(0,t.jsx)(n.code,{children:"\u30d7\u30ed\u30bb\u30b9()"})," function, we can call the process functions of each processor in the processor chain sequentially [9]."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    template void process (const ProcessContext& context) noexcept\n    {\n        processorChain.process (context); // [9].\n    }\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If we run this code after implementing the above changes in the ",(0,t.jsx)(n.code,{children:"\u30ab\u30b9\u30bf\u30e0\u30aa\u30b7\u30ec\u30fc\u30bf\u30fc"})," class, we should be able to hear a simple sine wave synthesiser using the JUCE DSP module."]}),"\n",(0,t.jsx)(i.A,{src:"https://docs.juce.com/master/tutorial_dsp_introduction_screenshot2.png",caption:"Sine wave synthesiser with the JUCE DSP module"}),"\n",(0,t.jsx)(n.h1,{id:"changing-the-oscillator-waveform",children:"Changing the oscillator waveform"}),"\n",(0,t.jsx)(n.p,{children:"\u30aa\u30b7\u30ec\u30fc\u30bf\u30fc\u306e\u6ce2\u5f62\u3092\u30ce\u30b3\u30ae\u30ea\u6ce2\u306b\u3057\u3066\u3001\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u3082\u3046\u5c11\u3057\u30a8\u30ad\u30b5\u30a4\u30c6\u30a3\u30f3\u30b0\u306b\u3057\u3066\u307f\u3088\u3046\u3002"}),"\n",(0,t.jsxs)(n.p,{children:["Since we do not have access to a ",(0,t.jsx)(n.code,{children:"\u6a19\u6e96"})," version of a sawtooth function, we need to implement a manual mapping of values using the ",(0,t.jsx)(n.code,{children:"\u5730\u56f3"})," function. To do this, map the range between -\u5186\u5468\u7387 ... \u5186\u5468\u7387 to -1 ..1 providing a linear ramp from -1 to 1. Since a sawtooth only has 2 breakpoints, we need only supply 2 discrete points to the lookup table."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"public:\n    //==============================================================================\n    CustomOscillator()\n    {\n        auto& osc = processorChain.template get();\n        osc.initialise ([] (Type x)\n        {\n            return juce::jmap (x,\n                               Type (-juce::MathConstants::pi),\n                               Type (juce::MathConstants:\u03c0)\u3067\u3042\u308b\u3001\n                               \u30bf\u30a4\u30d7 (-1)\u3001\n                               \u30bf\u30a4\u30d7 (1))\uff1b\n        }, 2);\n    }\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u3088\u308a\u30a2\u30b0\u30ec\u30c3\u30b7\u30d6\u306a\u30b5\u30a6\u30f3\u30c9\u304c\u5f97\u3089\u308c\u308b\u306f\u305a\u3060\u3002"}),"\n",(0,t.jsx)(i.A,{src:"https://docs.juce.com/master/tutorial_dsp_introduction_screenshot3.png",caption:"Sawtooth synthesiser with the JUCE DSP module"}),"\n",(0,t.jsx)(n.p,{children:"\u4e09\u89d2\u6ce2\u3084\u77e9\u5f62\u6ce2\u3067\u30aa\u30b7\u30ec\u30fc\u30bf\u3092\u521d\u671f\u5316\u3057\u3066\u3001\u305d\u306e\u97f3\u3092\u8074\u3044\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u30db\u30ef\u30a4\u30c8\u30ce\u30a4\u30ba\u306e\u30aa\u30b7\u30ec\u30fc\u30bf\u30fc\u3092\u5b9f\u88c5\u3067\u304d\u307e\u3059\u304b\uff1f"}),"\n",(0,t.jsx)(n.h1,{id:"adding-a-second-oscillator",children:"Adding a second oscillator"}),"\n",(0,t.jsxs)(n.p,{children:["Most analog synthesisers will have multiple oscillators and a common trick to get a thicker sound is to add a second oscillator with a slightly detuned frequency. So let's try that by modifying the ",(0,t.jsx)(n.code,{children:"\u58f0"})," class."]}),"\n",(0,t.jsx)(n.p,{children:"Add a second CustomOscillator template type to the processor chain [1] and add its corresponding index in the enum [2]."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"private:\n    //==============================================================================\n    juce::HeapBlock heapBlock;\n    juce::dsp::AudioBlock tempBlock;\n \n    enum\n    {\n        osc1Index,\n        osc2Index,             // [2]\n        masterGainIndex\n    };\n \n    juce::dsp::ProcessorChain, CustomOscillator, juce::dsp::Gain> processorChain; // [1].\n    //...\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Let's set the frequency of the second oscillator to the currently played note and pitch it up by 1% in the ",(0,t.jsx)(n.code,{children:"noteStarted()"})," function [3]. We can keep the velocity at the same lavel as the first oscillator [4]."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    void noteStarted() override\n    {\n        auto velocity = getCurrentlyPlayingNote().noteOnVelocity.asUnsignedFloat();\n        auto freqHz = (float) getCurrentlyPlayingNote().getFrequencyInHertz();\n \n        processorChain.get().setFrequency (freqHz, true);\n        processorChain.get().setLevel (velocity);\n \n        processorChain.get().setFrequency (freqHz * 1.01f, true);    // [3]\n        processorChain.get().setLevel (velocity); // [4].\n    }\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Let's make sure that the detuned frequency remains the same when pitch bend is applied in the ",(0,t.jsx)(n.code,{children:"notePitchbendChanged()"})," function [5]."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    void notePitchbendChanged() override\n    {\n        auto freqHz = (float) getCurrentlyPlayingNote().getFrequencyInHertz();\n        processorChain.get().setFrequency (freqHz);\n        processorChain.get().setFrequency (freqHz * 1.01f); // [5].\n    }\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3001\u3069\u306e\u3088\u3046\u306b\u805e\u3053\u3048\u308b\u304b\u898b\u3066\u307f\u3088\u3046\u3002"}),"\n",(0,t.jsx)(i.A,{src:"https://docs.juce.com/master/tutorial_dsp_introduction_screenshot4.png",caption:"Synthesiser with a second sawtooth oscillator"}),"\n",(0,t.jsx)(n.p,{children:"\u5468\u6ce2\u6570\u30921%\u4e0b\u3052\u305f3\u3064\u76ee\u306e\u30aa\u30b7\u30ec\u30fc\u30bf\u30fc\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u97f3\u306f\u592a\u304f\u306a\u308a\u307e\u3059\u304b\uff1f"}),"\n",(0,t.jsx)(n.h1,{id:"adding-a-ladder-filter",children:"Adding a ladder filter"}),"\n",(0,t.jsx)(n.p,{children:"\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\u30fb\u30c7\u30b6\u30a4\u30f3\u3092\u5c0e\u5165\u3057\u3088\u3046\u3002\u30e9\u30c0\u30fc\u30fb\u30d5\u30a3\u30eb\u30bf\u30fc\u30fb\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306f\u3001Moog\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u306e\u6709\u540d\u306a\u30a2\u30ca\u30ed\u30b0\u30fb\u30c7\u30b6\u30a4\u30f3\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u305f\u3082\u306e\u3067\u3001\u79c1\u305f\u3061\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3053\u308c\u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u3053\u307e\u3067\u3067\u3001\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u30fb\u30c1\u30a7\u30fc\u30f3\u306b\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u4f5c\u696d\u306b\u306f\u6163\u308c\u305f\u306f\u305a\u3067\u3059\u3002"}),"\n",(0,t.jsxs)(n.p,{children:["Add the ",(0,t.jsx)(n.code,{children:"juce::dsp::LadderFilter"})," to the processor chain [1] and add its corresponding index to the enum [2] in the ",(0,t.jsx)(n.code,{children:"\u58f0"})," class."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    juce::HeapBlock heapBlock;\n    juce::dsp::AudioBlock tempBlock;\n \n    enum\n    {\n        osc1Index,\n        osc2Index,\n        filterIndex,        // [2]\n        masterGainIndex\n    };\n \n    juce::dsp::ProcessorChain, CustomOscillator,\n                              juce::dsp::LadderFilter, juce::dsp::Gain> processorChain; // [1\uff3d\n"})}),"\n",(0,t.jsx)(n.p,{children:"As previously explained, get the reference of the filter processor and set its cutoff frequency at 1kHz [3] and resonance at 0.7 [4]."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    Voice()\n    {\n        auto& masterGain = processorChain.get();\n        masterGain.setGainLinear (0.7f);\n \n        auto& filter = processorChain.get();\n        filter.setCutoffFrequencyHz (1000.0f); // [3].\n        filter.setResonance (0.7f); // [4].\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u4fe1\u53f7\u306e\u9ad8\u57df\u304c\u6e1b\u8870\u3057\u3001\u3088\u308a\u3053\u3082\u3063\u305f\u97f3\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002"}),"\n",(0,t.jsx)(i.A,{src:"https://docs.juce.com/master/tutorial_dsp_introduction_screenshot5.png",caption:"Synthesiser with a ladder filter"}),"\n",(0,t.jsx)(n.p,{children:"\u30ec\u30be\u30ca\u30f3\u30b9\u5024\u3084\u30ab\u30c3\u30c8\u30aa\u30d5\u5468\u6ce2\u6570\u3092\u5909\u3048\u3066\u307f\u3066\u3001\u51fa\u529b\u3092\u8074\u3044\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u73fe\u6642\u70b9\u3067\u306f\u3001\u30d5\u30a3\u30eb\u30bf\u30fc\u306f12dB/octave\u306e\u6e1b\u8870\u3092\u6301\u3064\u30ed\u30fc\u30d1\u30b9\u30d5\u30a3\u30eb\u30bf\u30fc\u3067\u3059\u300224dB/\u30aa\u30af\u30bf\u30fc\u30d6\u6e1b\u8870\u306e\u30cf\u30a4\u30d1\u30b9\u30d5\u30a3\u30eb\u30bf\u30fc\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u304b\uff1f"}),"\n",(0,t.jsx)(n.h1,{id:"modulating-the-signal-with-an-lfo",children:"Modulating the signal with an LFO"}),"\n",(0,t.jsx)(n.p,{children:"\u30af\u30e9\u30b7\u30c3\u30af\u306a\u30a2\u30ca\u30ed\u30b0\u30fb\u30b7\u30f3\u30bb\u306e\u30b5\u30a6\u30f3\u30c9\u306b\u8fd1\u3065\u3044\u305f\u4eca\u3001\u3053\u308c\u4ee5\u4e0a\u4f55\u304c\u3042\u308b\u3060\u308d\u3046\u304b\uff1f\u3082\u3061\u308d\u3093\u3001\u30e2\u30b8\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3LFO\u3060\u3002"}),"\n",(0,t.jsxs)(n.p,{children:["A low frequency oscillator acts as a control signal to another parameter that we want to modulate. Its frequency is usually very low and is below the human hearing range therefore we should not add the oscillator in the processor chain like we did for the previous oscillators. This time, declare the new Oscillator as a regular member variable [1] in the ",(0,t.jsx)(n.code,{children:"\u58f0"})," class."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    static constexpr size_t lfoUpdateRate = 100;\n    size_t lfoUpdateCounter = lfoUpdateRate;\n    juce::dsp::Oscillatorlfo; // [1\uff3d\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To produce a slow and smooth modulation change to the cutoff frequency of the ladder filter, initialise the LFO as a sine wave [2] with a rate of 3Hz [3] in the ",(0,t.jsx)(n.code,{children:"\u58f0"})," constructor."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"lfo.initialise ([] (float x) { return std::sin(x); }, 128)\uff1b\n        lfo.setFrequency (3.0f)\uff1b\n    }\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Since we do not need to update the LFO as often as the audio processing sample rate, divide the sample rate by the LFO update rate to set the LFO sample rate in the ",(0,t.jsx)(n.code,{children:"prepare()"})," function [4]. In this case we decide to update the LFO a hundred times less frequently."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    void prepare (const juce::dsp::ProcessSpec& spec)\n    {\n        tempBlock = juce::dsp::AudioBlock(heapBlock, spec.numChannels, spec.maxBlockSize)\uff1b\n        processorChain.prepare (spec)\uff1b\n \n        lfo.prepare ({ spec.sampleRate / lfoUpdateRate, spec.maximumBlockSize, spec.numChannels }); // [4].\n    }\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the following ",(0,t.jsx)(n.code,{children:"for()"})," loop, we only modify the cutoff frequency every 100 samples. First call the ",(0,t.jsx)(n.code,{children:"processSample()"})," function to process a single sample on the LFO [5] and then map its return value to the desired modulation range [6]. In this case we want to modulate the cutoff frequency from 100Hz to 2kHz. Finally, apply the new cutoff frequency to the ladder filter [7]."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    void renderNextBlock (juce::AudioBuffer& outputBuffer, int startSample, int numSamples) override\n    {\n        auto output = tempBlock.getSubBlock (0, (size_t) numSamples);\n        output.clear();\n \n        for (size_t pos = 0; pos < (size_t) numSamples;)\n        {\n            auto max = juce::jmin ((size_t) numSamples - pos, lfoUpdateCounter);\n            auto block = output.getSubBlock (pos, max);\n \n            juce::dsp::ProcessContextReplacing context (block);\n            processorChain.process (context);\n \n            pos += max;\n            lfoUpdateCounter -= max;\n \n            if (lfoUpdateCounter == 0)\n            {\n                lfoUpdateCounter = lfoUpdateRate;\n                auto lfoOut = lfo.processSample (0.0f);                                 // [5]\n                auto curoffFreqHz = juce::jmap (lfoOut, -1.0f, 1.0f, 100.0f, 2000.0f);  // [6]\n                processorChain.get().setCutoffFrequencyHz (curoffFreqHz);  // [7]\n            }\n        }\n \n        juce::dsp::AudioBlock(\u51fa\u529b\u30d0\u30c3\u30d5\u30a1)\n            .getSubBlock ((size_t) startSample, (size_t) numSamples)\n            .add (tempBlock)\uff1b\n    }\n"})}),"\n",(0,t.jsx)(n.p,{children:"UFO\u578b\u306e\u30b5\u30a4\u30ec\u30f3\u97f3\u304c\u805e\u3053\u3048\u308b\u306f\u305a\u3060\u3002"}),"\n",(0,t.jsx)(i.A,{src:"https://docs.juce.com/master/tutorial_dsp_introduction_screenshot6.png",caption:"Synthesiser with an LFO"}),"\n",(0,t.jsx)(n.p,{children:"\u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u30ec\u30be\u30ca\u30f3\u30b9\u3084\u30aa\u30b7\u30ec\u30fc\u30bf\u30fc\u306e\u5468\u6ce2\u6570\u306a\u3069\u3001\u3055\u307e\u3056\u307e\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u5909\u8abf\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,t.jsx)(n.h1,{id:"adding-a-simple-reverb",children:"Adding a simple reverb"}),"\n",(0,t.jsxs)(n.p,{children:["At the moment if we play our synthesiser, you may have noticed that the sound is very dry so let's add a simple reverb to add depth to our signal. In order to apply the reverb to the entire synth sound, create an effects chain in the ",(0,t.jsx)(n.code,{children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30a8\u30f3\u30b8\u30f3"})," class and add the ",(0,t.jsx)(n.code,{children:"juce::dsp::Reverb"})," template type to the effects chain [1] along with its index [2]."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    enum\n    {\n        reverbIndex // [2]\n    };\n \n    juce::dsp::ProcessorChainfxChain; // [1\uff3d\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Call the ",(0,t.jsx)(n.code,{children:"prepare()"})," function on the processor chain [3]."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    void prepare (const juce::dsp::ProcessSpec& spec) noexcept\n    {\n        setCurrentPlaybackSampleRate (spec.sampleRate);\n \n        for (auto* v : voices)\n            dynamic_cast(v)->prepare (spec)\uff1b\n \n        fxChain.prepare (spec); // [3].\n    }\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In order to process the effects chain, we need to retrieve the correct AudioBlock from the ",(0,t.jsx)(n.a,{href:"https://docs.juce.com/master/classAudioBuffer",title:"A multi-channel buffer containing floating point audio samples.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d0\u30c3\u30d5\u30a1"})," to pass the context to the processing chain. First, convert the ",(0,t.jsx)(n.a,{href:"https://docs.juce.com/master/classAudioBuffer",title:"A multi-channel buffer containing floating point audio samples.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d0\u30c3\u30d5\u30a1"})," to a usable AudioBlock [4] and refer to the right portion of the samples to manipulate using the ",(0,t.jsx)(n.code,{children:"getSubBlock()"})," method [5]. Now we can get the processing context from this AudioBlock [6] and process the effects chain with it [7]."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    void renderNextSubBlock (juce::AudioBuffer& outputAudio, int startSample, int numSamples) override\n    {\n        MPESynthesiser::renderNextSubBlock (outputAudio, startSample, numSamples);\n \n        auto block = juce::dsp::AudioBlock (outputAudio);                            // [4]\n        auto blockToUse = block.getSubBlock ((size_t) startSample, (size_t) numSamples);    // [5]\n        auto contextToUse = juce::dsp::ProcessContextReplacing(blockToUse); // [6].\n        fxChain.process (contextToUse); // [7].\n    }\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u3053\u308c\u3067\u30b7\u30f3\u30bb\u306f\u3001\u4fe1\u53f7\u306e\u6700\u5f8c\u306b\u30b9\u30e0\u30fc\u30b9\u306a\u30ea\u30d0\u30fc\u30d6\u306e\u30c6\u30fc\u30eb\u304c\u8ffd\u52a0\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(i.A,{src:"https://docs.juce.com/master/tutorial_dsp_introduction_screenshot7.png",caption:"Synthesiser with reverb"}),":::note"]}),"\n",(0,t.jsxs)(n.p,{children:["The source code for this modified version of the code can be found in the ",(0,t.jsx)(n.code,{children:"DSPIntroductionTutorial_02.h"})," file of the demo project."]}),"\n",(0,t.jsx)(n.p,{children:":::"}),"\n",(0,t.jsx)(n.h1,{id:"\u6982\u8981",children:"\u6982\u8981"}),"\n",(0,t.jsx)(n.p,{children:"\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001JUCE DSP \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u30aa\u30fc\u30c7\u30a3\u30aa\u30d0\u30c3\u30d5\u30a1\u3092\u64cd\u4f5c\u3057\u3001\u4fe1\u53f7\u3092\u51e6\u7406\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3057\u305f\u3002\u7279\u306b"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u8907\u6570\u306e\u30aa\u30b7\u30ec\u30fc\u30bf\u30fc\u3092\u4f7f\u3063\u3066\u30a6\u30a7\u30fc\u30d6\u30c6\u30fc\u30d6\u30eb\u30fb\u30b7\u30f3\u30bb\u3092\u4f5c\u6210\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u30ce\u30b3\u30ae\u30ea\u6ce2\u3084\u30b5\u30a4\u30f3\u6ce2\u306a\u3069\u3001\u3055\u307e\u3056\u307e\u306a\u6ce2\u5f62\u3067\u904a\u3093\u3060\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u5b9f\u88c5\u3057\u3001\u305d\u306e\u30ab\u30c3\u30c8\u30aa\u30d5\u5468\u6ce2\u6570\u3092LFO\u3067\u64cd\u4f5c\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u30b7\u30f3\u30d7\u30eb\u306a\u30ea\u30d0\u30fc\u30d6\u3092\u8ffd\u52a0\u3057\u3001\u4fe1\u53f7\u306b\u5e83\u304c\u308a\u3092\u6301\u305f\u305b\u305f\u3002"}),"\n"]}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsxs)(n.p,{children:["Check out part 2 of this tutorial to add distortion and convolution here: ",(0,t.jsx)(n.a,{href:"../tutorial_dsp_convolution/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30a6\u30a7\u30fc\u30d6\u30b7\u30a7\u30a4\u30d4\u30f3\u30b0\u3068\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u6b6a\u307f\u3092\u52a0\u3048\u308b"})]}),(0,t.jsxs)(n.p,{children:["Skip to part 3 of this tutorial to add delay lines here: ",(0,t.jsx)(n.a,{href:"../tutorial_dsp_delay_line/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3\u3092\u4f7f\u3063\u305f\u30b9\u30c8\u30ea\u30f3\u30b0\u30fb\u30e2\u30c7\u30eb\u306e\u4f5c\u6210"})]})]}),"\n",(0,t.jsx)(n.h1,{id:"\u95a2\u9023\u9805\u76ee",children:"\u95a2\u9023\u9805\u76ee"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../tutorial_simple_synth_noise/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30db\u30ef\u30a4\u30c8\u30ce\u30a4\u30ba\u30fb\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u3092\u4f5c\u308b"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../tutorial_sine_synth/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30b5\u30a4\u30f3\u6ce2\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../tutorial_synth_db_level_control/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30c7\u30b7\u30d9\u30eb\u3092\u4f7f\u3063\u3066\u30aa\u30fc\u30c7\u30a3\u30aa\u30ec\u30d9\u30eb\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../tutorial_synth_level_control/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa\u30ec\u30d9\u30eb\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../tutorial_synth_using_midi_input/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebMIDI\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../tutorial_mpe_introduction/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30de\u30eb\u30c1\u30fb\u30dd\u30ea\u30d5\u30a9\u30cb\u30c3\u30af\u30fb\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../tutorial_simple_fft/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u9ad8\u901f\u30d5\u30fc\u30ea\u30a8\u5909\u63db"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../tutorial_spectrum_analyser/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u4fe1\u53f7\u306e\u5468\u6ce2\u6570\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u53ef\u8996\u5316\u3059\u308b"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../tutorial_simd_register_optimisation/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebSIMDRegister\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u305f\u6700\u9069\u5316"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../tutorial_dsp_convolution/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30a6\u30a7\u30fc\u30d6\u30b7\u30a7\u30a4\u30d4\u30f3\u30b0\u3068\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u6b6a\u307f\u3092\u52a0\u3048\u308b"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../tutorial_dsp_delay_line/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3\u3092\u4f7f\u3063\u305f\u30b9\u30c8\u30ea\u30f3\u30b0\u30fb\u30e2\u30c7\u30eb\u306e\u4f5c\u6210"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},3449:(e,n,s)=>{s.d(n,{A:()=>o});var t=s(4848);function o(e){let{src:n,caption:s,alt:o,width:i,height:r}=e;return(0,t.jsxs)("figure",{children:[(0,t.jsx)("img",{src:n,alt:o||s,width:i,height:r}),(0,t.jsx)("figcaption",{children:(0,t.jsx)("b",{children:s})})]})}},6378:(e,n,s)=>{s.d(n,{A:()=>o});var t=s(4848);function o(e){let{path:n}=e;return(0,t.jsx)("p",{children:(0,t.jsx)("a",{href:`https://docs.juce.com/master/${n}.html`,children:"\ud83d\udcda Source Page"})})}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var t=s(6540);const o={},i=t.createContext(o);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);