"use strict";(self.webpackChunkjuce_tutorial_ja=self.webpackChunkjuce_tutorial_ja||[]).push([[8314],{3233:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var i=t(4848),s=t(8453),a=t(3449);t(6378);const l={title:"\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3\u3067\u30b9\u30c8\u30ea\u30f3\u30b0\u30fb\u30e2\u30c7\u30eb\u3092\u4f5c\u6210",sidebar_position:3},r="\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3\u3092\u4f7f\u3063\u305f\u30b9\u30c8\u30ea\u30f3\u30b0\u30fb\u30e2\u30c7\u30eb\u306e\u4f5c\u6210",o={id:"dsp/tutorial_dsp_delay_line",title:"\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3\u3067\u30b9\u30c8\u30ea\u30f3\u30b0\u30fb\u30e2\u30c7\u30eb\u3092\u4f5c\u6210",description:"\u30d5\u30a3\u30b8\u30ab\u30eb\u30e2\u30c7\u30ea\u30f3\u30b0\u306b\u3088\u308b\u30ea\u30a2\u30eb\u306a\u30b9\u30c8\u30ea\u30f3\u30b0\u30b9\u30e2\u30c7\u30eb\u306e\u5b9f\u88c5\u3002\u30c7\u30a3\u30ec\u30a4\u30fb\u30e9\u30a4\u30f3\u3092\u7d44\u307f\u8fbc\u3093\u3067\u3001\u30b9\u30c6\u30ec\u30aa\u97f3\u5834\u306b\u8907\u96d1\u306a\u30a8\u30b3\u30fc\u30fb\u30d1\u30bf\u30fc\u30f3\u3092\u4f5c\u308a\u51fa\u3059\u3002",source:"@site/docs/dsp/tutorial_dsp_delay_line.mdx",sourceDirName:"dsp",slug:"/dsp/tutorial_dsp_delay_line",permalink:"/juce-tutorial-ja/dsp/tutorial_dsp_delay_line",draft:!1,unlisted:!1,editUrl:"https://github.com/m1m0zzz/juce-tutorial-ja/tree/main/docs/dsp/tutorial_dsp_delay_line.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3\u3067\u30b9\u30c8\u30ea\u30f3\u30b0\u30fb\u30e2\u30c7\u30eb\u3092\u4f5c\u6210",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"\u30a6\u30a7\u30fc\u30d6\u30b7\u30a7\u30fc\u30d4\u30f3\u30b0\u3068\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u308b\u6b6a\u307f\u306e\u8ffd\u52a0",permalink:"/juce-tutorial-ja/dsp/tutorial_dsp_convolution"},next:{title:"SIMDRegister\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u305f\u6700\u9069\u5316",permalink:"/juce-tutorial-ja/dsp/tutorial_simd_register_optimisation"}},c={},d=[{value:"\u306f\u3058\u3081\u308b",id:"\u306f\u3058\u3081\u308b",level:2},{value:"What is a Delay Line?",id:"what-is-a-delay-line",level:2},{value:"What is Physical Modelling?",id:"what-is-physical-modelling",level:2},{value:"The waveguide string model",id:"the-waveguide-string-model",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3\u3092\u4f7f\u3063\u305f\u30b9\u30c8\u30ea\u30f3\u30b0\u30e2\u30c7\u30eb\u306e\u4f5c\u6210",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3\u3092\u4f7f\u3063\u305f\u30b9\u30c8\u30ea\u30f3\u30b0\u30fb\u30e2\u30c7\u30eb\u306e\u4f5c\u6210"}),"\n",(0,i.jsx)(n.p,{children:"\u30d5\u30a3\u30b8\u30ab\u30eb\u30e2\u30c7\u30ea\u30f3\u30b0\u306b\u3088\u308b\u30ea\u30a2\u30eb\u306a\u30b9\u30c8\u30ea\u30f3\u30b0\u30b9\u30e2\u30c7\u30eb\u306e\u5b9f\u88c5\u3002\u30c7\u30a3\u30ec\u30a4\u30fb\u30e9\u30a4\u30f3\u3092\u7d44\u307f\u8fbc\u3093\u3067\u3001\u30b9\u30c6\u30ec\u30aa\u97f3\u5834\u306b\u8907\u96d1\u306a\u30a8\u30b3\u30fc\u30fb\u30d1\u30bf\u30fc\u30f3\u3092\u4f5c\u308a\u51fa\u3059\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u30ec\u30d9\u30eb Advanced"}),"\n",(0,i.jsx)(n.p,{children:"\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0 Windows, macOS, Linux"}),"\n",(0,i.jsx)(n.p,{children:"\u30d7\u30e9\u30b0\u30a4\u30f3\u5f62\u5f0f\uff1a VST, AU, Standalone"}),"\n",(0,i.jsxs)(n.p,{children:["\u30af\u30e9\u30b9\uff1a ",(0,i.jsx)(n.a,{href:"https://docs.juce.com/master/classdsp_1_1ProcessorChain",title:"This variadically-templated class lets you join together any number of processor classes into a singl...",children:"dsp::ProcessorChain"}),", ",(0,i.jsx)(n.a,{href:"https://docs.juce.com/master/classdsp_1_1Gain",title:"Applies a gain to audio samples as single samples or AudioBlocks.",children:"dsp::Gain"}),", ",(0,i.jsx)(n.a,{href:"https://docs.juce.com/master/classdsp_1_1Oscillator",title:"Generates a signal based on a user-supplied function.",children:"dsp::Oscillator"}),", ",(0,i.jsx)(n.a,{href:"https://docs.juce.com/master/classdsp_1_1Convolution",title:"Performs stereo partitioned convolution of an input signal with an impulse response in the frequency ...",children:"dsp::Convolution"}),", ",(0,i.jsx)(n.a,{href:"https://docs.juce.com/master/structdsp_1_1WaveShaper",title:"Applies waveshaping to audio samples as single samples or AudioBlocks.",children:"dsp::WaveShaper"}),", ",(0,i.jsx)(n.a,{href:"https://docs.juce.com/master/classdsp_1_1Reverb",title:"Processor wrapper around juce::Reverb for easy integration into ProcessorChain.",children:"dsp::Reverb"})]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u3001C++14\u306e\u6a5f\u80fd\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u5fc5\u8981\u3067\u3059\u3002Xcode\u3068Visual Studio\u306e\u6700\u8fd1\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u306f\u3001\u3053\u306e\u30b5\u30dd\u30fc\u30c8\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002"})}),"\n",(0,i.jsx)(n.h2,{id:"\u306f\u3058\u3081\u308b",children:"\u306f\u3058\u3081\u308b"}),"\n",(0,i.jsxs)(n.p,{children:["This tutorial leads on from ",(0,i.jsx)(n.a,{href:"../tutorial_dsp_convolution/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30a6\u30a7\u30fc\u30d6\u30b7\u30a7\u30a4\u30d4\u30f3\u30b0\u3068\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u6b6a\u307f\u3092\u52a0\u3048\u308b"}),". If you haven't done so already, you should read that tutorial first."]}),"\n",(0,i.jsxs)(n.p,{children:["Download the demo project for this tutorial here: ",(0,i.jsx)(n.a,{href:"/tutorials/PIPs/DSPDelayLineTutorial.zip",children:"\u30d4\u30c3\u30d7"})," | ",(0,i.jsx)(n.a,{href:"/tutorials/ZIPs/DSPDelayLineTutorial.zip",children:"\u30b8\u30c3\u30d7"}),". Unzip the project and open the first header file in the Projucer."]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["If using the PIP version of this project, please make sure to copy the ",(0,i.jsx)(n.code,{children:"\u30ea\u30bd\u30fc\u30b9"})," folder into the generated Projucer project."]})}),"\n",(0,i.jsxs)(n.p,{children:["If you need help with this step, see ",(0,i.jsx)(n.a,{href:"../tutorial_new_projucer_project/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebProjucer\u30d1\u30fc\u30c81\uff1aProjucer\u3092\u59cb\u3081\u308b"}),"."]}),"\n",(0,i.jsx)(n.h1,{id:"the-demo-project",children:"The demo project"}),"\n",(0,i.jsx)(n.p,{children:"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u3066\u69cb\u60f3\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001IDE\u3067\u9069\u5207\u306a\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30fb\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3067\u3001\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30f3\u30fb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Xcode\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306e\u3088\u3046\u306b\u3001\u30e1\u30a4\u30f3\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5de6\u4e0a\u3067\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff1a"}),"\n",(0,i.jsx)(a.A,{src:"https://docs.juce.com/master/tutorial_dsp_introduction_standalone_screenshot1.png",caption:"Changing the deployment target in Xcode"}),"\n",(0,i.jsx)(n.p,{children:"\u30c7\u30e2\u30fb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4e0a\u534a\u5206\u306bMIDI\u30ad\u30fc\u30dc\u30fc\u30c9\u304c\u753b\u9762\u4e0a\u306b\u8868\u793a\u3055\u308c\u3001\u4e0b\u534a\u5206\u306b\u306f\u30aa\u30b7\u30ed\u30b9\u30b3\u30fc\u30d7\u3092\u901a\u3057\u3066\u4fe1\u53f7\u304c\u8996\u899a\u7684\u306b\u8868\u793a\u3055\u308c\u308b\u3002\u73fe\u5728\u3001\u9375\u76e4\u304c\u62bc\u3055\u308c\u308b\u3068\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306f\u3044\u304f\u3064\u304b\u306e\u30ea\u30d0\u30fc\u30d6\u3068\u30c7\u30a3\u30b9\u30c8\u30fc\u30b7\u30e7\u30f3\u3092\u52a0\u3048\u305f\u57fa\u672c\u7684\u306a\u30aa\u30b7\u30ec\u30fc\u30bf\u30fc\u30fb\u30b5\u30a6\u30f3\u30c9\u3092\u51fa\u529b\u3057\u307e\u3059\u3002"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Feel free to remove the effects to clearly hear the changes in each steps of the tutorial by commenting out the effects processors in the ",(0,i.jsx)(n.code,{children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30a8\u30f3\u30b8\u30f3"})," class."]})}),"\n",(0,i.jsx)(a.A,{src:"https://docs.juce.com/master/tutorial_dsp_introduction_screenshot1.png",caption:"The demo project plugin window"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"MIDI\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u304a\u6301\u3061\u306e\u5834\u5408\u306f\u3001\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u4e2d\u3001\u753b\u9762\u4e0a\u306e\u30ad\u30fc\u30dc\u30fc\u30c9\u3092\u4f7f\u3046\u4ee3\u308f\u308a\u306b\u3001MIDI\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u63a5\u7d9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002"})}),"\n",(0,i.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(n.p,{children:"\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001\u7570\u306a\u308b\u65b9\u6cd5\u3067\u4fe1\u53f7\u51e6\u7406\u3092\u53ef\u80fd\u306b\u3059\u308b2\u3064\u306e\u65b0\u3057\u3044DSP\u30b3\u30f3\u30bb\u30d7\u30c8\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff1a\u30c7\u30a3\u30ec\u30a4\u30fb\u30e9\u30a4\u30f3\u3068\u30d5\u30a3\u30b8\u30ab\u30eb\u30fb\u30e2\u30c7\u30ea\u30f3\u30b0\u3067\u3059\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u3053\u306eDSP\u7528\u8a9e\u306e\u5b9a\u7fa9\u304b\u3089\u59cb\u3081\u3088\u3046\u3002"}),"\n",(0,i.jsx)(n.h2,{id:"what-is-a-delay-line",children:"What is a Delay Line?"}),"\n",(0,i.jsx)(n.p,{children:"\u30c7\u30a3\u30ec\u30a4\u30fb\u30e9\u30a4\u30f3\u306f\u3001\u6b8b\u97ff\u7a7a\u9593\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3001\u30b5\u30a6\u30f3\u30c9\u30fb\u30b7\u30f3\u30bb\u30b7\u30b9\u3001\u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u5b9f\u88c5\u3001\u30c7\u30a3\u30ec\u30a4\u3001\u30b3\u30fc\u30e9\u30b9\u3001\u30d5\u30a7\u30a4\u30b6\u30fc\u3001\u30d5\u30e9\u30f3\u30b8\u30e3\u30fc\u306a\u3069\u306e\u53e4\u5178\u7684\u306a\u30bf\u30a4\u30e0\u30d9\u30fc\u30b9\u30fb\u30a8\u30d5\u30a7\u30af\u30c8\u306a\u3069\u3001\u5e45\u5e83\u3044\u7528\u9014\u306b\u4f7f\u7528\u3067\u304d\u308bDSP\u306e\u57fa\u672c\u30c4\u30fc\u30eb\u3067\u3059\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u57fa\u672c\u7684\u306b\u3001\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3\u306f\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u3001\u3042\u308b\u4fe1\u53f7\u3092\u30b5\u30f3\u30d7\u30eb\u6570\u3060\u3051\u9045\u3089\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u8907\u6570\u306e\u30c7\u30a3\u30ec\u30a4\u30fb\u30e9\u30a4\u30f3\u3092\u4f7f\u3044\u3001\u5225\u3005\u306e\u4fe1\u53f7\u3092\u7570\u306a\u308b\u9593\u9694\u3067\u5408\u8a08\u3059\u308b\u3053\u3068\u3067\u3001\u30c7\u30b8\u30bf\u30eb\u4fe1\u53f7\u51e6\u7406\u306e\u5927\u90e8\u5206\u3092\u4f5c\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u30a2\u30ca\u30ed\u30b0\u9818\u57df\u3067\u306f\u3001\u9045\u5ef6\u7dda\u306f\u3001\u6ce2\u306e\u4f1d\u642c\u3092\u9045\u5ef6\u3055\u305b\u308b\u305f\u3081\u306b\u3001\u30d0\u30cd\u306e\u3088\u3046\u306a\u5b9f\u969b\u306e\u7269\u7406\u7684\u306a\u62e1\u5f35\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u305f\u3002\u30c7\u30b8\u30bf\u30eb\u9818\u57df\u3067\u306f\u3001\u9045\u5ef6\u7dda\u306f\u591a\u304f\u306e\u5834\u5408\u3001\u30b5\u30fc\u30ad\u30e5\u30e9\u30fc\u30fb\u30d0\u30c3\u30d5\u30a1\u3068\u547c\u3070\u308c\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3055\u308c\u308b\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u30b5\u30fc\u30ad\u30e5\u30e9\u30fc\u30fb\u30d0\u30c3\u30d5\u30a1\u306f\u3001\u57fa\u672c\u7684\u306b\u3001\u30b5\u30f3\u30d7\u30eb\u30fb\u30d0\u30c3\u30d5\u30a1\u30fb\u30d6\u30ed\u30c3\u30af\u306e\u30b5\u30a4\u30ba\u306b\u4e00\u81f4\u3059\u308b\u30b5\u30fc\u30ad\u30e5\u30e9\u30fc\u30fb\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u305d\u308c\u81ea\u8eab\u3092\u30e9\u30c3\u30d7\u3059\u308b\u914d\u5217\u3068\u3057\u3066\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u524d\u306e\u30d6\u30ed\u30c3\u30af\u306b\u542b\u307e\u308c\u308b\u3059\u3079\u3066\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u73fe\u5728\u306e\u30d6\u30ed\u30c3\u30af\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u4fdd\u5b58\u3057\u3001\u6b21\u306e\u53cd\u5fa9\u306e\u305f\u3081\u306b\u73fe\u5728\u306e\u30b5\u30f3\u30d7\u30eb\u30d6\u30ed\u30c3\u30af\u306b\u3088\u3063\u3066\u4e0a\u66f8\u304d\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001\u30c7\u30a3\u30ec\u30a4\u30fb\u30e9\u30a4\u30f3\u3092\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u3001\u30b5\u30fc\u30ad\u30e5\u30e9\u30fc\u30fb\u30d0\u30c3\u30d5\u30a1\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059\u3002"}),"\n",(0,i.jsx)(n.h2,{id:"what-is-physical-modelling",children:"What is Physical Modelling?"}),"\n",(0,i.jsx)(n.p,{children:"\u30d5\u30a3\u30b8\u30ab\u30eb\u30fb\u30e2\u30c7\u30ea\u30f3\u30b0\u306f\u3001\u30b5\u30a6\u30f3\u30c9\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u6570\u5b66\u7684\u304a\u3088\u3073\u7269\u7406\u7684\u30e2\u30c7\u30eb\u306b\u4f9d\u5b58\u3059\u308b\u30b5\u30a6\u30f3\u30c9\u5408\u6210\u624b\u6cd5\u3092\u793a\u3059\u3002\u4ed6\u306e\u5408\u6210\u624b\u6cd5\u3068\u306f\u7570\u306a\u308a\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u51fa\u767a\u70b9\u3068\u3057\u3066\u4f7f\u7528\u305b\u305a\u3001\u7d20\u6750\u306e\u7814\u7a76\u3092\u901a\u3058\u3066\u7269\u7406\u7684\u306a\u610f\u5473\u3067\u97f3\u304c\u3069\u306e\u3088\u3046\u306b\u751f\u6210\u3055\u308c\u308b\u304b\u306b\u7126\u70b9\u3092\u5f53\u3066\u308b\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u305d\u306e\u3072\u3068\u3064\u304c\u30c7\u30b8\u30bf\u30eb\u5c0e\u6ce2\u7ba1\u3068\u547c\u3070\u308c\u308b\u30e2\u30c7\u30eb\u3067\u3001\u97f3\u97ff\u6ce2\u304c\u7ba1\u3084\u30d1\u30a4\u30d7\u306e\u4e2d\u3092\u4f1d\u642c\u3059\u308b\u7269\u7406\u30e2\u30c7\u30eb\u306b\u57fa\u3065\u3044\u3066\u3044\u308b\u3002\u3053\u308c\u3089\u306e\u6ce2\u306e\u5883\u754c\u306b\u5bfe\u3059\u308b\u53cd\u5c04\u306f\u3001\u9045\u5ef6\u7dda\u3092\u7528\u3044\u3066\u52b9\u7387\u7684\u306b\u8a08\u7b97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u3053\u306e\u30e2\u30c7\u30eb\u3092\u7528\u3044\u3066\u5f26\u697d\u5668\u306a\u3069\u306e\u591a\u304f\u306e\u697d\u5668\u306e\u97f3\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"the-waveguide-string-model",children:"The waveguide string model"}),"\n",(0,i.jsx)(n.p,{children:"\u4e00\u8a00\u3067\u8a00\u3048\u3070\u3001\u5c0e\u6ce2\u7ba1\u30b9\u30c8\u30ea\u30f3\u30b0\u30fb\u30e2\u30c7\u30eb\u306f\u3001\u632f\u52d5\u3059\u308b\u30b9\u30c8\u30ea\u30f3\u30b0\u306f\u3001\u53cd\u5bfe\u65b9\u5411\u306b\u9032\u307f\u30012\u3064\u306e\u7aef\u70b9\u3067\u8df3\u306d\u8fd4\u308b2\u3064\u306e\u6ce2\u3092\u4f7f\u3063\u3066\u30e2\u30c7\u30eb\u5316\u3067\u304d\u308b\u3068\u3044\u3046\u6982\u5ff5\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002\u3053\u306e2\u3064\u306e\u6ce2\u306e\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u6700\u7d42\u7684\u306b\u5f26\u3092\u5f3e\u3044\u305f\u3068\u304d\u306e\u7406\u60f3\u7684\u306a\u52d5\u304d\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u30012\u3064\u306e\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3\uff08\u524d\u65b9\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3\u3068\u5f8c\u65b9\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3\uff09\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u3057\u304b\u3057\u3001\u3053\u306e\u7406\u60f3\u7684\u306a\u5f26\u306e\u30e2\u30c7\u30eb\u306f\u3001\u6e1b\u8870\u304c\u8003\u616e\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u73fe\u5728\u306e\u72b6\u614b\u3067\u9759\u6b62\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u6ce2\u304c\u5883\u754c\u3067\u65b9\u5411\u3092\u5909\u3048\u3001\u305d\u306e\u6975\u6027\u304c\u53cd\u8ee2\u3059\u308b\u3068\u304d\u3001\u6ce2\u306e\u5909\u4f4d\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u6e1b\u8870\u4fc2\u6570\u3092\u7d44\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u3053\u306e\u30e2\u30c7\u30eb\u3067\u8003\u616e\u3059\u3079\u304d\u4ed6\u306e\u5909\u6570\u306f\u3001\u5f26\u3092\u306f\u3058\u304f\u4f4d\u7f6e\u3068\u3001\u5f26\u304c\u632f\u52d5\u3059\u308b\u97f3\u3092\u62fe\u3046\u4f4d\u7f6e\u3067\u3042\u308b\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u7a7a\u9593\u4e0a\u306e\u7279\u5b9a\u306e\u5834\u6240\u304b\u3089\u97f3\u3092\u8074\u304f\u306e\u3068\u540c\u3058\u3088\u3046\u306b\u30012\u3064\u306e\u6ce2\u304c\u4f1d\u64ad\u3059\u308b\u5f3e\u304f\u4f4d\u7f6e\u3068\u62fe\u3046\u4f4d\u7f6e\u3092\u7d71\u5408\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u6700\u5f8c\u306b\u306a\u308b\u304c\u3001\u7269\u7406\u7684\u306a\u5f26\u3067\u8d77\u3053\u308b\u81ea\u7136\u73fe\u8c61\u306b\u3001\u9ad8\u3044\u5468\u6ce2\u6570\u306e\u6e1b\u8870\u304c\u4f4e\u3044\u5468\u6ce2\u6570\u3088\u308a\u901f\u3044\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308b\u3002\u3053\u308c\u306f\u3001\u5883\u754c\u306e\u4e00\u7aef\u306b\u30ed\u30fc\u30d1\u30b9\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u3001\u3053\u306e\u6e1b\u8870\u6642\u9593\u306e\u4e0d\u4e00\u81f4\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u6211\u3005\u306e\u30e2\u30c7\u30eb\u306b\u7c21\u5358\u306b\u7d44\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001\u30c7\u30a3\u30ec\u30a4\u30fb\u30e9\u30a4\u30f3\u3092\u4f7f\u3063\u3066\u3053\u306e\u30c7\u30b8\u30bf\u30eb\u5c0e\u6ce2\u7ba1\u30e2\u30c7\u30eb\u3092\u5b9f\u88c5\u3057\u3001\u5f26\u3092\u5f3e\u3044\u305f\u3068\u304d\u306b\u5f26\u306e\u5883\u754c\u3067\u53cd\u5c04\u3059\u308b\u6ce2\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u307e\u3059\u3002"}),"\n",(0,i.jsx)(n.h1,{id:"implement-a-delay-line",children:"Implement a delay line"}),"\n",(0,i.jsx)(n.p,{children:"\u307e\u305a\u3001\u5358\u7d14\u306a\u30c7\u30a3\u30ec\u30a4\u30fb\u30e9\u30a4\u30f3\u3092\u30d9\u30af\u30bf\u30fc\u3092\u4f7f\u3063\u3066\u5186\u5f62\u30d0\u30c3\u30d5\u30a1\u3068\u3057\u3066\u5b9f\u88c5\u3057\u3066\u307f\u3088\u3046\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3"})," class, there are a couple of self-explanatory helper functions already defined to facilitate the implementation such as ",(0,i.jsx)(n.code,{children:"\u30b5\u30a4\u30ba"})," and ",(0,i.jsx)(n.code,{children:"\u30ea\u30b5\u30a4\u30ba()"})," methods, a ",(0,i.jsx)(n.code,{children:"\u30af\u30ea\u30a2"})," function and a ",(0,i.jsx)(n.code,{children:"\u30d0\u30c3\u30af()"})," function that retrieves the least recent sample in the buffer."]}),"\n",(0,i.jsxs)(n.p,{children:["We first implement the ",(0,i.jsx)(n.code,{children:"\u30d7\u30c3\u30b7\u30e5"})," function which adds a new sample by overwriting the least recently added sample [1] and updates the least recent index variable by wrapping the index by the size of the circular buffer [2]:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"void push (Type valueToAdd) noexcept\n    {\n        rawData[leastRecentIndex] = valueToAdd; // [1].\n        leastRecentIndex = leastRecentIndex == 0 ? size() - 1 : leastRecentIndex - 1; // [2].\n    }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Then we complete the ",(0,i.jsx)(n.code,{children:"\u30b2\u30c3\u30c8"})," function by returning the sample located at an offset specified by the function argument while making sure that the index wraps around the vector [3]. Notice here that we make sure the delay does not exceed the size of the buffer."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\u578b get (size_t delayInSamples) const noexcept\n    {\n        jassert (delayInSamples >= 0 && delayInSamples < size())\uff1b\n \n        return rawData[(leastRecentIndex + 1 + delayInSamples) % size()]; // [3].\n    }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Next, we fill in the ",(0,i.jsx)(n.code,{children:"set()"})," function by assigning the sample at an offset specified by the function argument while making sure that the index wraps around the vector [4]. Here again, we make sure the delay does not exceed the size of the buffer."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"void set (size_t delayInSamples, Type newValue) noexcept\n    {\n        jassert (delayInSamples >= 0 && delayInSamples < size())\uff1b\n \n        rawData[(leastRecentIndex + 1 + delayInSamples) % size()] = newValue; // [4].\n    }\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u3053\u308c\u3067\u30b7\u30f3\u30d7\u30eb\u306a\u30c7\u30a3\u30ec\u30a4\u30fb\u30e9\u30a4\u30f3\u306e\u5b9f\u88c5\u306f\u5b8c\u4e86\u3060\u3002"}),"\n",(0,i.jsx)(n.h1,{id:"incorporate-a-delay-effect",children:"Incorporate a delay effect"}),"\n",(0,i.jsx)(n.p,{children:"\u57fa\u672c\u7684\u306a\u30c7\u30a3\u30ec\u30a4\u30fb\u30e9\u30a4\u30f3\u30fb\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u306e\u3067\u3001\u30b7\u30b0\u30ca\u30eb\u30fb\u30c1\u30a7\u30a4\u30f3\u306b\u30b9\u30c6\u30ec\u30aa\u30fb\u30c7\u30a3\u30ec\u30a4\u30fb\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u7d44\u307f\u8fbc\u3093\u3067\u307f\u307e\u3057\u3087\u3046\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"\u9045\u5ef6"})," class, there are multiple parameters that can be tweaked to change the behaviour of our delay effect and these include delay times for individual channels, the maximum delay time allowed, the dry/wet level of the effect and the amount of feedback."]}),"\n",(0,i.jsx)(n.p,{children:"\u3053\u308c\u3089\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3068\u30c7\u30a3\u30ec\u30a4\u30fb\u30e9\u30a4\u30f3\u306e\u5b9f\u88c5\u3092\u4f7f\u3048\u3070\u3001\u3055\u307e\u3056\u307e\u306a\u30c7\u30a3\u30ec\u30a4\u30fb\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u601d\u3044\u901a\u308a\u306b\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304c\u3001\u307e\u305a\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u304b\u3089\u898b\u3066\u3044\u3053\u3046\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"{\n\u3092\u516c\u958b\u3057\u307e\u3059\uff1a\n    //==============================================================================\n    \u30c7\u30a3\u30ec\u30a4()\n    {\n        setMaxDelayTime (2.0f)\uff1b\n        setDelayTime (0, 0.7f)\uff1b\n        setDelayTime (1, 0.5f)\uff1b\n        setWetLevel (0.8f)\uff1b\n        setFeedback (0.5f)\uff1b\n    }\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u3053\u308c\u3089\u306e\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u306f\u3001\u4e3b\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u683c\u7d0d\u3059\u308b\u305f\u3081\u306b\u5bfe\u5fdc\u3059\u308b\u30e1\u30f3\u30d0\u5909\u6570\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u304c\u3001\u4e2d\u306b\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5909\u66f4\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306b\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u30ea\u30b5\u30a4\u30ba\u3092\u5fc5\u8981\u3068\u3059\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["One such case is the ",(0,i.jsx)(n.code,{children:"setMaxDelayTime()"})," function defined below which calls the ",(0,i.jsx)(n.code,{children:"updateDelayLineSize()"})," helper function [1]:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"void setMaxDelayTime (Type newValue)\n    {\n        jassert (newValue > Type (0))\uff1b\n        maxDelayTime = newValue\uff1b\n        updateDelayLineSize(); // [1].\n    }\n"})}),"\n",(0,i.jsx)(n.p,{children:"Complete the following function which ensures that the circular buffers of all the delay lines are large enough to accomodate any delay time up to the max delay time by resizing the vectors [2]:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"void updateDelayLineSize()\n    {\n        auto delayLineSizeSamples = (size_t) std::ceil (maxDelayTime * sampleRate)\uff1b\n \n        for (auto& dline : delayLines)\n            dline.resize (delayLineSizeSamples); // [2].\n    }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Another noteworthy case is in the ",(0,i.jsx)(n.code,{children:"setDelayTime()"})," function of individual channels where a parameter change causes a call to the ",(0,i.jsx)(n.code,{children:"updateDelayTime()"})," helper function [3] as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"void setDelayTime (size_t channel, Type newValue)\n    {\n        if (channel >= getNumChannels())\n        {\n            jassertfalse\uff1b\n            \u3092\u8fd4\u3057\u307e\u3059\uff1b\n        }\n \n        jassert (newValue >= Type (0))\uff1b\n        delayTimes[channel] = newValue\uff1b\n \n        updateDelayTime(); // [3].\n    }\n"})}),"\n",(0,i.jsx)(n.p,{children:"Implement this helper function that recalculates the delay times in samples for all the channels based on the new parameter change [4]:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"void updateDelayTime() noexcept\n    {\n        for (size_t ch = 0; ch < maxNumChannels; ++ch)\n            delayTimesSample[ch] = (size_t) juce::roundToInt (delayTimes[ch] * sampleRate)\uff1b\n    }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"\u30ea\u30bb\u30c3\u30c8"})," function, we reset the filters for each channel [5] which we will use in the next section of the tutorial and clear any old sample remaining in the delay lines [6]:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"void reset() noexcept\n    {\n        for (auto& f : filters)\n            f.reset(); // [5].\n \n        for (auto& dline : delayLines)\n            dline.clear(); // [6].\n    }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"prepare()"})," function, we make sure that the size of the delay lines [7] and the delay times in samples [8] are still correct in case the sample rate was changed between sample blocks and initialise the filters with a low-pass filter for now [9]:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"void prepare (const juce::dsp::ProcessSpec& spec)\n{\n    jassert (spec.numChannels <= maxNumChannels);\n    sampleRate = (Type) spec.sampleRate;\n    updateDelayLineSize(); // [7]\n    updateDelayTime();     // [8]\n \n    filterCoefs = juce::dsp::IIR::Coefficients::makeFirstOrderLowPass (sampleRate, Type (1e3)); // [9].\n \n    for (auto& f : filters)\n    {\n        f.prepare (spec)\uff1b\n        f.coefficients = filterCoefs\uff1b\n    }\n}\njassert#definejassert(expression)\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u975e\u4f9d\u5b58\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30de\u30af\u30ed\u5b9a\u7fa9 juce_PlatformDefs.h:165\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now let's deal with the ",(0,i.jsx)(n.code,{children:"\u30d7\u30ed\u30bb\u30b9()"})," function to actually implement the delay effect:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"template void process (const ProcessContext& context) noexcept\n{\n    auto& inputBlock = context.getInputBlock()\uff1b\n    auto& outputBlock = context.getOutputBlock()\uff1b\n    auto numSamples = outputBlock.getNumSamples()\uff1b\n    auto numChannels = outputBlock.getNumChannels()\uff1b\n \n    jassert (inputBlock.getNumSamples() == numSamples)\uff1b\n    jassert (inputBlock.getNumChannels() == numChannels)\uff1b\n \n    for (size_t ch = 0; ch < numChannels; ++ch)\n    {\n        auto* input = inputBlock .getChannelPointer (ch)\uff1b\n        auto* output = outputBlock.getChannelPointer (ch)\uff1b\n        auto& dline = delayLines[ch]\uff1b\n        auto delayTime = delayTimesSample[ch]\uff1b\n        auto& filter = filters[ch]\uff1b\n \n        for (size_t i = 0; i < numSamples; ++i)\n        {\n            auto delayedSample = dline.get (delayTime); // [10].\n            auto inputSample = input[i]; // [11].\n            auto dlineInputSample = std::tanh (inputSample + feedback * delayedSample); // [12].\n            dline.push (dlineInputSample); // [13].\n            auto outputSample = inputSample + wetLevel * delayedSample; // [14].\n            output[i] = outputSample; // [15].\n        }\n    }\n}\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"[10]: First, for each sample in the buffer block of each channel, retrieve the delayed sample from the corresponding delay line."}),"\n",(0,i.jsx)(n.li,{children:"[11]: Then get the current sample from the input block."}),"\n",(0,i.jsxs)(n.li,{children:["[12]: Next, calculate the sample to be pushed into the delay line by mixing the input sample with the delay line output weighted with the feedback parameter using ",(0,i.jsx)(n.code,{children:"\u6a19\u6e96::tanh()"}),". The hyperbolic tangent function allows us to smoothly combine the two signals without clipping the summed sample and provides a natural decay."]}),"\n",(0,i.jsx)(n.li,{children:"[13]: We then push the sample calculated in the previous step into the delay line."}),"\n",(0,i.jsx)(n.li,{children:"[14]: Finally, calculate the output sample by mixing the input sample with the delay line output weighted with the dry/wet parameter."}),"\n",(0,i.jsx)(n.li,{children:"[15]: Then assign the sample to the output block."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["If we run this code after implementing the above changes in the ",(0,i.jsx)(n.code,{children:"\u9045\u5ef6"})," class, we should be able to hear the delay effect on the oscillator signal."]}),"\n",(0,i.jsx)(a.A,{src:"https://docs.juce.com/master/tutorial_dsp_delay_line_screenshot1.png",caption:"Delaying the oscillator signal"}),"\n",(0,i.jsx)(n.p,{children:"\u69d8\u3005\u306a\u30c7\u30a3\u30ec\u30a4\u30fb\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u8a66\u3057\u3001\u30c7\u30a3\u30ec\u30a4\u30fb\u30d1\u30bf\u30fc\u30f3\u304c\u30b9\u30c6\u30ec\u30aa\u30fb\u30d5\u30a3\u30fc\u30eb\u30c9\u5185\u3067\u3069\u306e\u3088\u3046\u306b\u5909\u5316\u3059\u308b\u304b\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,i.jsx)(n.h1,{id:"filter-the-delay-effect",children:"Filter the delay effect"}),"\n",(0,i.jsx)(n.p,{children:"\u307b\u3068\u3093\u3069\u306e\u30c7\u30a3\u30ec\u30a4\u30fb\u30a8\u30d5\u30a7\u30af\u30c8\u306f\u3001\u81ea\u7136\u754c\u3067\u767a\u751f\u3059\u308b\u3088\u3046\u306a\u3001\u3088\u308a\u30ea\u30a2\u30eb\u306a\u30b5\u30a6\u30f3\u30c9\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306b\u3001\u4fe1\u53f7\u304c\u7e70\u308a\u8fd4\u3057\u6e1b\u8870\u3059\u308b\u969b\u306e\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3092\u7d44\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u3001\u30c7\u30a3\u30ec\u30a4\u30fb\u30b5\u30a6\u30f3\u30c9\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u304b\u3051\u3066\u307f\u307e\u3057\u3087\u3046\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["This can be achieved very easily by simply changing one line in the ",(0,i.jsx)(n.code,{children:"\u30d7\u30ed\u30bb\u30b9()"})," function of the ",(0,i.jsx)(n.code,{children:"\u9045\u5ef6"})," class as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"template void process (const ProcessContext& context) noexcept\n{\n    //...\n \n    for (size_t ch = 0; ch < numChannels; ++ch)\n    {\n        //...\n \n        for (size_t i = 0; i < numSamples; ++i)\n        {\n            auto delayedSample = filter.processSample (dline.get (delayTime)); // [1].\n            auto inputSample = input[i]\uff1b\n            auto dlineInputSample = std::tanh (inputSample + feedback * delayedSample)\uff1b\n            dline.push (dlineInputSample)\uff1b\n            auto outputSample = inputSample + wetLevel * delayedSample\uff1b\n            output[i] = outputSample\uff1b\n        }\n    }\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Here we simply call the ",(0,i.jsx)(n.code,{children:"processSample()"})," function on the filter object by passing the delayed sample from the delay line [1]."]}),"\n",(0,i.jsxs)(n.p,{children:["Change the filter type to a high-pass filter in the ",(0,i.jsx)(n.code,{children:"prepare()"})," function by swapping the coefficients and calling the ",(0,i.jsx)(n.code,{children:"makeFirstOrderHighPass()"})," function [2] as shown here:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"void prepare (const juce::dsp::ProcessSpec& spec)\n{\n    //...\n    filterCoefs = juce::dsp::IIR::Coefficients::makeFirstOrderHighPass (sampleRate, Type (1e3)); // [2].\n    //...\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ea\u30d4\u30fc\u30c8\u56de\u6570\u304c\u5897\u3048\u308b\u306b\u3064\u308c\u3066\u3001\u3088\u308a\u660e\u308b\u3044\u9045\u5ef6\u97f3\u304c\u5f97\u3089\u308c\u308b\u306f\u305a\u3060\u3002"}),"\n",(0,i.jsx)(a.A,{src:"https://docs.juce.com/master/tutorial_dsp_delay_line_screenshot2.png",caption:"Filtering the delayed signal"}),"\n",(0,i.jsx)(n.p,{children:"\u69d8\u3005\u306a\u7a2e\u985e\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u4f7f\u3063\u3066\u9045\u5ef6\u97f3\u3092\u51e6\u7406\u3057\u3001\u7e70\u308a\u8fd4\u3055\u308c\u308b\u4fe1\u53f7\u306e\u97f3\u304c\u3069\u306e\u3088\u3046\u306b\u5909\u5316\u3059\u308b\u304b\u3092\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,i.jsx)(n.h1,{id:"integrate-a-waveguide-string-model",children:"Integrate a waveguide string model"}),"\n",(0,i.jsx)(n.p,{children:"\u9045\u5ef6\u52b9\u679c\u306e\u305f\u3081\u306b\u30c7\u30a3\u30ec\u30a4\u30fb\u30e9\u30a4\u30f3\u3092\u90fd\u5408\u3088\u304f\u5b9f\u88c5\u3057\u305f\u306e\u3067\u3001\u540c\u3058\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u5c0e\u6ce2\u7ba1\u30b9\u30c8\u30ea\u30f3\u30b0\u30fb\u30e2\u30c7\u30eb\u3092\u7d71\u5408\u3059\u308b\u305f\u3081\u306b\u540c\u3058\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"\u5c0e\u6ce2\u7ba1\u6587\u5b57\u5217"})," class, there are multiple parameters that can be tweaked to change the behaviour of our string model and these include the trigger position, the pickup position and the decay time for the damping of the strings."]}),"\n",(0,i.jsx)(n.p,{children:"\u30c7\u30d5\u30a9\u30eb\u30c8\u30fb\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u3067\u5b9a\u7fa9\u3055\u308c\u3001\u305d\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u306f\u5bfe\u5fdc\u3059\u308b\u30e1\u30f3\u30d0\u30fc\u5909\u6570\u3092\u6b21\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\u3092\u516c\u958b\u3057\u307e\u3059\uff1a\n    //==============================================================================\n    \u5c0e\u6ce2\u7ba1\u6587\u5b57\u5217()\n    {\n        setTriggerPosition(Type (0.2))\uff1b\n        setPickupPosition (Type (0.8))\uff1b\n        setDecayTime (Type (0.5))\uff1b\n    }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["These helper functions also call the ",(0,i.jsx)(n.code,{children:"updateParameters()"})," function which initialises various variables such as the size of the delay lines, the pickup indices relative to the delay lines, the trigger index relative to the forward delay line and the filter coefficients as well as the decay coefficient based on the decay time."]}),"\n",(0,i.jsx)(n.p,{children:"\u4ee5\u4e0b\u306b\u8aac\u660e\u3059\u308b\u3088\u3046\u306b\u3001\u3053\u306e\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u306e\u5b9f\u88c5\u3092\u8ffd\u52a0\u3059\u308b\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"void updateParameters()\n{\n    auto length = (size_t) juce::roundToInt (sampleRateHz / freqHz); // [1]\n    forwardDelayLine .resize (length);\n    backwardDelayLine.resize (length);\n \n    forwardPickupIndex  = (size_t) juce::roundToInt (jmap (pickupPos, Type (0), Type (length / 2 - 1)));            // [2]\n    backwardPickupIndex = length - 1 - forwardPickupIndex;\n \n    forwardTriggerIndex = (size_t) juce::roundToInt (jmap (triggerPos, Type (0), Type (length / 2 - 1)));           // [3]\n \n    filter.coefficients = juce::dsp::IIR::Coefficients::makeFirstOrderLowPass (sampleRateHz, 4 * freqHz); // [4].\n \n    decayCoef = juce::jmap (decayTime, std::pow (Type (0.999), Type (length)), std::pow (Type (0.99999), Type (length))); // [5].\n \n    reset()\u3092\u5b9f\u884c\u3059\u308b\uff1b\n}\njmapconstexpr Type jmap(Type value0To1, Type targetRangeMin, Type targetRangeMax)\u6b63\u898f\u5316\u3055\u308c\u305f\u5024(0\u304b\u30891\u306e\u9593)\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u7bc4\u56f2\u306b\u30ea\u30de\u30c3\u30d7\u3059\u308b\u3002\u5b9a\u7fa9 juce_MathsFunctions.h:369\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"[1]: First, we resize the delay lines to the sample rate over the fundamental frequency of the note played. This is taken from the fact that the fundamental frequency is equal to the sampling frequency over the number of samples needed in the loop."}),"\n",(0,i.jsx)(n.li,{children:"[2]: Next, we retrieve the index of the pickup position on the forward delay line by mapping the variable in the range of 0.0 .. 1.0 to the range of 0 to half of the delay line length. This is to accomodate the full cycle which includes the two directions of the travelling wave with the polarity flipping. The index of the pickup position on the backward delay line is calculated by simply taking the inverse of the forward index."}),"\n",(0,i.jsx)(n.li,{children:"[3]: The index of the trigger position on the forward delay line is mapped in the same way from the range of 0.0 .. 1.0 to the range of 0 to half of the delay line length."}),"\n",(0,i.jsx)(n.li,{children:"[4]: Then the coefficients of the low-pass filter that simulates the decay behaviour are set at a frequency that is four times higher than its fundamental."}),"\n",(0,i.jsx)(n.li,{children:"[5]: Finally, the decay coefficient is calculated from the decay time by mapping from the range of 0.0 .. 1.0 to the range of 0.999^\u9577\u3055 to 0.99999^\u9577\u3055. This produces values close to 1 which depicts the very little damping that actually happens on physical vibrating strings."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"\u30ea\u30bb\u30c3\u30c8"})," function, we reset the delay lines to clear any old sample remaining:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"void reset() noexcept\n    {\n        forwardDelayLine .clear()\uff1b\n        backwardDelayLine.clear()\uff1b\n    }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"prepare()"})," function, we create a temporary audio block that will be used later for processing [6] and make sure that the parameters are still correct in case the sample rate was changed between sample blocks by calling the ",(0,i.jsx)(n.code,{children:"updateParameters()"})," function again [7]:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"    void prepare (const juce::dsp::ProcessSpec& spec)\n    {\n        sampleRateHz = (Type) spec.sampleRate;\n        tempBlock = juce::dsp::AudioBlock(heapBlock, spec.numChannels, spec.maximumBlockSize); // [6].\n        filter.prepare (spec)\uff1b\n        updateParameters(); // [7].\n    }\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u64a5\u5f26\u306b\u3088\u3063\u3066\u5f15\u304d\u8d77\u3053\u3055\u308c\u308b\u5f26\u306e\u52b1\u632f\u3092\u5f15\u304d\u8d77\u3053\u3059\u306b\u306f\u30012\u672c\u306e\u9045\u5ef6\u7dda\u306b\u3088\u3063\u3066\u8868\u3055\u308c\u308b\u4e21\u65b9\u306e\u6ce2\u306e\u521d\u671f\u5909\u4f4d\u3092\u8a2d\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["To do this in the ",(0,i.jsx)(n.code,{children:"\u30c8\u30ea\u30ac\u30fc()"})," function, iterate first between the samples contained from the start of the delay line to the index of the trigger position, calculate the values for each sample by mapping the indices to ascending values reaching half of the note velocity and assigning these to the delay lines in opposite directions [8]. Do the same for the samples contained between the index of the trigger position to the end of the delay line with descending values from half of the note velocity [9]."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"void trigger (Type velocity) noexcept\n    {\n        jassert (velocity >= Type (0) && velocity <= Type (1))\uff1b\n \n        for (size_t i = 0; i <= forwardTriggerIndex; ++i) // [8].\n        {\n            auto value = juce::jmap (Type (i), Type (0), Type (forwardTriggerIndex), Type (0), velocity / 2)\uff1b\n            forwardDelayLine .set (i, value)\uff1b\n            backwardDelayLine.set (getDelayLineLength() - 1 - i, value)\uff1b\n        }\n \n        for (size_t i = forwardTriggerIndex; i < getDelayLineLength(); ++i) // [9].\n        {\n            auto value = juce::jmap (Type (i), Type (forwardTriggerIndex), Type (getDelayLineLength() - 1), velocity / 2, Type (0))\uff1b\n            forwardDelayLine .set (i, value)\uff1b\n            backwardDelayLine.set (getDelayLineLength() - 1 - i, value)\uff1b\n        }\n    }\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u30d0\u30c3\u30d5\u30a1\u30d6\u30ed\u30c3\u30af\u5185\u306e\u3059\u3079\u3066\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u30b5\u30f3\u30d7\u30eb\u751f\u6210\u306e1\u53cd\u5fa9\u306e\u307f\u3092\u8fd4\u3059\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5ba3\u8a00\u3059\u308b\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\u30bf\u30a4\u30d7 processSample() noexcept\n    {\n        auto forwardOut = forwardDelayLine .back(); // [10].\n        auto backwardOut = backwardDelayLine.back(); // [11].\n \n        forwardDelayLine .push (-backwardOut); // [12].\n        backwardDelayLine.push (-decayCoef * filter.processSample (forwardOut)); // [13].\n \n        return forwardDelayLine.get (forwardPickupIndex) + backwardDelayLine.get (backwardPickupIndex); // [14].\n    }\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[10]: First, we retrieve the least recent sample from the circular buffer of the forward delay line by calling the ",(0,i.jsx)(n.code,{children:"\u30d0\u30c3\u30af()"})," function declared earlier."]}),"\n",(0,i.jsx)(n.li,{children:"[11]: We do the same for the least recent sample of the backward delay line."}),"\n",(0,i.jsx)(n.li,{children:"[12]: Next, we have to push this last sample located at the boundary of the backward delay line into the forward delay line by inverting the polarity."}),"\n",(0,i.jsx)(n.li,{children:"[13]: Then, we do the same for the other delay line but this time instead we filter the sample with the low-pass filter and multiply by the decay coefficient to apply dampening before inverting the polarity and pushing the sample into the circular buffer."}),"\n",(0,i.jsx)(n.li,{children:"[14]: Finally, we return the recorded sample from the pickup location by summing the signal from both delay lines at their respective pickup indices."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"\u30d7\u30ed\u30bb\u30b9()"})," function, simply process all the samples in the buffer block by calling the ",(0,i.jsx)(n.code,{children:"processSample()"})," helper function and assigning the values to the temporary block created earlier [15]. Then copy the samples to all channels in the audio block [16] and add the content of the temporary block into the output block along with the original content contained in the input block [17]."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"    template void process (const ProcessContext& context) noexcept\n    {\n        auto&& outBlock = context.getOutputBlock()\uff1b\n        auto numSamples = outBlock.getNumSamples()\uff1b\n        auto* dst = tempBlock.getChannelPointer (0)\uff1b\n \n        for (size_t i = 0; i < numSamples; ++i) // [15].\n            dst[i] = processSample()\uff1b\n \n        for (size_t ch = 1; ch < tempBlock.getNumChannels(); ++ch) // [16].\n            juce::FloatVectorOperations::copy (tempBlock.getChannelPointer (ch)\u3001\n                                               tempBlock.getChannelPointer (0)\u3001\n                                               (int) numSamples)\uff1b\n \n        outBlock.copyFrom (context.getInputBlock()).add (tempBlock.getSubBlock (0, outBlock.getNumSamples()))\uff1b\n    }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"\u58f0"})," class, add a ",(0,i.jsx)(n.code,{children:"\u5c0e\u6ce2\u7ba1\u6587\u5b57\u5217"})," processor to the processor chain [18] and add its corresponding index in the enum [19]."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"    enum\n    {\n        oscIndex,\n        stringIndex,        // [19]\n        masterGainIndex\n    };\n \n    juce::dsp::ProcessorChain, WaveguideString, juce::dsp::Gain> processorChain; // [18].\n};\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"noteStarted()"})," function, remove the line that sets the level of the oscillator as we will be using the waveguide string model to generate sounds. Retrieve a reference to the string model from the processor chain [20], set the fundamental frequency of the string to the frequency of the note played [21] and trigger the plucking by calling the ",(0,i.jsx)(n.code,{children:"\u30c8\u30ea\u30ac\u30fc()"})," function with the note velocity [22]."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"    void noteStarted() override\n    {\n        auto velocity = getCurrentlyPlayingNote().noteOnVelocity.asUnsignedFloat();\n        auto freqHz = (float) getCurrentlyPlayingNote().getFrequencyInHertz();\n \n        processorChain.get().setFrequency (freqHz, true);\n \n        //processorChain.get().setLevel (velocity);\n \n        auto& stringModel = processorChain.get(); // [20]\n        stringModel.setFrequency (freqHz); // [21].\n        stringModel.trigger (velocity); // [22].\n    }\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3001\u3069\u306e\u3088\u3046\u306b\u805e\u3053\u3048\u308b\u304b\u898b\u3066\u307f\u3088\u3046\u3002"}),"\n",(0,i.jsx)(a.A,{src:"https://docs.juce.com/master/tutorial_dsp_delay_line_screenshot3.png",caption:"Delaying the waveguide string signal"}),"\n",(0,i.jsx)(n.p,{children:"\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\uff0f\u30c8\u30ea\u30ac\u30fc\u306e\u4f4d\u7f6e\u3084\u30c7\u30a3\u30b1\u30a4\u30fb\u30bf\u30a4\u30e0\u3001\u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u7a2e\u985e\u306a\u3069\u3001\u3055\u307e\u3056\u307e\u306a\u5c0e\u6ce2\u7ba1\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u8a66\u3057\u3001\u751f\u6210\u3055\u308c\u308b\u30b9\u30c8\u30ea\u30f3\u30b0\u30fb\u30b5\u30a6\u30f3\u30c9\u306b\u3069\u306e\u3088\u3046\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u304b\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The source code for this modified version of the code can be found in the ",(0,i.jsx)(n.code,{children:"DSPDelayLineTutorial_02.h"})," file of the demo project."]})}),"\n",(0,i.jsx)(n.h1,{id:"\u6982\u8981",children:"\u6982\u8981"}),"\n",(0,i.jsx)(n.p,{children:"\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001\u30b9\u30c8\u30ea\u30f3\u30b0\u30fb\u30e2\u30c7\u30eb\u3068\u9045\u5ef6\u7dda\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3057\u305f\u3002\u7279\u306b"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u30d5\u30a3\u30b8\u30ab\u30eb\u30e2\u30c7\u30ea\u30f3\u30b0\u3068\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3\u306e\u57fa\u790e\u3092\u5b66\u3076\u3002"}),"\n",(0,i.jsx)(n.li,{children:"\u30b7\u30f3\u30d7\u30eb\u306a\u30bf\u30a4\u30e0\u30d9\u30fc\u30b9\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u30d9\u30fc\u30b9\u3068\u306a\u308b\u30c7\u30a3\u30ec\u30a4\u30e9\u30a4\u30f3\u3092\u5b9f\u88c5\u3002"}),"\n",(0,i.jsx)(n.li,{children:"\u30c7\u30a3\u30ec\u30a4\u30fb\u30e9\u30a4\u30f3\u3092\u7d44\u307f\u8fbc\u3093\u3067\u3001\u30b9\u30c6\u30ec\u30aa\u3067\u9762\u767d\u3044\u30c7\u30a3\u30ec\u30a4\u52b9\u679c\u3092\u751f\u307f\u51fa\u3059\u3002"}),"\n",(0,i.jsx)(n.li,{children:"\u7269\u7406\u30e2\u30c7\u30ea\u30f3\u30b0\u6280\u8853\u306b\u57fa\u3065\u304f\u5c0e\u6ce2\u7ba1\u30b9\u30c8\u30ea\u30f3\u30b0\u30e2\u30c7\u30eb\u3092\u7d71\u5408\u3002"}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:["Return to part 1 of this tutorial to brush up on oscillators and filters here: ",(0,i.jsx)(n.a,{href:"../tutorial_dsp_introduction/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebDSP\u5165\u9580"})]}),(0,i.jsxs)(n.p,{children:["Jump back to part 2 of this tutorial to understand distortion and convolution here: ",(0,i.jsx)(n.a,{href:"../tutorial_dsp_convolution/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30a6\u30a7\u30fc\u30d6\u30b7\u30a7\u30a4\u30d4\u30f3\u30b0\u3068\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u6b6a\u307f\u3092\u52a0\u3048\u308b"})]})]}),"\n",(0,i.jsx)(n.h1,{id:"\u95a2\u9023\u9805\u76ee",children:"\u95a2\u9023\u9805\u76ee"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../tutorial_simple_fft/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u9ad8\u901f\u30d5\u30fc\u30ea\u30a8\u5909\u63db"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../tutorial_spectrum_analyser/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u4fe1\u53f7\u306e\u5468\u6ce2\u6570\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u53ef\u8996\u5316\u3059\u308b"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../tutorial_simd_register_optimisation/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebSIMDRegister\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u305f\u6700\u9069\u5316"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../tutorial_dsp_introduction/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebDSP\u5165\u9580"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../tutorial_dsp_convolution/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30a6\u30a7\u30fc\u30d6\u30b7\u30a7\u30a4\u30d4\u30f3\u30b0\u3068\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u6b6a\u307f\u3092\u52a0\u3048\u308b"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},3449:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(4848);function s(e){let{src:n,caption:t,alt:s,width:a,height:l}=e;return(0,i.jsxs)("figure",{children:[(0,i.jsx)("img",{src:n,alt:s||t,width:a,height:l}),(0,i.jsx)("figcaption",{children:(0,i.jsx)("b",{children:t})})]})}},6378:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(4848);function s(e){let{path:n}=e;return(0,i.jsx)("p",{children:(0,i.jsx)("a",{href:"https://docs.juce.com/master/"+n,children:"\ud83d\udcda Source Page"})})}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var i=t(6540);const s={},a=i.createContext(s);function l(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);