"use strict";(self.webpackChunkjuce_tutorial_ja=self.webpackChunkjuce_tutorial_ja||[]).push([[8706],{3340:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>h});var n=s(4848),i=s(8453),a=s(3449);s(6378);const r={title:"\u30de\u30eb\u30c1\u30fb\u30dd\u30ea\u30d5\u30a9\u30cb\u30c3\u30af\u30fb\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b",sidebar_position:4},o="\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30de\u30eb\u30c1\u30fb\u30dd\u30ea\u30d5\u30a9\u30cb\u30c3\u30af\u30fb\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b",c={id:"midi/tutorial_mpe_introduction",title:"\u30de\u30eb\u30c1\u30fb\u30dd\u30ea\u30d5\u30a9\u30cb\u30c3\u30af\u30fb\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b",description:"MPE\u898f\u683c\u306e\u57fa\u790e\u3068MPE\u306b\u5bfe\u5fdc\u3057\u305f\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092ROLI Seaboard Rise\u306b\u63a5\u7d9a\u3057\u307e\u3059\uff01",source:"@site/docs/midi/tutorial_mpe_introduction.mdx",sourceDirName:"midi",slug:"/midi/tutorial_mpe_introduction",permalink:"/juce-tutorial-ja/midi/tutorial_mpe_introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/m1m0zzz/juce-tutorial-ja/tree/main/docs/midi/tutorial_mpe_introduction.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"\u30de\u30eb\u30c1\u30fb\u30dd\u30ea\u30d5\u30a9\u30cb\u30c3\u30af\u30fb\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"MIDI\u30a4\u30d9\u30f3\u30c8\u306e\u51e6\u7406",permalink:"/juce-tutorial-ja/midi/tutorial_handling_midi_events"},next:{title:"MPE\u30be\u30fc\u30f3\u306e\u7406\u89e3",permalink:"/juce-tutorial-ja/midi/tutorial_mpe_zones"}},l={},h=[{value:"\u306f\u3058\u3081\u308b",id:"\u306f\u3058\u3081\u308b",level:2},{value:"The visualiser",id:"the-visualiser",level:2},{value:"Other setting up",id:"other-setting-up",level:2},{value:"The MIDI input callback",id:"the-midi-input-callback",level:3},{value:"The audio callback",id:"the-audio-callback",level:3},{value:"The MPEInstrument class",id:"the-mpeinstrument-class",level:2},{value:"The MPESynthesiser class",id:"the-mpesynthesiser-class",level:2},{value:"The MPESynthesiserVoice class",id:"the-mpesynthesiservoice-class",level:2},{value:"Starting and stopping voices",id:"starting-and-stopping-voices",level:3},{value:"Parameter changes",id:"parameter-changes",level:3},{value:"Generating the audio",id:"generating-the-audio",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30de\u30eb\u30c1\u30dd\u30ea\u30d5\u30a9\u30cb\u30c3\u30af\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30de\u30eb\u30c1\u30fb\u30dd\u30ea\u30d5\u30a9\u30cb\u30c3\u30af\u30fb\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"}),"\n",(0,n.jsx)(t.p,{children:"MPE\u898f\u683c\u306e\u57fa\u790e\u3068MPE\u306b\u5bfe\u5fdc\u3057\u305f\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092ROLI Seaboard Rise\u306b\u63a5\u7d9a\u3057\u307e\u3059\uff01"}),"\n",(0,n.jsx)(t.p,{children:"\u30ec\u30d9\u30eb\uff1a\u4e2d\u7d1a"}),"\n",(0,n.jsx)(t.p,{children:"\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\uff1aWindows, macOS, Linux"}),"\n",(0,n.jsxs)(t.p,{children:["\u30af\u30e9\u30b9\uff1a ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPESynthesiser",title:"Base class for an MPE-compatible musical device that can play sounds.",children:"MPESynthesiser"}),", ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEInstrument",title:"This class represents an instrument handling MPE.",children:"MPE\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"}),", ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/structMPENote",title:"This struct represents a playing MPE note.",children:"MPENote"}),", ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEValue",title:"This class represents a single value for any of the MPE dimensions of control.",children:"MPEValue"}),", ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classSmoothedValue",title:"A utility class for values that need smoothing to avoid audio glitches.",children:"\u30b9\u30e0\u30fc\u30b9\u5024"})]}),"\n",(0,n.jsx)(t.h2,{id:"\u306f\u3058\u3081\u308b",children:"\u306f\u3058\u3081\u308b"}),"\n",(0,n.jsxs)(t.p,{children:["Download the demo project for this tutorial here: ",(0,n.jsx)(t.a,{href:"/tutorials/PIPs/MPEIntroductionTutorial.zip",children:"\u30d4\u30c3\u30d7"})," | ",(0,n.jsx)(t.a,{href:"/tutorials/ZIPs/MPEIntroductionTutorial.zip",children:"\u30b8\u30c3\u30d7"}),". Unzip the project and open the first header file in the Projucer."]}),"\n",(0,n.jsxs)(t.p,{children:["If you need help with this step, see ",(0,n.jsx)(t.a,{href:"../tutorial_new_projucer_project/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebProjucer\u30d1\u30fc\u30c81\uff1aProjucer\u3092\u59cb\u3081\u308b"}),"."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["It would be helpful to read ",(0,n.jsx)(t.a,{href:"../tutorial_synth_using_midi_input/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebMIDI\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"})," first, as this is used as a reference point in a number of places."]})}),"\n",(0,n.jsx)(t.h1,{id:"the-demo-project",children:"The demo project"}),"\n",(0,n.jsxs)(t.p,{children:["The demo project is a simplified version of the ",(0,n.jsx)(t.code,{children:"MPEDemo"})," project in the ",(0,n.jsx)(t.code,{children:"JUCE/\u4f8b"})," directory. In order to get the most out of this tutorial you will need an ",(0,n.jsx)(t.a,{href:"https://support.roli.com/article/what-is-mpe/",children:"MPE"})," compatible controller. ",(0,n.jsx)(t.a,{href:"https://support.roli.com/article/what-is-mpe/",children:"MPE"})," stands for ",(0,n.jsx)(t.em,{children:"MIDI\u30dd\u30ea\u30d5\u30a9\u30cb\u30c3\u30af\u30fb\u30a8\u30af\u30b9\u30d7\u30ec\u30c3\u30b7\u30e7\u30f3"}),", which is a new specification to allow multidimensional data to be communicated between audio products."]}),"\n",(0,n.jsxs)(t.p,{children:["Some examples of such ",(0,n.jsx)(t.a,{href:"https://support.roli.com/article/what-is-mpe/",children:"MPE"})," compatible devices are ROLI's own Seaboard range (such as the ",(0,n.jsx)(t.a,{href:"https://roli.com/products/seaboard-rise",children:"\u30b7\u30fc\u30dc\u30fc\u30c9\u30fb\u30e9\u30a4\u30ba"}),")."]}),"\n",(0,n.jsx)(t.admonition,{type:"warning",children:(0,n.jsxs)(t.p,{children:["The synthesiser may appear very quiet unless your controller transmits MIDI channel pressure and continuous controller 74 (",(0,n.jsx)(t.em,{children:"\u30d9\u30eb"}),") in the way that the ",(0,n.jsx)(t.a,{href:"https://roli.com/products/seaboard-rise",children:"\u30b7\u30fc\u30dc\u30fc\u30c9\u30fb\u30e9\u30a4\u30ba"})," does."]})}),"\n",(0,n.jsxs)(t.p,{children:["With a ",(0,n.jsx)(t.a,{href:"https://roli.com/products/seaboard-rise",children:"\u30b7\u30fc\u30dc\u30fc\u30c9\u30fb\u30e9\u30a4\u30ba"})," connected to your computer the window of the demo application should look something like the following screenshot:"]}),"\n",(0,n.jsx)(a.A,{src:"https://docs.juce.com/master/tutorial_mpe_introduction_screenshot1.png",caption:"The demo application"}),"\n",(0,n.jsxs)(t.p,{children:["You will need to enable one of the MIDI inputs (here you can see a ",(0,n.jsx)(t.a,{href:"https://roli.com/products/seaboard-rise",children:"\u30b7\u30fc\u30dc\u30fc\u30c9\u30fb\u30e9\u30a4\u30ba"})," is shown as an option)."]}),"\n",(0,n.jsx)(t.h2,{id:"the-visualiser",children:"The visualiser"}),"\n",(0,n.jsxs)(t.p,{children:["Any notes played on your ",(0,n.jsx)(t.a,{href:"https://support.roli.com/article/what-is-mpe/",children:"MPE"})," compatible device will be visualised in the lower portion of the window. This is shown in the following screenshot:"]}),"\n",(0,n.jsx)(a.A,{src:"https://docs.juce.com/master/tutorial_mpe_introduction_screenshot2.png",caption:"The visualiser"}),"\n",(0,n.jsxs)(t.p,{children:["One key feature of ",(0,n.jsx)(t.a,{href:"https://support.roli.com/article/what-is-mpe/",children:"MPE"})," is that each new MIDI note event is assigned its own MIDI channel, rather than all notes from a particular controller keyboard being assigned to the same MIDI channel. This allows each individual note to be controlled independently by control change messages, pitch bend message, and so on. In the JUCE implementation of ",(0,n.jsx)(t.a,{href:"https://support.roli.com/article/what-is-mpe/",children:"MPE"}),", a playing note is represented by an ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/structMPENote",title:"This struct represents a playing MPE note.",children:"MPENote"})," object. An ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/structMPENote",title:"This struct represents a playing MPE note.",children:"MPENote"})," object encapsulates the following data:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"\u30ce\u30fc\u30c8\u306eMIDI\u30c1\u30e3\u30f3\u30cd\u30eb\u3002"}),"\n",(0,n.jsx)(t.li,{children:"MIDI\u30ce\u30fc\u30c8\u306e\u521d\u671f\u5024\u3002"}),"\n",(0,n.jsxs)(t.li,{children:["The note-on velocity (or ",(0,n.jsx)(t.em,{children:"\u30b9\u30c8\u30e9\u30a4\u30ad"}),")."]}),"\n",(0,n.jsx)(t.li,{children:"\u30ce\u30fc\u30c8\u306e\u30d4\u30c3\u30c1\u30d9\u30f3\u30c9\u5024\uff1a\u3053\u306e\u30ce\u30fc\u30c8\u306eMIDI\u30c1\u30e3\u30f3\u30cd\u30eb\u3067\u53d7\u4fe1\u3057\u305fMIDI\u30d4\u30c3\u30c1\u30d9\u30f3\u30c9\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u5f97\u3089\u308c\u307e\u3059\u3002"}),"\n",(0,n.jsx)(t.li,{children:"\u30ce\u30fc\u30c8\u306e\u97f3\u5727\uff1a\u3053\u306e\u30ce\u30fc\u30c8\u306eMIDI\u30c1\u30e3\u30f3\u30cd\u30eb\u3067\u53d7\u4fe1\u3057\u305fMIDI\u30c1\u30e3\u30f3\u30cd\u30eb\u97f3\u5727\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u5f97\u3089\u308c\u307e\u3059\u3002"}),"\n",(0,n.jsxs)(t.li,{children:["The ",(0,n.jsx)(t.em,{children:"\u30d9\u30eb"})," for the note: typically derived from any controller messages on this note's MIDI channel for controller 74."]}),"\n",(0,n.jsxs)(t.li,{children:["The note-off velocity (or ",(0,n.jsx)(t.em,{children:"\u30ea\u30d5\u30c8"}),"): this is only valid after the note-off event has been received and until the playing sound has stopped."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"\u30ce\u30fc\u30c8\u3092\u6f14\u594f\u3057\u3066\u3044\u306a\u3044\u72b6\u614b\u3067\u306f\u3001\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u30fc\u304c\u5f93\u6765\u306e MIDI \u30ad\u30fc\u30dc\u30fc\u30c9\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u8868\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u30c7\u30e2\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u30fc\u3067\u306f\u3001\u5404\u30ce\u30fc\u30c8\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\uff1a"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"\u7070\u8272\u3067\u5857\u308a\u3064\u3076\u3055\u308c\u305f\u5186\u306f\u30ce\u30fc\u30c8\u30aa\u30f3\u306e\u901f\u5ea6\u3092\u8868\u3059\uff08\u901f\u5ea6\u304c\u901f\u3044\u307b\u3069\u5186\u306f\u5927\u304d\u304f\u306a\u308b\uff09\u3002"}),"\n",(0,n.jsx)(t.li,{children:'\u30ce\u30fc\u30c8\u306eMIDI\u30c1\u30e3\u30f3\u30cd\u30eb\u306f\u3001\u3053\u306e\u5186\u5185\u306e "+"\u30b7\u30f3\u30dc\u30eb\u306e\u4e0a\u306b\u8868\u793a\u3055\u308c\u307e\u3059\uff1b'}),"\n",(0,n.jsx)(t.li,{children:'\u521d\u671fMIDI\u30ce\u30fc\u30c8\u540d\u306f "+"\u8a18\u53f7\u306e\u4e0b\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002'}),"\n",(0,n.jsx)(t.li,{children:"\u91cd\u306d\u3066\u8868\u793a\u3055\u308c\u308b\u767d\u3044\u5186\u306f\u3001\u3053\u306e\u30ce\u30fc\u30c8\u306e\u73fe\u5728\u306e\u5727\u529b\u3092\u8868\u3059\uff08\u3053\u3053\u3067\u3082\u3001\u5727\u529b\u304c\u9ad8\u3044\u307b\u3069\u5186\u306f\u5927\u304d\u304f\u306a\u308b\uff09\u3002"}),"\n",(0,n.jsx)(t.li,{children:"\u30ce\u30fc\u30c8\u306e\u6c34\u5e73\u4f4d\u7f6e\u306f\u3001\u5143\u306e\u30ce\u30fc\u30c8\u3068\u3001\u3053\u306e\u30ce\u30fc\u30c8\u306b\u9069\u7528\u3055\u308c\u305f\u30d4\u30c3\u30c1\u30d9\u30f3\u30c9\u304b\u3089\u6c7a\u5b9a\u3055\u308c\u307e\u3059\u3002"}),"\n",(0,n.jsxs)(t.li,{children:["The vertical position of the note is derived from the ",(0,n.jsx)(t.em,{children:"\u30d9\u30eb"})," parameter for the note (from MIDI controller 74 on this note's MIDI channel)."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"other-setting-up",children:"Other setting up"}),"\n",(0,n.jsxs)(t.p,{children:["Before delving further into other aspects of the ",(0,n.jsx)(t.a,{href:"https://support.roli.com/article/what-is-mpe/",children:"MPE"})," specification, which are demonstrated by this application, let's look at some of the other things our application uses."]}),"\n",(0,n.jsxs)(t.p,{children:["First of all, our ",(0,n.jsx)(t.code,{children:"\u30e1\u30a4\u30f3\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," class inherits from the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioIODeviceCallback",title:"One of these is passed to an AudioIODevice object to stream the audio data in and out.",children:"AudioIODeviceCallback"})," [1] and ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMidiInputCallback",title:"Receives incoming messages from a physical MIDI input device.",children:"MidiInputCallback"})," [2] classes:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"class MainComponent : public juce::Component\u3001\n                      private juce::AudioIODeviceCallback, // [1].\n                      private juce::MidiInputCallback // [2].\n{\npublic\uff1a\n"})}),"\n",(0,n.jsxs)(t.p,{children:["We also have some important class members in our ",(0,n.jsx)(t.code,{children:"\u30e1\u30a4\u30f3\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," class:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"juce::AudioDeviceManager audioDeviceManager; // [3].\n    juce::AudioDeviceSelectorComponent audioSetupComp; // [4].\n \n    \u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u30fc visualiserComp\uff1b\n    juce::Viewport visualiserViewport\uff1b\n \n    juce::MPEInstrument visualiserInstrument\uff1b\n    juce::MPESynthesiser synth\uff1b\n    juce::MidiMessageCollector midiCollector; // [5].\n \n    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (MainComponent).\n};\n"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceManager",title:"Manages the state of some audio and midi i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"})," [3] class handles the audio and MIDI configuration on our computer, while the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceSelectorComponent",title:"A component containing controls to let the user change the audio settings of an AudioDeviceManager ob...",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30bb\u30ec\u30af\u30bf\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," [4] class gives us a means of configuring this from the graphical user interface (see ",(0,n.jsx)(t.a,{href:"../tutorial_audio_device_manager/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebAudioDeviceManager\u30af\u30e9\u30b9"}),"). The ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMidiMessageCollector",title:"Collects incoming realtime MIDI messages and turns them into blocks suitable for processing by a bloc...",children:"\u30df\u30c7\u30a3\u30e1\u30c3\u30bb\u30fc\u30b8\u30b3\u30ec\u30af\u30bf"})," [5] class allow us to easily collect messages into blocks of timestamped MIDI messages in our audio callback (see ",(0,n.jsx)(t.a,{href:"../tutorial_synth_using_midi_input/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebMIDI\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"}),")."]}),"\n",(0,n.jsxs)(t.p,{children:["It is important that the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceManager",title:"Manages the state of some audio and midi i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"})," object is listed first since we pass this to the constructor of the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceSelectorComponent",title:"A component containing controls to let the user change the audio settings of an AudioDeviceManager ob...",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30bb\u30ec\u30af\u30bf\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," object:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"\u30e1\u30a4\u30f3\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n        : audioSetupComp (audioDeviceManager, 0, 0, 256\u3001\n                          true, // showMidiInputOptions\u306ftrue\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n                          true, true, false)\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Notice another important argument that is passed to the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceSelectorComponent",title:"A component containing controls to let the user change the audio settings of an AudioDeviceManager ob...",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30bb\u30ec\u30af\u30bf\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," constructor: the ",(0,n.jsx)(t.code,{children:"\u30b7\u30e7\u30fc\u30df\u30c7\u30a3\u30a4\u30f3\u30d7\u30c3\u30c8\u30aa\u30d7\u30b7\u30e7\u30f3"})," must be ",(0,n.jsx)(t.code,{children:"\u771f\u306e"})," to show our available MIDI inputs."]}),"\n",(0,n.jsxs)(t.p,{children:["We set up our ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceManager",title:"Manages the state of some audio and midi i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"})," object in a similar way to ",(0,n.jsx)(t.a,{href:"../tutorial_audio_device_manager/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebAudioDeviceManager\u30af\u30e9\u30b9"}),", but we need also to add a MIDI input callback [6]:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"audioDeviceManager.initialise (0, 2, nullptr, true, {}, nullptr)\uff1b\n        audioDeviceManager.addMidiInputDeviceCallback ({}, this); // [6].\n        audioDeviceManager.addAudioCallback (this)\uff1b\n"})}),"\n",(0,n.jsx)(t.h3,{id:"the-midi-input-callback",children:"The MIDI input callback"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"handleIncomingMidiMessage()"})," is called when each MIDI message is received from any of the active MIDI inputs in the user interface:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"void handleIncomingMidiMessage (juce::MidiInput* /*source*/\u3001\n                                    const juce::MidiMessage& message) override\n    {\n        visualiserInstrument.processNextMidiEvent (message)\uff1b\n        midiCollector.addMessageToQueue (message)\uff1b\n    }\n"})}),"\n",(0,n.jsx)(t.p,{children:"\u3053\u3053\u3067\u306f\u3001\u305d\u308c\u305e\u308c\u306eMIDI\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4e21\u65b9\u306b\u6e21\u3059\uff1a"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["our ",(0,n.jsx)(t.code,{children:"\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u30fc\u30fb\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"})," member \u2014 which is used to drive the visualiser display; and"]}),"\n",(0,n.jsxs)(t.li,{children:["the ",(0,n.jsx)(t.code,{children:"\u30df\u30c7\u30a3\u30b3\u30ec\u30af\u30bf\u30fc"})," member \u2014 which in turn passes the messages to the synthesiser in the audio callback."]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"the-audio-callback",children:"The audio callback"}),"\n",(0,n.jsxs)(t.p,{children:["Before any audio callbacks are made, we need to inform the ",(0,n.jsx)(t.code,{children:"\u30b7\u30f3\u30bb"})," and ",(0,n.jsx)(t.code,{children:"\u30df\u30c7\u30a3\u30b3\u30ec\u30af\u30bf\u30fc"})," members of the device sample rate, in the ",(0,n.jsx)(t.code,{children:"audioDeviceAboutToStart()"})," function:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"void audioDeviceAboutToStart (juce::AudioIODevice* device) override\n    {\n        auto sampleRate = device->getCurrentSampleRate()\uff1b\n        midiCollector.reset (sampleRate)\uff1b\n        synth.setCurrentPlaybackSampleRate (sampleRate)\uff1b\n    }\n"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"audioDeviceIOCallbackWithContext()"})," function appears to do nothing MPE-specific:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"    void audioDeviceIOCallbackWithContext (const float* const* /*inputChannelData*/,\n                                           int /*numInputChannels*/,\n                                           float* const* outputChannelData,\n                                           int numOutputChannels,\n                                           int numSamples,\n                                           const juce::AudioIODeviceCallbackContext& /*context*/) override\n    {\n        // make buffer\n        juce::AudioBufferbuffer\uff08outputChannelData\u3001numOutputChannels\u3001numSamples\uff09\uff1b\n \n        // \u7121\u97f3\u306b\u3059\u308b\u305f\u3081\u306b\u30af\u30ea\u30a2\u3059\u308b\n        buffer.clear()\uff1b\n \n        juce::MidiBuffer incomingMidi\uff1b\n \n        // \u3053\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u30fb\u30d6\u30ed\u30c3\u30af\u306eMIDI\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\n        midiCollector.removeNextBlockOfMessages (incomingMidi, numSamples)\uff1b\n \n        // \u30d6\u30ed\u30c3\u30af\u3092\u5408\u6210\u3059\u308b\n        synth.renderNextBlock (buffer, incomingMidi, 0, numSamples)\uff1b\n    }\n"})}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["In fact, this is rather similar to the ",(0,n.jsx)(t.code,{children:"SynthAudioSource::getNextAudioBlock()"})," function in ",(0,n.jsx)(t.a,{href:"../tutorial_synth_using_midi_input/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebMIDI\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"}),"."]})}),"\n",(0,n.jsx)(t.h1,{id:"core-mpe-classes",children:"Core MPE classes"}),"\n",(0,n.jsxs)(t.p,{children:["All of the ",(0,n.jsx)(t.a,{href:"https://support.roli.com/article/what-is-mpe/",children:"MPE"})," specific processing is handled by the ",(0,n.jsx)(t.a,{href:"https://support.roli.com/article/what-is-mpe/",children:"MPE"})," classes: ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEInstrument",title:"This class represents an instrument handling MPE.",children:"MPE\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"}),", ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPESynthesiser",title:"Base class for an MPE-compatible musical device that can play sounds.",children:"MPESynthesiser"}),", ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPESynthesiserVoice",title:"Represents an MPE voice that an MPESynthesiser can use to play a sound.",children:"MPESynthesiserVoice"}),", ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEValue",title:"This class represents a single value for any of the MPE dimensions of control.",children:"MPEValue"}),", and ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/structMPENote",title:"This struct represents a playing MPE note.",children:"MPENote"})," (which we mentioned earlier)."]}),"\n",(0,n.jsx)(t.h2,{id:"the-mpeinstrument-class",children:"The MPEInstrument class"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEInstrument",title:"This class represents an instrument handling MPE.",children:"MPE\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"})," class maintains the state of the currently playing notes according to the MPE specification. An ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEInstrument",title:"This class represents an instrument handling MPE.",children:"MPE\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"})," object can have one or more listeners attached and it can broadcast changes to notes as they occur. All you need to do is feed the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEInstrument",title:"This class represents an instrument handling MPE.",children:"MPE\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"})," object the MIDI data and it handles the rest."]}),"\n",(0,n.jsxs)(t.p,{children:["In the ",(0,n.jsx)(t.code,{children:"\u30e1\u30a4\u30f3\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," constructor we configure the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEInstrument",title:"This class represents an instrument handling MPE.",children:"MPE\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"})," in ",(0,n.jsx)(t.em,{children:"\u30ec\u30ac\u30b7\u30fc\u30e2\u30fc\u30c9"})," and set the default pitch bend range to 24 semitones:"]}),"\n",(0,n.jsx)(t.p,{children:"\u3053\u306e\u7279\u5225\u306a\u30e2\u30fc\u30c9\u306f\u3001MPE\u4ee5\u5916\u306eMIDI\u6a5f\u5668\u3068\u306e\u5f8c\u65b9\u4e92\u63db\u6027\u306e\u305f\u3081\u306e\u3082\u306e\u3067\u3001\u697d\u5668\u306f\u73fe\u5728\u306eMPE\u30be\u30fc\u30f3\u30fb\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u7121\u8996\u3057\u307e\u3059\u3002"}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"../tutorial_mpe_zones/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebMPE\u30be\u30fc\u30f3\u306e\u7406\u89e3"})," for an introduction to more flexible approaches using ",(0,n.jsx)(t.em,{children:"\u30be\u30fc\u30f3"})," and ",(0,n.jsx)(t.em,{children:"\u30be\u30fc\u30f3\u30fb\u30ec\u30a4\u30a2\u30a6\u30c8"}),"."]})}),"\n",(0,n.jsxs)(t.p,{children:["In the ",(0,n.jsx)(t.code,{children:"MainComponent::handleIncomingMidiMessage()"})," function we pass the MIDI messages on to our ",(0,n.jsx)(t.code,{children:"\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u30fc\u30fb\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"})," object:"]}),"\n",(0,n.jsxs)(t.p,{children:["In this example we are using an ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEInstrument",title:"This class represents an instrument handling MPE.",children:"MPE\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"})," object directly as we need it to update our visualiser display. For the purposes of audio synthesis we don't need to create a separate ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEInstrument",title:"This class represents an instrument handling MPE.",children:"MPE\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"})," object. The ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPESynthesiser",title:"Base class for an MPE-compatible musical device that can play sounds.",children:"MPESynthesiser"})," object contains an ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEInstrument",title:"This class represents an instrument handling MPE.",children:"MPE\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"})," object that it uses to drive the synthesiser."]}),"\n",(0,n.jsx)(t.h2,{id:"the-mpesynthesiser-class",children:"The MPESynthesiser class"}),"\n",(0,n.jsxs)(t.p,{children:["We set our ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPESynthesiser",title:"Base class for an MPE-compatible musical device that can play sounds.",children:"MPESynthesiser"})," with the same configuration as our ",(0,n.jsx)(t.code,{children:"\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u30fc\u30fb\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"})," object (in legacy mode with a pitch bend range of 24 semitones):"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"synth.enableLegacyMode (24)\uff1b\n        synth.setVoiceStealingEnabled (false)\uff1b\n"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPESynthesiser",title:"Base class for an MPE-compatible musical device that can play sounds.",children:"MPESynthesiser"})," class can also handle voice stealing for us, but as you can see here, we turn this off. When voice stealing is enabled, the synth will try to take over an existing voice if it runs out of voices and needs to play another note."]}),"\n",(0,n.jsxs)(t.p,{children:["As we have already seen in the ",(0,n.jsx)(t.code,{children:"\u30e1\u30a4\u30f3\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8::audioDeviceAboutToStart()"})," function we need to set the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPESynthesiser",title:"Base class for an MPE-compatible musical device that can play sounds.",children:"MPESynthesiser"})," object's sample rate to work correctly:"]}),"\n",(0,n.jsxs)(t.p,{children:["And as we have also already seen in the ",(0,n.jsx)(t.code,{children:"\u30e1\u30a4\u30f3\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8::audioDeviceIOCallback()"})," function, we simply pass it a ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMidiBuffer",title:"Holds a sequence of time-stamped midi events.",children:"\u30df\u30c7\u30a3\u30d0\u30c3\u30d5\u30a1"})," object containing messages that we want it to use to perform its synthesis operation:"]}),"\n",(0,n.jsx)(t.h2,{id:"the-mpesynthesiservoice-class",children:"The MPESynthesiserVoice class"}),"\n",(0,n.jsxs)(t.p,{children:["You can generally use the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPESynthesiser",title:"Base class for an MPE-compatible musical device that can play sounds.",children:"MPESynthesiser"})," and ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEInstrument",title:"This class represents an instrument handling MPE.",children:"MPE\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"})," classes as they are (although both classes can be used as base classes if you need to override some behaviours). The most important class you ",(0,n.jsx)(t.em,{children:"\u30de\u30b9\u30c8"})," override in order to use the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPESynthesiser",title:"Base class for an MPE-compatible musical device that can play sounds.",children:"MPESynthesiser"})," class is the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPESynthesiserVoice",title:"Represents an MPE voice that an MPESynthesiser can use to play a sound.",children:"MPESynthesiserVoice"})," class. This actually generates the audio signals from your synthesiser's voices."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["This is similar to the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classSynthesiserVoice",title:"Represents a voice that a Synthesiser can use to play a SynthesiserSound.",children:"\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u30fb\u30dc\u30a4\u30b9"})," class that is used with the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classSynthesiser",title:"Base class for a musical device that can play sounds.",children:"\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc"})," class, but it is customised to implement the ",(0,n.jsx)(t.a,{href:"https://support.roli.com/article/what-is-mpe/",children:"MPE"})," specification. See ",(0,n.jsx)(t.a,{href:"../tutorial_synth_using_midi_input/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebMIDI\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"}),"."]})}),"\n",(0,n.jsxs)(t.p,{children:["The code for our voice class is in the ",(0,n.jsx)(t.code,{children:"MPEDemoSynthVoice"})," class of the demo project. Here we implement the ",(0,n.jsx)(t.code,{children:"MPEDemoSynthVoice"})," class to inherit from the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPESynthesiserVoice",title:"Represents an MPE voice that an MPESynthesiser can use to play a sound.",children:"MPESynthesiserVoice"})," class:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"class MPEDemoSynthVoice : public juce::MPESynthesiserVoice\n{\n"})}),"\n",(0,n.jsxs)(t.p,{children:["We have some member variables to keep track of values to control the level, timbre, and frequency of the tone that we generate. In particular, we use the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classSmoothedValue",title:"A utility class for values that need smoothing to avoid audio glitches.",children:"\u30b9\u30e0\u30fc\u30b9\u5024"})," class, which is really useful for smoothing out discontinuities in the signal that would be otherwise caused by value changes (see ",(0,n.jsx)(t.a,{href:"../tutorial_sine_synth/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30b5\u30a4\u30f3\u6ce2\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"}),")."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"    juce::SmoothedValue\u30ec\u30d9\u30eb\u3001\u97f3\u8272\u3001\u5468\u6ce2\u6570\uff1b\n \n    double phase = 0.0\uff1b\n    double phaseDelta = 0.0\uff1b\n    double tailOff = 0.0\uff1b\n \n    // \u3044\u304f\u3064\u304b\u306e\u4fbf\u5229\u306a\u5b9a\u6570\n    static constexpr auto maxLevel = 0.05\uff1b\n    static constexpr auto maxLevelDb = 31.0\uff1b\n    static constexpr auto smoothingLengthInSeconds = 0.01\uff1b\n};\n"})}),"\n",(0,n.jsx)(t.h3,{id:"starting-and-stopping-voices",children:"Starting and stopping voices"}),"\n",(0,n.jsxs)(t.p,{children:["The key to using the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPESynthesiserVoice",title:"Represents an MPE voice that an MPESynthesiser can use to play a sound.",children:"MPESynthesiserVoice"})," class is to access its ",(0,n.jsx)(t.a,{href:"classMPESynthesiserVoice.html#aea34fcbdb3fa0961f73d5f9a1f34e255",children:"MPESynthesiserVoice::\u73fe\u5728\u518d\u751f\u4e2d\u306e\u97f3\u7b26"})," (protected) ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/structMPENote",title:"This struct represents a playing MPE note.",children:"MPENote"})," member to access the control information about the note during the various callbacks. For example, we override the ",(0,n.jsx)(t.a,{href:"classMPESynthesiserVoice.html#ae10c1cdfb37208b96b56863d47a3a193",title:"Called by the MPESynthesiser to let the voice know that a new note has started on it.",children:"MPESynthesiserVoice::noteStarted()"})," function like this:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"    void noteStarted() override\n    {\n        jassert (currentlyPlayingNote.isValid());\n        jassert (currentlyPlayingNote.keyState == juce::MPENote::keyDown\n                 || currentlyPlayingNote.keyState == juce::MPENote::keyDownAndSustained);\n \n        // get data from the current MPENote\n        level    .setTargetValue (currentlyPlayingNote.pressure.asUnsignedFloat());\n        frequency.setTargetValue (currentlyPlayingNote.getFrequencyInHertz());\n        timbre   .setTargetValue (currentlyPlayingNote.timbre.asUnsignedFloat());\n \n        phase = 0.0;\n        auto cyclesPerSample = frequency.getNextValue() / currentSampleRate;\n        phaseDelta = 2.0 * juce::MathConstants::pi * cyclesPerSample\uff1b\n \n        tailOff = 0.0\uff1b\n    }\n"})}),"\n",(0,n.jsxs)(t.p,{children:['The following "five dimensions" are stored in the ',(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/structMPENote",title:"This struct represents a playing MPE note.",children:"MPENote"})," object as ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEValue",title:"This class represents a single value for any of the MPE dimensions of control.",children:"MPEValue"})," objects:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"\u30ce\u30fc\u30c8\u30aa\u30f3\u901f\u5ea6"}),': in the [MPENote::noteOnVelocity](structMPENote.html#a9322650db7f2e76cec724746d1a75c1a "The velocity ("strike") of the note-on.") member']}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"\u30d4\u30c3\u30c1\u30d9\u30f3\u30c9"}),": in the ",(0,n.jsx)(t.a,{href:"structMPENote.html#aebfdbfc173bc19cc97b97659c412078f",title:"Current per-note pitchbend of the note (in units of MIDI pitchwheel position).",children:"MPENote::\u30d4\u30c3\u30c1\u30d9\u30f3\u30c9"})," member"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"\u5727\u529b"}),": in the ",(0,n.jsx)(t.a,{href:"structMPENote.html#af04939884198c48da9927e76e4f3ff90",title:"Current pressure with which the note is held down.",children:"MPENote::\u5727\u529b"})," member"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"\u30d9\u30eb"}),": in the ",(0,n.jsx)(t.a,{href:"structMPENote.html#aea15b7b7d5b9c55cbf7d479aa8e46a90",title:"Current value of the note's third expressive dimension, typically encoding some kind of timbre parame...",children:"MPENote::\u97f3\u8272"})," member"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"\u30ce\u30fc\u30c8\u30aa\u30d5\u901f\u5ea6"}),': in the [MPENote::\u30ce\u30fc\u30c8\u30aa\u30d5\u30d9\u30ed\u30b7\u30c6\u30a3](structMPENote.html#a9e46888c40a2d3eaf4b8c5129b21de6e "The release velocity ("lift") of the note after a note-off has been received.") member']}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEValue",title:"This class represents a single value for any of the MPE dimensions of control.",children:"MPEValue"})," objects make it easy to create values from 7-bit or 14-bit MIDI value sources, and to obtain these values as floating-point values in the range 0..1 or -1..+1."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEValue",title:"This class represents a single value for any of the MPE dimensions of control.",children:"MPEValue"})," class stores the value internally using the 14-bit range."]})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"\u30e1\u30a4\u30f3\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8::noteStopped()"}),' function triggers the "release" of the note envelope (or stops it immediately, if requested):']}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"void noteStopped (bool allowTailOff) override\n    {\n        jassert (currentlyPlayingNote.keyState == juce::MPENote::off)\uff1b\n \n        if (allowTailOff)\n        {\n            // \u3053\u306e\u30d5\u30e9\u30b0\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30c6\u30fc\u30eb\u30aa\u30d5\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306f\n            // \u7d42\u4e86\u3057\u305f\u3089clearCurrentNote()\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n \n            if (tailOff == 0.0) // \u30c6\u30fc\u30eb\u30aa\u30d5\u3092\u958b\u59cb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u306f\u3001\u307e\u3060\u305d\u3046\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3060\u3051\u3067\u3059\u3002\n                                // stopNote\u30e1\u30bd\u30c3\u30c9\u306f\u8907\u6570\u56de\u547c\u3073\u51fa\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n                tailOff = 1.0\uff1b\n        }\n        else\n        {\n            // \u3059\u3050\u306b\u6f14\u594f\u3092\u6b62\u3081\u308b\u3088\u3046\u306b\u8a00\u308f\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3059\u3079\u3066\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u3002\n            clearCurrentNote()\uff1b\n            phaseDelta = 0.0\uff1b\n        }\n    }\n"})}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["This is very similar to ",(0,n.jsx)(t.code,{children:"SineWaveVoice::stopNote()"})," function in ",(0,n.jsx)(t.a,{href:"../tutorial_synth_using_midi_input/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebMIDI\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"}),". There isn't anything MPE-specific here."]})}),"\n",(0,n.jsxs)(t.p,{children:["Modify the ",(0,n.jsx)(t.code,{children:"\u30e1\u30a4\u30f3\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8::noteStopped()"})," function to allow the note-off velocity (",(0,n.jsx)(t.em,{children:"\u30ea\u30d5\u30c8"}),") to modify the rate of release of the note. Faster lifts should result in a shorter release time."]}),"\n",(0,n.jsx)(t.h3,{id:"parameter-changes",children:"Parameter changes"}),"\n",(0,n.jsx)(t.p,{children:"\u3053\u306e\u97f3\u7b26\u306e\u97f3\u5727\u3001\u30d4\u30c3\u30c1\u30d9\u30f3\u30c9\u3001\u97f3\u8272\u306e\u3044\u305a\u308c\u304b\u304c\u5909\u66f4\u3055\u308c\u308b\u3068\u3001\u305d\u308c\u3092\u77e5\u3089\u305b\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u3042\u308b\uff1a"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"void notePressureChanged() \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\n    {\n        level.setTargetValue (currentlyPlayingNote.pressure.asUnsignedFloat())\uff1b\n    }\n \n    void notePitchbendChanged() \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\n    {\n        frequency.setTargetValue (currentlyPlayingNote.getFrequencyInHertz())\uff1b\n    }\n \n    void noteTimbreChanged() \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\n    {\n        timbre.setTargetValue (currentlyPlayingNote.timbre.asUnsignedFloat())\uff1b\n    }\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Again, we access the ",(0,n.jsx)(t.a,{href:"classMPESynthesiserVoice.html#aea34fcbdb3fa0961f73d5f9a1f34e255",children:"MPESynthesiserVoice::\u73fe\u5728\u518d\u751f\u4e2d\u306e\u97f3\u7b26"})," member to obtain the current value for each of these parameters."]}),"\n",(0,n.jsx)(t.h3,{id:"generating-the-audio",children:"Generating the audio"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"MainComponent::renderNextBlock()"})," actually generates the audio signal, mixing this voice's signal into the buffer that is passed in:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"    void renderNextBlock (juce::AudioBuffer& outputBuffer\u3001\n                          int startSample\u3001\n                          int numSamples) \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\n    {\n        if (phaseDelta != 0.0)\n        {\n            if (tailOff > 0.0)\n            {\n                while (--numSamples >= 0)\n                {\n                    auto currentSample = getNextSample() * (float) tailOff\uff1b\n \n                    for (auto i = outputBuffer.getNumChannels(); --i >= 0;)\n                        outputBuffer.addSample (i, startSample, currentSample)\uff1b\n \n                    ++startSample\uff1b\n \n                    tailOff *= 0.99\uff1b\n \n                    if (tailOff <= 0.005)\n                    {\n                        clearCurrentNote()\uff1b\n \n                        phaseDelta = 0.0\uff1b\n                        break\uff1b\n                    }\n                }\n            }\n            else\n            {\n                while (--numSamples >= 0)\n                {\n                    auto currentSample = getNextSample()\uff1b\n \n                    for (auto i = outputBuffer.getNumChannels(); --i >= 0;)\n                        outputBuffer.addSample (i, startSample, currentSample)\uff1b\n \n                    ++startSample\uff1b\n                }\n            }\n        }\n    }\n"})}),"\n",(0,n.jsxs)(t.p,{children:["It calls ",(0,n.jsx)(t.code,{children:"\u30e1\u30a4\u30f3\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8::getNextSample()"})," to generate the waveform:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"    float getNextSample() noexcept\n    {\n        auto levelDb = (level.getNextValue() - 1.0) * maxLevelDb;\n        auto amplitude = std::pow (10.0f, 0.05f * levelDb) * maxLevel;\n \n        // timbre is used to blend between a sine and a square.\n        auto f1 = std::sin (phase);\n        auto f2 = std::copysign (1.0, f1);\n        auto a2 = timbre.getNextValue();\n        auto a1 = 1.0 - a2;\n \n        auto nextSample = float (amplitude * ((a1 * f1) + (a2 * f2)));\n \n        auto cyclesPerSample = frequency.getNextValue() / currentSampleRate;\n        phaseDelta = 2.0 * juce::MathConstants::pi * cyclesPerSample;\n        phase = std::fmod (phase + phaseDelta, 2.0 * juce::MathConstants:pi)\u3067\u3042\u308b\uff1b\n \n        return nextSample\uff1b\n    }\n"})}),"\n",(0,n.jsx)(t.p,{children:"\u30a8\u30f3\u30c9\u30b3\u30fc\u30c9"}),"\n",(0,n.jsxs)(t.p,{children:["This simply cross fades between a sine wave and a (non-bandlimited) square wave, based on the value of the ",(0,n.jsx)(t.em,{children:"\u30d9\u30eb"})," parameter."]}),"\n",(0,n.jsxs)(t.p,{children:["Modify the ",(0,n.jsx)(t.code,{children:"MPEDemoSynthVoice"})," class to crossfade between two sine waves, one octave appart, in response to the ",(0,n.jsx)(t.em,{children:"\u30d9\u30eb"})," parameter."]}),"\n",(0,n.jsx)(t.h1,{id:"\u6982\u8981",children:"\u6982\u8981"}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial we have introduced some of the ",(0,n.jsx)(t.a,{href:"https://support.roli.com/article/what-is-mpe/",children:"MPE"})," based classes in JUCE. You should now know:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["What ",(0,n.jsx)(t.a,{href:"https://support.roli.com/article/what-is-mpe/",children:"MPE"})," is."]}),"\n",(0,n.jsxs)(t.li,{children:["That ",(0,n.jsx)(t.a,{href:"https://support.roli.com/article/what-is-mpe/",children:"MPE"})," compatible devices will allocate each note to their own MIDI channels."]}),"\n",(0,n.jsxs)(t.li,{children:["How the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/structMPENote",title:"This struct represents a playing MPE note.",children:"MPENote"})," class stores information about a note including its MIDI channel, the original note number, velocity, pitch bend, and so on."]}),"\n",(0,n.jsxs)(t.li,{children:["That the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEInstrument",title:"This class represents an instrument handling MPE.",children:"MPE\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"})," class maintains the state of the currently playing notes."]}),"\n",(0,n.jsxs)(t.li,{children:["That the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPESynthesiser",title:"Base class for an MPE-compatible musical device that can play sounds.",children:"MPESynthesiser"})," class contains an ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPEInstrument",title:"This class represents an instrument handling MPE.",children:"MPE\u30a4\u30f3\u30b9\u30c8\u30a5\u30eb\u30e1\u30f3\u30c8"})," object that it uses to drive the synthesiser."]}),"\n",(0,n.jsxs)(t.li,{children:["That you must implement a class that inherits from the ",(0,n.jsx)(t.a,{href:"https://docs.juce.com/master/classMPESynthesiserVoice",title:"Represents an MPE voice that an MPESynthesiser can use to play a sound.",children:"MPESynthesiserVoice"})," class to implement your synthesiser's audio code."]}),"\n"]}),"\n",(0,n.jsx)(t.h1,{id:"\u95a2\u9023\u9805\u76ee",children:"\u95a2\u9023\u9805\u76ee"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"../tutorial_mpe_zones/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebMPE\u30be\u30fc\u30f3\u306e\u7406\u89e3"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"../tutorial_handling_midi_events/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\uff1aMIDI\u30a4\u30d9\u30f3\u30c8\u306e\u51e6\u7406"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"../tutorial_midi_message/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebMIDI\u30c7\u30fc\u30bf\u306e\u4f5c\u6210"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"../tutorial_synth_using_midi_input/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebMIDI\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},3449:(e,t,s)=>{s.d(t,{A:()=>i});var n=s(4848);function i(e){let{src:t,caption:s,alt:i,width:a,height:r}=e;return(0,n.jsxs)("figure",{children:[(0,n.jsx)("img",{src:t,alt:i||s,width:a,height:r}),(0,n.jsx)("figcaption",{children:(0,n.jsx)("b",{children:s})})]})}},6378:(e,t,s)=>{s.d(t,{A:()=>i});var n=s(4848);function i(e){let{path:t}=e;return(0,n.jsx)("p",{children:(0,n.jsx)("a",{href:`https://docs.juce.com/master/${t}.html`,children:"\ud83d\udcda Source Page"})})}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var n=s(6540);const i={},a=n.createContext(i);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);