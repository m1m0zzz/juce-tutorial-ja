"use strict";(self.webpackChunkjuce_tutorial_ja=self.webpackChunkjuce_tutorial_ja||[]).push([[6909],{1442:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>h});var i=n(4848),o=n(8453),l=n(3449);n(6378);const r={title:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30ec\u30d9\u30eb\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb",sidebar_position:2},s="\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa\u30ec\u30d9\u30eb\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb",a={id:"synth/tutorial_synth_level_control",title:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30ec\u30d9\u30eb\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb",description:"\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u51e6\u7406\u3057\u3066\u51fa\u529b\u30ec\u30d9\u30eb\u3092\u5909\u3048\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u4f4e\u30ec\u30d9\u30eb\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3057\u307e\u3059\u3002",source:"@site/docs/synth/tutorial_synth_level_control.mdx",sourceDirName:"synth",slug:"/synth/tutorial_synth_level_control",permalink:"/juce-tutorial-ja/synth/tutorial_synth_level_control",draft:!1,unlisted:!1,editUrl:"https://github.com/m1m0zzz/juce-tutorial-ja/tree/main/docs/synth/tutorial_synth_level_control.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30ec\u30d9\u30eb\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"\u30db\u30ef\u30a4\u30c8\u30ce\u30a4\u30ba\u767a\u751f\u5668\u3092\u4f5c\u308b",permalink:"/juce-tutorial-ja/synth/tutorial_simple_synth_noise"},next:{title:"\u30c7\u30b7\u30d9\u30eb\u3067\u30aa\u30fc\u30c7\u30a3\u30aa\u30ec\u30d9\u30eb\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb",permalink:"/juce-tutorial-ja/synth/tutorial_synth_db_level_control"}},c={},h=[{value:"\u306f\u3058\u3081\u308b",id:"\u306f\u3058\u3081\u308b",level:2},{value:"A minor optimisation",id:"a-minor-optimisation",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa\u30ec\u30d9\u30eb\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa\u30ec\u30d9\u30eb\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb"}),"\n",(0,i.jsx)(t.p,{children:"\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001\u30aa\u30fc\u30c7\u30a3\u30aa\u3092\u51e6\u7406\u3057\u3066\u51fa\u529b\u30ec\u30d9\u30eb\u3092\u5909\u3048\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u4f4e\u30ec\u30d9\u30eb\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3057\u307e\u3059\u3002"}),"\n",(0,i.jsx)(t.p,{children:"\u30ec\u30d9\u30eb\uff1a\u4e2d\u7d1a"}),"\n",(0,i.jsx)(t.p,{children:"\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\uff1aWindows, macOS, Linux"}),"\n",(0,i.jsxs)(t.p,{children:["\u30af\u30e9\u30b9\uff1a ",(0,i.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioAppComponent",title:"A base class for writing audio apps that stream from the audio i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"}),", ",(0,i.jsx)(t.a,{href:"https://docs.juce.com/master/classRandom",title:"A random number generator.",children:"\u30e9\u30f3\u30c0\u30e0"}),", ",(0,i.jsx)(t.a,{href:"https://docs.juce.com/master/structAudioSourceChannelInfo",title:"Used by AudioSource::getNextAudioBlock().",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30bd\u30fc\u30b9\u30c1\u30e3\u30f3\u30cd\u30eb\u60c5\u5831"}),", ",(0,i.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioBuffer",title:"A multi-channel buffer containing floating point audio samples.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d0\u30c3\u30d5\u30a1"}),", ",(0,i.jsx)(t.a,{href:"https://docs.juce.com/master/classSlider",title:"A slider control for changing a value.",children:"\u30b9\u30e9\u30a4\u30c0\u30fc"})]}),"\n",(0,i.jsx)(t.h2,{id:"\u306f\u3058\u3081\u308b",children:"\u306f\u3058\u3081\u308b"}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["This tutorial leads on from ",(0,i.jsx)(t.a,{href:"../tutorial_simple_synth_noise/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30db\u30ef\u30a4\u30c8\u30ce\u30a4\u30ba\u30fb\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u3092\u4f5c\u308b"}),", which you should have read and understood first. It also assumes that you are familiar with manipulating ",(0,i.jsx)(t.a,{href:"https://docs.juce.com/master/classSlider",title:"A slider control for changing a value.",children:"\u30b9\u30e9\u30a4\u30c0\u30fc"})," objects (see ",(0,i.jsx)(t.a,{href:"../tutorial_slider_values/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30b9\u30e9\u30a4\u30c0\u30fc\u30af\u30e9\u30b9"}),")."]})}),"\n",(0,i.jsxs)(t.p,{children:["Download the demo project for this tutorial here: ",(0,i.jsx)(t.a,{href:"/tutorials/PIPs/SynthLevelControlTutorial.zip",children:"\u30d4\u30c3\u30d7"})," | ",(0,i.jsx)(t.a,{href:"/tutorials/ZIPs/SynthLevelControlTutorial.zip",children:"\u30b8\u30c3\u30d7"}),". Unzip the project and open the first header file in the Projucer."]}),"\n",(0,i.jsxs)(t.p,{children:["If you need help with this step, see ",(0,i.jsx)(t.a,{href:"../tutorial_new_projucer_project/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebProjucer\u30d1\u30fc\u30c81\uff1aProjucer\u3092\u59cb\u3081\u308b"}),"."]}),"\n",(0,i.jsx)(t.h1,{id:"the-demo-project",children:"The demo project"}),"\n",(0,i.jsx)(t.p,{children:"\u30c7\u30e2\u30fb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u30db\u30ef\u30a4\u30c8\u30fb\u30ce\u30a4\u30ba\u30fb\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u30ec\u30d9\u30eb\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3067\u304d\u308b\u30b9\u30e9\u30a4\u30c0\u30fc\u30921\u3064\u542b\u3080\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u6b21\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306b\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002"}),"\n",(0,i.jsx)(l.A,{src:"https://docs.juce.com/master/tutorial_synth_level_control_screenshot1.png",caption:"The demo project main window showing the level control slider."}),"\n",(0,i.jsx)(t.p,{children:"IDE\u304b\u3089\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u5b9f\u884c\u3057\u3001\u767a\u751f\u3059\u308b\u30db\u30ef\u30a4\u30c8\u30ce\u30a4\u30ba\u306e\u30ec\u30d9\u30eb\u3092\u5b9f\u969b\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,i.jsx)(t.h1,{id:"level-control-as-multiplication",children:"Level control as multiplication"}),"\n",(0,i.jsxs)(t.p,{children:["Examining the code, you may notice that our ",(0,i.jsx)(t.code,{children:"\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30f3\u30c4\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," class does ",(0,i.jsx)(t.em,{children:"\u306a\u3044"})," inherit the from ",(0,i.jsx)(t.a,{href:"https://docs.juce.com/master/classSlider_1_1Listener",title:"A class for receiving callbacks from a Slider.",children:"\u30b9\u30e9\u30a4\u30c0\u30fc::\u30ea\u30b9\u30ca\u30fc"})," class. In fact, we grab the value of the slider as soon as our ",(0,i.jsx)(t.code,{children:"getNextAudioBlock()"})," function is called:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"void getNextAudioBlock (const juce::AudioSourceChannelInfo& bufferToFill) override\n    {\n        auto level = (float) levelSlider.getValue()\uff1b\n"})}),"\n",(0,i.jsx)(t.p,{children:'\u3053\u306e\u3088\u3046\u306a\u5358\u7d14\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u3053\u306e\u30c6\u30af\u30cb\u30c3\u30af\u306f\u8a31\u5bb9\u7bc4\u56f2\u3067\u3059\u304c\u3001\u3088\u308a\u8907\u96d1\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u307b\u307c\u9593\u9055\u3044\u306a\u304f\u5225\u306e\u30c6\u30af\u30cb\u30c3\u30af\u3092\u4f7f\u3044\u305f\u3044\u3067\u3057\u3087\u3046\u3002\u30aa\u30fc\u30c7\u30a3\u30aa\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u3092\u5236\u5fa1\u3059\u308b\u5024\u306f\u3001UI\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u306b\u306e\u307f\u4fdd\u5b58\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e "\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb "\u306b\u4fdd\u5b58\u3059\u308b\u65b9\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002'}),"\n",(0,i.jsx)(t.admonition,{type:"warning",children:(0,i.jsxs)(t.p,{children:["While it is acceptable to call ",(0,i.jsx)(t.a,{href:"classSlider.html#a288c6f5c7a76100a1e7526e002e10eb5",title:"Returns the slider's current value.",children:"\u30b9\u30e9\u30a4\u30c0\u30fc::getValue()"})," in the ",(0,i.jsx)(t.code,{children:"getNextAudioBlock()"})," function you ",(0,i.jsx)(t.em,{children:"\u3079\u304b\u3089\u305a"})," call the ",(0,i.jsx)(t.a,{href:"classSlider.html#a430a5c4e56b39dd622f5800f787e0822",title:"Changes the slider's current value.",children:"\u30b9\u30e9\u30a4\u30c0\u30fc::setValue()"})," function within this the ",(0,i.jsx)(t.code,{children:"getNextAudioBlock()"})," function. This is because this code is running on the audio thread. You must not do anything that changes the state of a UI object from the audio thread, although it is acceptable to query the state of UI objects, as long as you're sure these don't have side effects."]})}),"\n",(0,i.jsxs)(t.p,{children:["In order to generate the white noise at the level dictated by the slider, we need to perform some basic arithmetic. The ",(0,i.jsx)(t.a,{href:"classRandom.html#aec88d4e5cf44faaa038f6cfb41e96406",title:"Returns the next random floating-point number.",children:"\u30e9\u30f3\u30c0\u30e0::nextFloat()"})," function always generates values between 0.0 and 1.0. If we plot this as an audio waveform, then it would look something like this:"]}),"\n",(0,i.jsx)(l.A,{src:"https://docs.juce.com/master/tutorial_synth_level_control_graph1.png",caption:"Random numbers generated between 0.0 and 1.0"}),"\n",(0,i.jsx)(t.p,{children:"\u3053\u308c\u306b\u30a2\u30d7\u30ed\u30fc\u30c1\u3059\u308b\u7c21\u5358\u306a\u65b9\u6cd5\u306f\u3001\u307e\u305a\u30ce\u30a4\u30ba\u3092\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u3001\u5e38\u306b-1.0\u304b\u30891.0\u306e\u9593\u3067\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3042\u308b\u3002\u3053\u308c\u3092\u884c\u3046\u306b\u306f\u30012.0\u3092\u639b\u3051\u30011.0\u3092\u5f15\u304f\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u4e0b\u56f3\u306e\u3088\u3046\u306a\u4fe1\u53f7\u306b\u306a\u308a\u307e\u3059\uff1a"}),"\n",(0,i.jsx)(l.A,{src:"https://docs.juce.com/master/tutorial_synth_level_control_graph2.png",caption:"Random numbers generated between -1.0 and 1.0"}),"\n",(0,i.jsxs)(t.p,{children:["This is implemented in code within our ",(0,i.jsx)(t.code,{children:"getNextAudioBlock()"})," function as follows:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"void getNextAudioBlock (const juce::AudioSourceChannelInfo& bufferToFill) override\n    {\n        auto level = (float) levelSlider.getValue()\uff1b\n \n        for (auto channel = 0; channel < bufferToFill.buffer->getNumChannels(); ++channel)\n        {\n            auto* buffer = bufferToFill.buffer->getWritePointer (channel, bufferToFill.startSample)\uff1b\n \n            for (auto sample = 0; sample < bufferToFill.numSamples; ++sample)\n            {\n                auto noise = random.nextFloat() * 2.0f - 1.0f\uff1b\n                buffer[sample] = noise * level\uff1b\n            }\n        }\n    }\n"})}),"\n",(0,i.jsx)(t.h2,{id:"a-minor-optimisation",children:"A minor optimisation"}),"\n",(0,i.jsxs)(t.p,{children:["Reducing the number of arithmetic operations is often a goal for DSP. This is one case where we can avoid performing one multiplication operation per sample. To achieve this, first we could multiply the values between 0.0 and 1.0 by a value equal to ",(0,i.jsx)(t.em,{children:"\u30c0\u30d6\u30eb"})," the required output level. Let's say we want the level to be 0.25. If we multiply our random values by 0.5 we would get something like this:"]}),"\n",(0,i.jsx)(l.A,{src:"https://docs.juce.com/master/tutorial_synth_level_control_graph3.png",caption:"Random numbers scaled between 0.0 and 0.5"}),"\n",(0,i.jsx)(t.p,{children:"\u6700\u5f8c\u306b\u3001\u4e71\u6570\u5024\u304c\u30bc\u30ed\u3092\u4e2d\u5fc3\u3068\u3059\u308b\u3088\u3046\u306b\u30aa\u30d5\u30bb\u30c3\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u3053\u308c\u3092\u884c\u3046\u306b\u306f\u3001\u4e57\u7b97\u3057\u305f\u5024\u306e\u534a\u5206\u306b\u76f8\u5f53\u3059\u308b\u5024\u3092\u5f15\u304f\u3002\u3053\u308c\u306f\u3082\u3061\u308d\u3093\u5143\u306e\u30ec\u30d9\u30eb\u5024\u3067\u3042\u308b\u3002\u6700\u7d42\u7d50\u679c\u306f\u3053\u306e\u3088\u3046\u306b\u306a\u308b\uff1a"}),"\n",(0,i.jsx)(l.A,{src:"https://docs.juce.com/master/tutorial_synth_level_control_graph4.png",caption:"Random numbers scaled and offset to between -0.25 and 0.25"}),"\n",(0,i.jsxs)(t.p,{children:["This could be implemented in code via our ",(0,i.jsx)(t.code,{children:"getNextAudioBlock()"})," function where you should see that there is now one fewer multiplication operation per sample:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"void getNextAudioBlock (const juce::AudioSourceChannelInfo& bufferToFill) override\n    {\n        auto level = (float) levelSlider.getValue()\uff1b\n        auto levelScale = level * 2.0f\uff1b\n \n        for (auto channel = 0; channel < bufferToFill.buffer->getNumChannels(); ++channel)\n        {\n            auto* buffer = bufferToFill.buffer->getWritePointer (channel, bufferToFill.startSample)\uff1b\n \n            for (auto sample = 0; sample < bufferToFill.numSamples; ++sample)\n                buffer[sample] = random.nextFloat() * levelScale - level\uff1b\n        }\n    }\n"})}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["The code for this revised version can be found in the ",(0,i.jsx)(t.code,{children:"SynthLevelControlTutorial_02.h"})," file of the demo project."]})}),"\n",(0,i.jsxs)(t.p,{children:["One remaining problem with this implementation is that the level is only updated to a new constant value for each of the audio blocks generated. In this case, it isn't audible (as the source sound in white noise). If this was applied to most audio content, then this technique would introduce audio artefacts. This is because the level value may be jumping quite abruptly between each audio block, rather than changing smoothly during the audio blocks. Techniques for avoiding these artefacts (such as audible crackling when the level changes) are explored in other tutorials (see ",(0,i.jsx)(t.a,{href:"../tutorial_sine_synth/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30b5\u30a4\u30f3\u6ce2\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"}),")."]}),"\n",(0,i.jsx)(t.p,{children:"\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b2\u3064\u76ee\u306e\u30b9\u30e9\u30a4\u30c0\u30fc\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u6700\u521d\u306e\u30b9\u30e9\u30a4\u30c0\u30fc\u3067\u5de6\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30ec\u30d9\u30eb\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3057\u3001\u3053\u306e2\u756a\u76ee\u306e\u30b9\u30e9\u30a4\u30c0\u30fc\u3067\u53f3\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30ec\u30d9\u30eb\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3057\u307e\u3059\u3002"}),"\n",(0,i.jsx)(t.h1,{id:"\u6982\u8981",children:"\u6982\u8981"}),"\n",(0,i.jsx)(t.p,{children:"\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u306e\u30ec\u30d9\u30eb\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\u4ee5\u4e0b\u306e\u30c8\u30d4\u30c3\u30af\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3057\u305f\uff1a"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"\u4fe1\u53f7\u5024\u306b\u5fc5\u8981\u306a\u51fa\u529b\u30ec\u30d9\u30eb\u3092\u4e57\u3058\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u4fe1\u53f7\u306e\u30ec\u30d9\u30eb\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3002"}),"\n",(0,i.jsx)(t.li,{children:"\u30b9\u30e9\u30a4\u30c0\u30fc\u3092\u4f7f\u3063\u3066\u30aa\u30fc\u30c7\u30a3\u30aa\u30ec\u30d9\u30eb\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u3002"}),"\n"]}),"\n",(0,i.jsx)(t.h1,{id:"\u95a2\u9023\u9805\u76ee",children:"\u95a2\u9023\u9805\u76ee"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"../tutorial_slider_values/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30b9\u30e9\u30a4\u30c0\u30fc\u30af\u30e9\u30b9"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"../tutorial_simple_synth_noise/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30db\u30ef\u30a4\u30c8\u30ce\u30a4\u30ba\u30fb\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u3092\u4f5c\u308b"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"../tutorial_sine_synth/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30b5\u30a4\u30f3\u6ce2\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"../tutorial_synth_db_level_control/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30c7\u30b7\u30d9\u30eb\u3092\u4f7f\u3063\u3066\u30aa\u30fc\u30c7\u30a3\u30aa\u30ec\u30d9\u30eb\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"../tutorial_synth_using_midi_input/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebMIDI\u30b7\u30f3\u30bb\u30b5\u30a4\u30b6\u30fc\u3092\u4f5c\u308b"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"../tutorial_wavetable_synth/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30a6\u30a7\u30fc\u30d6\u30c6\u30fc\u30d6\u30eb\u30b7\u30f3\u30bb\u30b7\u30b9"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},3449:(e,t,n)=>{n.d(t,{A:()=>o});var i=n(4848);function o(e){let{src:t,caption:n,alt:o,width:l,height:r}=e;return(0,i.jsxs)("figure",{children:[(0,i.jsx)("img",{src:t,alt:o||n,width:l,height:r}),(0,i.jsx)("figcaption",{children:(0,i.jsx)("b",{children:n})})]})}},6378:(e,t,n)=>{n.d(t,{A:()=>o});var i=n(4848);function o(e){let{path:t}=e;return(0,i.jsx)("p",{children:(0,i.jsx)("a",{href:`https://docs.juce.com/master/${t}.html`,children:"\ud83d\udcda Source Page"})})}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var i=n(6540);const o={},l=i.createContext(o);function r(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);