"use strict";(self.webpackChunkjuce_tutorial_ja=self.webpackChunkjuce_tutorial_ja||[]).push([[8391],{5043:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>n,metadata:()=>r,toc:()=>h});var s=i(4848),o=i(8453),a=i(3449);i(6378);const n={title:"AudioDeviceManager\u30af\u30e9\u30b9",sidebar_position:6},c="\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebAudioDeviceManager\u30af\u30e9\u30b9",r={id:"audio/tutorial_audio_device_manager",title:"AudioDeviceManager\u30af\u30e9\u30b9",description:"This tutorial introduces the \u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc class which is used for managing audio devices on all platforms. This allows you to configure things such as the device sample rate and the number of inputs and outputs.",source:"@site/docs/audio/tutorial_audio_device_manager.mdx",sourceDirName:"audio",slug:"/audio/tutorial_audio_device_manager",permalink:"/juce-tutorial-ja/audio/tutorial_audio_device_manager",draft:!1,unlisted:!1,editUrl:"https://github.com/m1m0zzz/juce-tutorial-ja/tree/main/docs/audio/tutorial_audio_device_manager.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"AudioDeviceManager\u30af\u30e9\u30b9",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"\u30aa\u30fc\u30c7\u30a3\u30aa\u6ce2\u5f62\u3092\u63cf\u304f",permalink:"/juce-tutorial-ja/audio/tutorial_audio_thumbnail"},next:{title:"Synth",permalink:"/juce-tutorial-ja/category/synth"}},d={},h=[{value:"The AudioDeviceSelectorComponent class",id:"the-audiodeviceselectorcomponent-class",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebaudiodevicemanager\u30af\u30e9\u30b9",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebAudioDeviceManager\u30af\u30e9\u30b9"}),"\n",(0,s.jsxs)(t.p,{children:["This tutorial introduces the ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceManager",title:"Manages the state of some audio and midi i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"})," class which is used for managing audio devices on all platforms. This allows you to configure things such as the device sample rate and the number of inputs and outputs."]}),"\n",(0,s.jsx)(t.p,{children:"\u30ec\u30d9\u30eb Intermediate"}),"\n",(0,s.jsx)(t.p,{children:"\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0 Windows, macOS, Linux, iOS, Android"}),"\n",(0,s.jsxs)(t.p,{children:["\u30af\u30e9\u30b9\uff1a ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceManager",title:"Manages the state of some audio and midi i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"}),", ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceSelectorComponent",title:"A component containing controls to let the user change the audio settings of an AudioDeviceManager ob...",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30bb\u30ec\u30af\u30bf\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"}),", ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classChangeListener",title:"Receives change event callbacks that are sent out by a ChangeBroadcaster.",children:"\u5909\u66f4\u30ea\u30b9\u30ca\u30fc"}),", ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classBigInteger",title:"An arbitrarily large integer class.",children:"BigInteger"})]}),"\n",(0,s.jsx)(t.h1,{id:"getting-started",children:"Getting started"}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["This tutorial assumes that you have a basic grasp of using the ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioAppComponent",title:"A base class for writing audio apps that stream from the audio i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," class for audio input and output (see ",(0,s.jsx)(t.a,{href:"../tutorial_processing_audio_input/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa\u5165\u529b\u3092\u51e6\u7406\u3059\u308b"}),"). It also assumes that you are familiar with basic GUI layout techniques (see ",(0,s.jsx)(t.a,{href:"../tutorial_component_parents_children/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u89aa\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"}),")."]})}),"\n",(0,s.jsxs)(t.p,{children:["Download the demo project for this tutorial here: ",(0,s.jsx)(t.a,{href:"/tutorials/PIPs/AudioDeviceManagerTutorial.zip",children:"\u30d4\u30c3\u30d7"})," | ",(0,s.jsx)(t.a,{href:"/tutorials/ZIPs/AudioDeviceManagerTutorial.zip",children:"\u30b8\u30c3\u30d7"}),". Unzip the project and open the first header file in the Projucer."]}),"\n",(0,s.jsxs)(t.p,{children:["If you need help with this step, see ",(0,s.jsx)(t.a,{href:"../tutorial_new_projucer_project/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebProjucer\u30d1\u30fc\u30c81\uff1aProjucer\u3092\u59cb\u3081\u308b"}),"."]}),"\n",(0,s.jsx)(t.h1,{id:"the-demo-project",children:"The demo project"}),"\n",(0,s.jsxs)(t.p,{children:["The demo project is based on the Audio Application template from the Projucer. It presents an ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceSelectorComponent",title:"A component containing controls to let the user change the audio settings of an AudioDeviceManager ob...",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30bb\u30ec\u30af\u30bf\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," object which allows you to configure your audio device settings. The demo project also presents a simple text console that reports the current audio device settings. The application also shows the current CPU usage of the audio processing element of the application."]}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["The code presented here is broadly similar to the ",(0,s.jsx)(t.strong,{children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u8a2d\u5b9a\u30c7\u30e2"})," from the JUCE Demo. The main difference is that the audio generated is the same as in the ",(0,s.jsx)(t.a,{href:"../tutorial_processing_audio_input/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa\u5165\u529b\u3092\u51e6\u7406\u3059\u308b"})," (this ring-modulates the audio input with white noise)."]})}),"\n",(0,s.jsx)(a.A,{src:"https://docs.juce.com/master/tutorial_audio_device_manager_screenshot1.png",caption:"An AudioDeviceSelectorComponent object showing settings for an AudioDeviceManager object"}),"\n",(0,s.jsx)(t.h1,{id:"audio-devices",children:"Audio Devices"}),"\n",(0,s.jsx)(t.p,{children:"JUCE\u306f\u3001\u305d\u308c\u304c\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u5168\u3066\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u4e0a\u3067\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u4e00\u8cab\u3057\u305f\u624b\u6bb5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u63d0\u4f9b\u3055\u308c\u308b\u30c7\u30e2\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u306e\u307f\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3053\u308c\u306fGUI\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u5236\u7d04\u306b\u3088\u308b\u3082\u306e\u3067\u3059\u3002\u30aa\u30fc\u30c7\u30a3\u30aa\u306f\u30e2\u30d0\u30a4\u30eb\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3082\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(t.p,{children:["In the Audio Application template, the ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioAppComponent",title:"A base class for writing audio apps that stream from the audio i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," class instantiates an ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceManager",title:"Manages the state of some audio and midi i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"})," object ",(0,s.jsx)(t.code,{children:"\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"})," \u2014 it is a public member, therefore it is accessible from your subclass. The ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioAppComponent",title:"A base class for writing audio apps that stream from the audio i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," class also performs some basic initialisation of this ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceManager",title:"Manages the state of some audio and midi i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"})," object \u2014 this happens when you call ",(0,s.jsx)(t.a,{href:"classAudioAppComponent.html#a1cb6b457848fa80df7efc39cf095d465",title:"A subclass should call this from their constructor, to set up the audio.",children:"AudioAppComponent::setAudioChannels()"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceManager",title:"Manages the state of some audio and midi i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"})," class will attempt to use the default audio device unless this is overridden. This may be configured in code or via the ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceSelectorComponent",title:"A component containing controls to let the user change the audio settings of an AudioDeviceManager ob...",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30bb\u30ec\u30af\u30bf\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," as illustrated here. Device settings and preferences may be stored and recalled on subsequent applications launches. The ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceManager",title:"Manages the state of some audio and midi i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"})," class can also fallback to the default device in such circumstances if the preferred device is no longer available (for example, if an external audio device has been unplugged since the last launch)."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceManager",title:"Manages the state of some audio and midi i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"})," class is also a hub for incoming MIDI messages. This is explored in other tutorials (see ",(0,s.jsx)(t.a,{href:"../tutorial_handling_midi_events/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\uff1aMIDI\u30a4\u30d9\u30f3\u30c8\u306e\u51e6\u7406"}),")."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceManager",title:"Manages the state of some audio and midi i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"})," class can broadcast changes to its settings as it inherits from the ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classChangeBroadcaster",title:"Holds a list of ChangeListeners, and sends messages to them when instructed.",children:"\u30c1\u30a7\u30f3\u30b8\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30bf\u30fc"})," class. The right-hand side of our component posts some of the important audio device settings whenever a change in our ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceManager",title:"Manages the state of some audio and midi i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"})," object is triggered."]}),"\n",(0,s.jsx)(t.h2,{id:"the-audiodeviceselectorcomponent-class",children:"The AudioDeviceSelectorComponent class"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceSelectorComponent",title:"A component containing controls to let the user change the audio settings of an AudioDeviceManager ob...",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30bb\u30ec\u30af\u30bf\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," class provides convenient way of configuring audio devices on all platforms. As mentioned above, this is displayed in the right-hand side of our user interface for the demo project. When the ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceSelectorComponent",title:"A component containing controls to let the user change the audio settings of an AudioDeviceManager ob...",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30bb\u30ec\u30af\u30bf\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," object is constructed we pass it the ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceManager",title:"Manages the state of some audio and midi i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"})," object that we want it to control along with a number of other options including the number of channels to support (see the ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceSelectorComponent",title:"A component containing controls to let the user change the audio settings of an AudioDeviceManager ob...",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30bb\u30ec\u30af\u30bf\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," class ",(0,s.jsx)(t.a,{href:"classAudioDeviceSelectorComponent.html#a859af6ef664a974dc7d2ce3d24d8f94c",children:"\u30d3\u30eb\u30c0\u30fc"})," for more information). Here we create the ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceSelectorComponent",title:"A component containing controls to let the user change the audio settings of an AudioDeviceManager ob...",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30bb\u30ec\u30af\u30bf\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," object by passing it the ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioDeviceManager",title:"Manages the state of some audio and midi i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc"})," object that is the member of the ",(0,s.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioAppComponent",title:"A base class for writing audio apps that stream from the audio i/o devices.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"}),", allowing up to 256 input and output channels, hiding MIDI configuration, and showing our channels as single channels rather than stereo pairs:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u6a5f\u5668\u306e\u5909\u5316\u306b\u5bfe\u5fdc\u3002"}),"\n",(0,s.jsx)(t.li,{children:"\u30b5\u30f3\u30d7\u30eb\u30ec\u30fc\u30c8\u3084\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u306a\u3069\u3001\u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u306e\u4fbf\u5229\u306a\u8a2d\u5b9a\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002"}),"\n"]}),"\n",(0,s.jsx)(t.h1,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"../tutorial_processing_audio_input/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30aa\u30fc\u30c7\u30a3\u30aa\u5165\u529b\u3092\u51e6\u7406\u3059\u308b"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},3449:(e,t,i)=>{i.d(t,{A:()=>o});var s=i(4848);function o(e){let{src:t,caption:i,alt:o,width:a,height:n}=e;return(0,s.jsxs)("figure",{children:[(0,s.jsx)("img",{src:t,alt:o||i,width:a,height:n}),(0,s.jsx)("figcaption",{children:(0,s.jsx)("b",{children:i})})]})}},6378:(e,t,i)=>{i.d(t,{A:()=>o});var s=i(4848);function o(e){let{path:t}=e;return(0,s.jsx)("p",{children:(0,s.jsx)("a",{href:"https://docs.juce.com/master/"+t,children:"\ud83d\udcda Source Page"})})}},8453:(e,t,i)=>{i.d(t,{R:()=>n,x:()=>c});var s=i(6540);const o={},a=s.createContext(o);function n(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:n(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);