"use strict";(self.webpackChunkjuce_tutorial_ja=self.webpackChunkjuce_tutorial_ja||[]).push([[7092],{4020:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>h});var a=s(4848),r=s(8453),n=(s(3449),s(6378)),o=s(5706);const i={title:"\u30d7\u30e9\u30b0\u30a4\u30f3\u72b6\u614b\u306e\u4fdd\u5b58\u3068\u8aad\u307f\u8fbc\u307f",sidebar_position:2,tags:["\u4e2d\u7d1a"]},c="\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\uff1a\u30d7\u30e9\u30b0\u30a4\u30f3\u72b6\u614b\u306e\u4fdd\u5b58\u3068\u8aad\u307f\u8fbc\u307f",l={id:"plugins/tutorial_audio_processor_value_tree_state",title:"\u30d7\u30e9\u30b0\u30a4\u30f3\u72b6\u614b\u306e\u4fdd\u5b58\u3068\u8aad\u307f\u8fbc\u307f",description:"\u30d7\u30e9\u30b0\u30a4\u30f3\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u81ea\u52d5\u7ba1\u7406\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u4fdd\u5b58\u3068\u30a2\u30af\u30bb\u30b9\u304c\u7c21\u5358\u306b\u306a\u308a\u3001\u7279\u306b\u52b9\u679c\u7684\u306a\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u69cb\u7bc9\u304c\u3088\u308a\u7c21\u5358\u306b\u306a\u308a\u307e\u3059\u3002",source:"@site/docs/plugins/tutorial_audio_processor_value_tree_state.mdx",sourceDirName:"plugins",slug:"/plugins/tutorial_audio_processor_value_tree_state",permalink:"/juce-tutorial-ja/plugins/tutorial_audio_processor_value_tree_state",draft:!1,unlisted:!1,editUrl:"https://github.com/m1m0zzz/juce-tutorial-ja/tree/main/docs/plugins/tutorial_audio_processor_value_tree_state.mdx",tags:[{label:"\u4e2d\u7d1a",permalink:"/juce-tutorial-ja/tags/\u4e2d\u7d1a"}],version:"current",sidebarPosition:2,frontMatter:{title:"\u30d7\u30e9\u30b0\u30a4\u30f3\u72b6\u614b\u306e\u4fdd\u5b58\u3068\u8aad\u307f\u8fbc\u307f",sidebar_position:2,tags:["\u4e2d\u7d1a"]},sidebar:"tutorialSidebar",previous:{title:"\u30d7\u30e9\u30b0\u30a4\u30f3\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8ffd\u52a0",permalink:"/juce-tutorial-ja/plugins/tutorial_audio_parameter"},next:{title:"\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u9069\u5207\u306a\u30d0\u30b9\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u8a2d\u5b9a\u3059\u308b",permalink:"/juce-tutorial-ja/plugins/tutorial_audio_bus_layouts"}},d={},h=[{value:"\u306f\u3058\u3081\u308b",id:"\u306f\u3058\u3081\u308b",level:2},{value:"Configuring the parameters",id:"configuring-the-parameters",level:2},{value:"Performing the gain processing",id:"performing-the-gain-processing",level:2},{value:"Storing and retrieving parameters",id:"storing-and-retrieving-parameters",level:2},{value:"Component attachments",id:"component-attachments",level:2}];function u(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30d7\u30e9\u30b0\u30a4\u30f3\u72b6\u614b\u306e\u4fdd\u5b58\u3068\u8aad\u307f\u8fbc\u307f",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\uff1a\u30d7\u30e9\u30b0\u30a4\u30f3\u72b6\u614b\u306e\u4fdd\u5b58\u3068\u8aad\u307f\u8fbc\u307f"}),"\n",(0,a.jsx)(n.A,{path:"tutorial_audio_processor_value_tree_state"}),"\n",(0,a.jsx)(t.p,{children:"\u30d7\u30e9\u30b0\u30a4\u30f3\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u81ea\u52d5\u7ba1\u7406\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u4fdd\u5b58\u3068\u30a2\u30af\u30bb\u30b9\u304c\u7c21\u5358\u306b\u306a\u308a\u3001\u7279\u306b\u52b9\u679c\u7684\u306a\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u69cb\u7bc9\u304c\u3088\u308a\u7c21\u5358\u306b\u306a\u308a\u307e\u3059\u3002"}),"\n",(0,a.jsx)(t.p,{children:"\u30ec\u30d9\u30eb\uff1a\u4e2d\u7d1a"}),"\n",(0,a.jsx)(t.p,{children:"\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0 Windows, macOS, Linux"}),"\n",(0,a.jsx)(o.A,{refs:["AudioProcessorValueTreeState","ValueTree","XmlElement"]}),"\n",(0,a.jsx)(t.h2,{id:"\u306f\u3058\u3081\u308b",children:"\u306f\u3058\u3081\u308b"}),"\n",(0,a.jsxs)(t.p,{children:["Download the demo project for this tutorial here: ",(0,a.jsx)(t.a,{href:"/tutorials/PIPs/AudioProcessorValueTreeStateTutorial.zip",children:"\u30d4\u30c3\u30d7"})," | ",(0,a.jsx)(t.a,{href:"/tutorials/ZIPs/AudioProcessorValueTreeStateTutorial.zip",children:"\u30b8\u30c3\u30d7"}),". Unzip the project and open the first header file in the Projucer."]}),"\n",(0,a.jsxs)(t.p,{children:["If you need help with this step, see ",(0,a.jsx)(t.a,{href:"../tutorial_new_projucer_project/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebProjucer\u30d1\u30fc\u30c81\uff1aProjucer\u3092\u59cb\u3081\u308b"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["You should also know how to build an audio plug-in using JUCE and load this into your preferred audio host (such as a Digital Audio Workstation). See ",(0,a.jsx)(t.a,{href:"../tutorial_create_projucer_basic_plugin/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u57fa\u672c\u7684\u306aAudio/MIDI\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u308b, \u30d1\u30fc\u30c81\uff1a\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7"})," for an introduction. Ideally, you should also have read ",(0,a.jsx)(t.a,{href:"../tutorial_audio_parameter/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30d7\u30e9\u30b0\u30a4\u30f3\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8ffd\u52a0"}),", as an introduction to audio processor parameters."]}),"\n",(0,a.jsx)(t.h1,{id:"the-demo-project",children:"The demo project"}),"\n",(0,a.jsxs)(t.p,{children:["The demo project is loosely based on the ",(0,a.jsx)(t.em,{children:"\u30b2\u30a4\u30f3\u30d7\u30e9\u30b0\u30a4\u30f3"})," project in the ",(0,a.jsx)(t.code,{children:"JUCE/examples/Plugins"})," directory. This plugin changes the gain of an incoming signal using a single parameter. In addition to this, it also has a phase invert* parameter to invert the phase of the incoming signal."]}),"\n",(0,a.jsx)(t.h1,{id:"the-gain-processor",children:"The gain processor"}),"\n",(0,a.jsxs)(t.p,{children:["Most of the code in the ",(0,a.jsx)(t.code,{children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc"})," class is the same as that generated by the Projucer when you use the ",(0,a.jsx)(t.strong,{children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30e9\u30b0\u30a4\u30f3"})," project template. For simplicity, we have bundled the processor code into a single ",(0,a.jsx)(t.code,{children:".h"})," file rather than being split across a ",(0,a.jsx)(t.code,{children:".cpp"})," and an ",(0,a.jsx)(t.code,{children:".h"})," file. The editor for the processor is in the ",(0,a.jsx)(t.code,{children:"\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30a8\u30c7\u30a3\u30bf\u30fc"})," class."]}),"\n",(0,a.jsxs)(t.p,{children:["There are several advantages to using the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," class for managing your plug-in's parameters:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["The ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classValueTree",title:"A powerful tree structure that can be used to hold free-form data, and which can handle its own undo ...",children:"\u30d0\u30ea\u30e5\u30fc\u30c4\u30ea\u30fc"})," class inherently provides undo support."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classValueTree",title:"A powerful tree structure that can be used to hold free-form data, and which can handle its own undo ...",children:"\u30d0\u30ea\u30e5\u30fc\u30c4\u30ea\u30fc"})," objects already have support for serialising and deserialising (to XML)."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classValueTree",title:"A powerful tree structure that can be used to hold free-form data, and which can handle its own undo ...",children:"\u30d0\u30ea\u30e5\u30fc\u30c4\u30ea\u30fc"})," objects can have listeners attached to them. This means that the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," class can almost automatically connect to sliders and buttons to keep the state of the UI and the processor up-to-date in a thread safe manner."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["To use an ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," object, you can store one in your processor class:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\uff1a\n    //==============================================================================\n    juce::AudioProcessorValueTreeState \u30d1\u30e9\u30e1\u30fc\u30bf\uff1b\n"})}),"\n",(0,a.jsxs)(t.p,{children:["You may store your ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," object elsewhere but you must be careful that each ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," object must be:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"1\u3064\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u306b\u306e\u307f\u63a5\u7d9a\u3055\u308c\u308b"}),"\n",(0,a.jsx)(t.li,{children:"\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3068\u540c\u3058\u30e9\u30a4\u30d5\u30bf\u30a4\u30e0\u3092\u6301\u3064\uff08\u304a\u4e92\u3044\u306b\u4f9d\u5b58\u95a2\u4fc2\u304c\u3042\u308b\u305f\u3081\uff09\u3002"}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["Storing the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," object in the processor class makes it easier to ensure that you satisfy these requirements."]}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," constructor requires a reference to the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessor",title:"Base class for audio processing classes or plugins.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5"})," subclass that it will be attached to, a pointer to an ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classUndoManager",title:"Manages a list of undo/redo commands.",children:"UndoManager"})," object, an ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classIdentifier",title:"Represents a string identifier, designed for accessing properties by name.",children:"\u7279\u5b9a\u3059\u308b"})," for the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classValueTree",title:"A powerful tree structure that can be used to hold free-form data, and which can handle its own undo ...",children:"\u30d0\u30ea\u30e5\u30fc\u30c4\u30ea\u30fc"})," and an ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState_1_1ParameterLayout",title:"A class to contain a set of RangedAudioParameters and AudioProcessorParameterGroups containing Ranged...",children:"AudioProcessorValueTreeState::ParameterLayout"})," containing the parameters to manage."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"AudioProcessorValueTreeState\uff08AudioProcessor&processorToConnectTo\u3001\n                              UndoManager* undoManagerToUse\u3001\n                              const juce::Identifier& valueTreeType\u3001\n                              ParameterLayout parameterLayout)\uff1b\nAudioProcessorValueTreeState\u3053\u306e\u30af\u30e9\u30b9\u306b\u306f\u3001AudioProcessor\u5168\u4f53\u306e\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308bValueTree\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u5b9a\u7fa9 juce_AudioProcessorValueTreeState.h:115\nAudioProcessorBase \u30aa\u30fc\u30c7\u30a3\u30aa\u51e6\u7406\u30af\u30e9\u30b9\u307e\u305f\u306f\u30d7\u30e9\u30b0\u30a4\u30f3\u7528\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\u5b9a\u7fa9 juce_AudioProcessor.h:51\nUndoManager\u30a2\u30f3\u30c9\u30a5/\u30ea\u30c9\u30a5\u30b3\u30de\u30f3\u30c9\u306e\u30ea\u30b9\u30c8\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002\u5b9a\u7fa9 juce_UndoManager.h:55\n"})}),"\n",(0,a.jsxs)(t.p,{children:["In this case, we will use a ",(0,a.jsx)(t.code,{children:"\u30cc\u30eb\u30d7\u30c8\u30eb"})," value for the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classUndoManager",title:"Manages a list of undo/redo commands.",children:"UndoManager"})," object as we're not going to implement undo support in this tutorial. The ",(0,a.jsx)(t.code,{children:"\u30cc\u30eb\u30d7\u30c8\u30eb"})," value indicates that we do not want to use undo support."]}),"\n",(0,a.jsx)(t.h2,{id:"configuring-the-parameters",children:"Configuring the parameters"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState_1_1ParameterLayout",title:"A class to contain a set of RangedAudioParameters and AudioProcessorParameterGroups containing Ranged...",children:"AudioProcessorValueTreeState::ParameterLayout"})," parameter of the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," contains the parameters of our plug-in. The ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," can manage any parameters derived from ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classRangedAudioParameter",title:"This abstract base class is used by some AudioProcessorParameter helper classes.",children:"RangedAudioParameter"}),", and the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState_1_1ParameterLayout",title:"A class to contain a set of RangedAudioParameters and AudioProcessorParameterGroups containing Ranged...",children:"AudioProcessorValueTreeState::ParameterLayout"})," constructor can take a variable number of ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classRangedAudioParameter",title:"This abstract base class is used by some AudioProcessorParameter helper classes.",children:"RangedAudioParameter"})," subclasses or AudioProcessorParameterGroups containing RangedAudioParameters."]}),"\n",(0,a.jsx)(t.p,{children:"APVTS\u304c\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u30b0\u30eb\u30fc\u30d7\u306e\u6240\u6709\u6a29\u3092\u6301\u3064\u305f\u3081\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u30b0\u30eb\u30fc\u30d7\u306fstd::unique_ptr\u3092\u4f7f\u3063\u3066\u6e21\u3055\u308c\u308b\u3002"}),"\n",(0,a.jsxs)(t.p,{children:["JUCE's built-in parameter types, the same ones we used in ",(0,a.jsx)(t.a,{href:"../tutorial_audio_parameter/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30d7\u30e9\u30b0\u30a4\u30f3\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8ffd\u52a0"}),", are subclasses of ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classRangedAudioParameter",title:"This abstract base class is used by some AudioProcessorParameter helper classes.",children:"RangedAudioParameter"}),", so we can use them here too."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'    TutorialProcessor()\n        : parameters (*this, nullptr, juce::Identifier ("APVTSTutorial"),\n                      {\n                          std::make_unique ("gain",            // parameterID\n                                                                       "Gain",            // parameter name\n                                                                       0.0f,              // minimum value\n                                                                       1.0f,              // maximum value\n                                                                       0.5f),             // default value\n                          std::make_unique("invertPhase", // parameterID\n                                                                      "Invert Phase", // \u30d1\u30e9\u30e1\u30fc\u30bf\u540d\n                                                                      false) // \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n                      })\n    {\n'})}),"\n",(0,a.jsxs)(t.p,{children:["Adding your parameters to an ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," automatically adds them to the attached ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessor",title:"Base class for audio processing classes or plugins.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5"})," too."]}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.em,{children:"\u30d1\u30e9\u30e1\u30fc\u30bfID"})," should be a unique identifier for this parameter. Think of this like a variable name; it can contain alphanumeric characters and underscores, but no spaces. The ",(0,a.jsx)(t.em,{children:"\u30d1\u30e9\u30e1\u30fc\u30bf\u540d"})," is the name that will be displayed on the screen."]}),"\n",(0,a.jsx)(t.h2,{id:"performing-the-gain-processing",children:"Performing the gain processing"}),"\n",(0,a.jsx)(t.p,{children:"To help avoid clicks in the signal, we smooth gain changes and changes in signal phase. To do this, we store the previously calculated gain value in our processor [1]:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"private:\n    //==============================================================================\n    juce::AudioProcessorValueTreeState parameters;\n    float previousGain; // [1]\n \n    std::atomic* phaseParameter = nullptr;\n    std::atomic* gainParameter = nullptr\uff1b\n \n    //==============================================================================\n    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (TutorialProcessor)\n};\n"})}),"\n",(0,a.jsx)(t.p,{children:"\u307e\u305f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u6700\u5f8c\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304d\u3001\u5f8c\u3067\u305d\u308c\u3089\u3092\u518d\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\uff1a"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'phaseParameter = parameters.getRawParameterValue ("invertPhase")\uff1b\n        gainParameter = parameters.getRawParameterValue ("gain")\uff1b\n'})}),"\n",(0,a.jsxs)(t.p,{children:["The changes are initialised in the ",(0,a.jsx)(t.code,{children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30d7\u30ed\u30bb\u30c3\u30b5::prepareToPlay()"})," function:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"void prepareToPlay (double, int) override\n    {\n        auto phase = *phaseParameter < 0.5f ?1.0f : -1.0f\uff1b\n        previousGain = *gainParameter * phase\uff1b\n    }\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Here we calculate the phase inversion factor (+1 or -1) and multiply this by the gain, ready for the first processing callback. You can see that we use the ",(0,a.jsx)(t.a,{href:"classAudioProcessorValueTreeState.html#a645123ccd146258f28d77b6095169c91",title:"Returns a pointer to a floating point representation of a particular parameter which a realtime proce...",children:"AudioProcessorValueTreeState::getRawParameterValue()"})," function to get a pointer to the ",(0,a.jsx)(t.code,{children:"\u30d5\u30ed\u30fc\u30c8"})," value representing the parameter value. We dereference this to get the actual value. The processing is performed in the ",(0,a.jsx)(t.code,{children:"TutorialProcessor::processBlock()"})," function:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"void processBlock (juce::AudioSampleBuffer& buffer, juce::MidiBuffer&) override\n    {\n        auto phase = *phaseParameter < 0.5f ?1.0f : -1.0f\uff1b\n        auto currentGain = *gainParameter * phase\uff1b\n \n        if (juce::approximatelyEqual (currentGain, previousGain))\n        {\n            buffer.applyGain (currentGain)\uff1b\n        }\n        else\n        {\n            buffer.applyGainRamp (0, buffer.getNumSamples(), previousGain, currentGain)\uff1b\n            previousGain = currentGain\uff1b\n        }\n    }\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Here you can see that if the value hasn't changed, then we simply apply a constant gain. If the value has changed, then we apply the gain ramp, then update the ",(0,a.jsx)(t.code,{children:"\u524d\u30b2\u30a4\u30f3"})," value for next time."]}),"\n",(0,a.jsx)(t.h2,{id:"storing-and-retrieving-parameters",children:"Storing and retrieving parameters"}),"\n",(0,a.jsxs)(t.p,{children:["In addition to providing routines for processing audio you also need to provide methods for storing and retrieving the ",(0,a.jsx)(t.em,{children:"\u5168\u4f53"})," state of your plug-in into a block of memory. This should include the current values of all of your parameters, but it can also include other state information if needed (for example, if your plug-in deals with files, it might store the file paths)."]}),"\n",(0,a.jsxs)(t.p,{children:["Using an ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," object to store your plug-in's state makes this really simple as a ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classValueTree",title:"A powerful tree structure that can be used to hold free-form data, and which can handle its own undo ...",children:"\u30d0\u30ea\u30e5\u30fc\u30c4\u30ea\u30fc"})," object can easily be converted to and from XML."]}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.a,{href:"classAudioProcessor.html#a5d79591b367a7c0516e4ef4d1d6c32b2",title:"The host will call this method when it wants to save the processor's internal state.",children:"AudioProcessor::getStateInformation()"})," callback asks your plug-in to store its state into a ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classMemoryBlock",title:"A class to hold a resizable block of raw data.",children:"\u30e1\u30e2\u30ea\u30fc\u30d6\u30ed\u30c3\u30af"})," object. To do this using XML via the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classValueTree",title:"A powerful tree structure that can be used to hold free-form data, and which can handle its own undo ...",children:"\u30d0\u30ea\u30e5\u30fc\u30c4\u30ea\u30fc"})," object the code is simply:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"    void getStateInformation (juce::MemoryBlock& destData) override\n    {\n        auto state = parameters.copyState();\n        std::unique_ptrxml (state.createXml())\uff1b\n        copyXmlToBinary (*xml, destData)\uff1b\n    }\n"})}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classXmlElement",title:"Used to build a tree of elements representing an XML document.",children:"XmlElement"})," object created will have a ",(0,a.jsx)(t.em,{children:"\u30bf\u30b0\u540d"}),' of "APVTSTutorial", which we used to initialise the ',(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classValueTree",title:"A powerful tree structure that can be used to hold free-form data, and which can handle its own undo ...",children:"\u30d0\u30ea\u30e5\u30fc\u30c4\u30ea\u30fc"})," object earlier."]}),"\n",(0,a.jsx)(t.p,{children:"XML\u304b\u3089\u72b6\u614b\u3092\u5fa9\u5143\u3059\u308b\u306e\u306f\u3001\u307b\u3068\u3093\u3069\u7c21\u5358\u3060\uff1a"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"    void setStateInformation (const void* data, int sizeInBytes) override\n    {\n        std::unique_ptrxmlState (getXmlFromBinary (data, sizeInBytes))\uff1b\n \n        if (xmlState.get() != nullptr)\n            if (xmlState->hasTagName (parameters.state.getType()))\n                parameters.replaceState (juce::ValueTree::fromXml (*xmlState))\uff1b\n    }\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Here we include some error checking for safety. We also check that the ValueTree-generated XML is of the correct ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classValueTree",title:"A powerful tree structure that can be used to hold free-form data, and which can handle its own undo ...",children:"\u30d0\u30ea\u30e5\u30fc\u30c4\u30ea\u30fc"})," ",(0,a.jsx)(t.em,{children:"\u30bf\u30a4\u30d7"})," for our plug-in by inspecting the XML element's ",(0,a.jsx)(t.em,{children:"\u30bf\u30b0\u540d"}),"."]}),"\n",(0,a.jsx)(t.h1,{id:"the-gain-editor",children:"The gain editor"}),"\n",(0,a.jsxs)(t.p,{children:["Take a look at the ",(0,a.jsx)(t.code,{children:"\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30a8\u30c7\u30a3\u30bf\u30fc"})," class in the project. You might notice that the declaration of the ",(0,a.jsx)(t.code,{children:"\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30a8\u30c7\u30a3\u30bf\u30fc"})," class is very simple:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"\u30af\u30e9\u30b9 GenericEditor : public juce::AudioProcessorEditor\n{\npublic\uff1a\n"})}),"\n",(0,a.jsxs)(t.p,{children:["You might expect that we would need to inherit from the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classSlider_1_1Listener",title:"A class for receiving callbacks from a Slider.",children:"\u30b9\u30e9\u30a4\u30c0\u30fc::\u30ea\u30b9\u30ca\u30fc"})," class and the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classButton_1_1Listener",title:"Used to receive callbacks when a button is clicked.",children:"\u30dc\u30bf\u30f3::\u30ea\u30b9\u30ca\u30fc"})," class in order to respond to slider and button interaction. But this is again one of the benefits of using the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," class. Instead we can use the ",(0,a.jsx)(t.em,{children:"\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb"})," classes within the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," class."]}),"\n",(0,a.jsx)(t.h2,{id:"component-attachments",children:"Component attachments"}),"\n",(0,a.jsxs)(t.p,{children:["In fact, as the names of these classes can become very long, we have included a ",(0,a.jsx)(t.code,{children:"typedef"})," for each of the attachment classes we need:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"typedef juce::AudioProcessorValueTreeState::SliderAttachment \u30b9\u30e9\u30a4\u30c0\u30fc\u30a2\u30bf\u30c3\u30c1\u30e1\u30f3\u30c8\uff1b\n    typedef juce::AudioProcessorValueTreeState::ButtonAttachment \u30dc\u30bf\u30f3\u30a2\u30bf\u30c3\u30c1\u30e1\u30f3\u30c8\uff1b\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Our ",(0,a.jsx)(t.code,{children:"\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30a8\u30c7\u30a3\u30bf\u30fc"})," class contains a number of members, including a slider, a toggle button, and some of these attachment objects:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"private:\n    juce::AudioProcessorValueTreeState& valueTreeState;\n \n    juce::Label gainLabel;\n    juce::Slider gainSlider;\n    std::unique_ptr gainAttachment;\n \n    juce::ToggleButton invertButton;\n    std::unique_ptrinvertAttachment\uff1b\n};\n"})}),"\n",(0,a.jsxs)(t.p,{children:["We also need to refer to the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," object so we also keep a reference to that."]}),"\n",(0,a.jsxs)(t.p,{children:["The constructor for our ",(0,a.jsx)(t.code,{children:"\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30a8\u30c7\u30a3\u30bf\u30fc"})," class sets up these objects:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'GenericEditor (juce::AudioProcessor& parent, juce::AudioProcessorValueTreeState& vts)\n        : AudioProcessorEditor (parent)\u3001\n          valueTreeState (vts)\n    {\n        gainLabel.setText ("Gain", juce::dontSendNotification)\uff1b\n        addAndMakeVisible (gainLabel)\uff1b\n \n        addAndMakeVisible (gainSlider)\uff1b\n        gainAttachment.reset (new SliderAttachment (valueTreeState, "gain", gainSlider))\uff1b\n \n        invertButton.setButtonText ("Invert Phase")\uff1b\n        addAndMakeVisible (invertButton)\uff1b\n        invertAttachment.reset (new ButtonAttachment (valueTreeState, "invertPhase", invertButton))\uff1b\n \n        setSize (paramSliderWidth + paramLabelWidth, juce::jmax (100, paramControlHeight * 2))\uff1b\n    }\n'})}),"\n",(0,a.jsxs)(t.p,{children:["This is called by our processor's ",(0,a.jsx)(t.code,{children:"TutorialProcessor::createEditor()"})," function:"]}),"\n",(0,a.jsxs)(t.p,{children:["You may notice that we don't even need to set up the slider's value range. This is done automatically by the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState_1_1SliderAttachment",children:"\u30b9\u30e9\u30a4\u30c0\u30fc\u30fb\u30a2\u30bf\u30c3\u30c1\u30e1\u30f3\u30c8"})," class. All we need to do is pass the ",(0,a.jsx)(t.em,{children:"\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb"})," constructor the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"}),", the ",(0,a.jsx)(t.em,{children:"\u30d1\u30e9\u30e1\u30fc\u30bfID"})," and the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classSlider",title:"A slider control for changing a value.",children:"\u30b9\u30e9\u30a4\u30c0\u30fc"})," object that it should attach to."]}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["We still retain ownership of the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classSlider",title:"A slider control for changing a value.",children:"\u30b9\u30e9\u30a4\u30c0\u30fc"})," object. You should ensure that the ",(0,a.jsx)(t.em,{children:"\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb"})," class has the same lifetime as the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classSlider",title:"A slider control for changing a value.",children:"\u30b9\u30e9\u30a4\u30c0\u30fc"})," object."]})}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState_1_1ButtonAttachment",children:"\u30dc\u30bf\u30f3\u30a2\u30bf\u30c3\u30c1\u30e1\u30f3\u30c8"})," class still requires us to provide the button name. (And the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState_1_1ComboBoxAttachment",title:"An object of this class maintains a connection between a ComboBox and a parameter in an AudioProcesso...",children:"AudioProcessorValueTreeState::ComboBoxAttachment"})," class, which can attach to a ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classComboBox",title:"A component that lets the user choose from a drop-down list of choices.",children:"\u30b3\u30f3\u30dc\u30dc\u30c3\u30af\u30b9"})," object, requires us to populate the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classComboBox",title:"A component that lets the user choose from a drop-down list of choices.",children:"\u30b3\u30f3\u30dc\u30dc\u30c3\u30af\u30b9"})," manually.)"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"\u30d7\u30e9\u30b0\u30a4\u30f3\u30922\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30e1\u30a4\u30f3\u30d0\u30b9\u306e\u307f\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5de6\u53f3\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30c1\u30e3\u30f3\u30cd\u30eb\u30b9\u30ef\u30c3\u30d7\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u3002"}),"\n",(0,a.jsx)(t.li,{children:"\u518d\u30732\u30c1\u30e3\u30f3\u30cd\u30eb\u5c02\u7528\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f7f\u3044\u3001\u5de6\u53f3\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u30ec\u30d9\u30eb\u3092\u30d0\u30e9\u30f3\u30b9\u3055\u305b\u308b\u30d0\u30e9\u30f3\u30b9\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002"}),"\n"]}),"\n",(0,a.jsx)(t.h1,{id:"adding-parameters-programatically",children:"Adding Parameters Programatically"}),"\n",(0,a.jsxs)(t.p,{children:["You can also add parameters (or AudioProcessorParameterGroups) to an ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," programatically, by calling ",(0,a.jsx)(t.code,{children:"\u8ffd\u52a0"})," on it. An example of how to do this is shown below:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'juce::AudioProcessorValueTreeState::ParameterLayout createParameterLayout()\n{\n    juce::AudioProcessorValueTreeState::ParameterLayout params;\n \n    for (int i = 1; i < 9; ++i)\n        params.add (std::make_unique(\u6587\u5b57\u5217 (i), \u6587\u5b57\u5217 (i), 0, i, 0\uff09\uff1b\n \n    params \u3092\u8fd4\u3057\u307e\u3059\uff1b\n}\n \nYourAudioProcessor()\n    : parameters (*this, nullptr, "PARAMETERS", createParameterLayout())\n{\n    //...\nStringJUCE\u306eString\u30af\u30e9\u30b9\uff01\u5b9a\u7fa9 juce_String.h:56\n'})}),"\n",(0,a.jsx)(t.h1,{id:"deprecated-methods",children:"Deprecated Methods"}),"\n",(0,a.jsxs)(t.p,{children:["Before JUCE version 5.4 the only way to add parameters to an ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," was to use the now deprecated createAndAddParameter method with many function parameters."]}),"\n",(0,a.jsx)(t.p,{children:"\u4ee5\u524d\u306f\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3060\u3063\u305f\u3002"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"createAndAddParameter (paramID1, paramName1, ...)\uff1b\n"})}),"\n",(0,a.jsx)(t.p,{children:"\u3068\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"using Parameter = juce::AudioProcessorValueTreeState::Parameter;\ncreateAndAddParameter (std::make_unique(paramID1\u3001paramName1\u3001...))\uff1b\n"})}),"\n",(0,a.jsxs)(t.p,{children:["but using the new ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," constructor described in this tutorial is a much better approach:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'using Parameter = AudioProcessorValueTreeState::Parameter;\nYourAudioProcessor()\n    : apvts (*this, nullptr, "PARAMETERS", { std::make_unique (paramID1, paramName1, ...),\n                                             std::make_unique(paramID2, paramName2, ...)\u3001\n                                             ...})\nAudioProcessorValueTreeState::Parameter\u975e\u63a8\u5968AudioProcessorValueTreeState\u3068\u306e\u5f8c\u65b9\u4e92\u63db\u6027\u3092\u7dad\u6301\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30af\u30e9\u30b9...\u5b9a\u7fa9 juce_AudioProcessorValueTreeState.h:450\n'})}),"\n",(0,a.jsx)(t.h1,{id:"\u6982\u8981",children:"\u6982\u8981"}),"\n",(0,a.jsxs)(t.p,{children:["In this tutorial we have introduced the ",(0,a.jsx)(t.a,{href:"https://docs.juce.com/master/classAudioProcessorValueTreeState",title:"This class contains a ValueTree that is used to manage an AudioProcessor's entire state.",children:"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d7\u30ed\u30bb\u30c3\u30b5\u5024\u30c4\u30ea\u30fc\u72b6\u614b"})," class and shown how it can help you to:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002"}),"\n",(0,a.jsx)(t.li,{children:"XML\u3092\u4f7f\u7528\u3057\u3066\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u72b6\u614b\u3092\u4fdd\u5b58\u304a\u3088\u3073\u53d6\u5f97\u3057\u307e\u3059\u3002"}),"\n",(0,a.jsx)(t.li,{children:"\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u306a\u65b9\u6cd5\u3067\u30d7\u30e9\u30b0\u30a4\u30f3\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30dc\u30bf\u30f3\u3084\u30b9\u30e9\u30a4\u30c0\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002"}),"\n"]}),"\n",(0,a.jsx)(t.h1,{id:"\u95a2\u9023\u9805\u76ee",children:"\u95a2\u9023\u9805\u76ee"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"../tutorial_audio_parameter/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30d7\u30e9\u30b0\u30a4\u30f3\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8ffd\u52a0"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"../tutorial_audio_bus_layouts/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u9069\u5207\u306a\u30d0\u30b9\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u8a2d\u5b9a\u3059\u308b"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"../tutorial_value_tree/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebValueTree\u30af\u30e9\u30b9"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"../tutorial_audio_processor_graph/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30ab\u30b9\u30b1\u30fc\u30c9\u30d7\u30e9\u30b0\u30a4\u30f3\u30a8\u30d5\u30a7\u30af\u30c8"})}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},3449:(e,t,s)=>{s.d(t,{A:()=>r});var a=s(4848);function r(e){let{src:t,caption:s,alt:r,width:n,height:o}=e;return(0,a.jsxs)("figure",{children:[(0,a.jsx)("img",{src:t,alt:r||s,width:n,height:o}),(0,a.jsx)("figcaption",{children:(0,a.jsx)("b",{children:s})})]})}},5706:(e,t,s)=>{s.d(t,{A:()=>n});var a=s(4848);const r=e=>e.includes("::")?"struct"+e.replace("::","_1_1"):"class"+e;function n(e){let{refs:t}=e;return(0,a.jsxs)("p",{children:["\u30af\u30e9\u30b9\uff1a",t.map((e=>(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("a",{href:`https://docs.juce.com/master/${r(e)}.html`,children:e}),", "]})))]})}},6378:(e,t,s)=>{s.d(t,{A:()=>r});var a=s(4848);function r(e){let{path:t}=e;return(0,a.jsx)("p",{children:(0,a.jsx)("a",{href:`https://docs.juce.com/master/${t}.html`,children:"\ud83d\udcda Source Page"})})}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>i});var a=s(6540);const r={},n=a.createContext(r);function o(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(n.Provider,{value:t},e.children)}}}]);