"use strict";(self.webpackChunkjuce_tutorial_ja=self.webpackChunkjuce_tutorial_ja||[]).push([[2813],{2225:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var r=n(4848),t=n(8453),s=n(3449);n(6378);const l={title:"JUCE\u306e\u30ab\u30e9\u30fc",sidebar_position:3},a="\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebJUCE\u306e\u8272",c={id:"interface-design/tutorial_colours",title:"JUCE\u306e\u30ab\u30e9\u30fc",description:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u8272\u3092\u6307\u5b9a\u3057\u3001\u3055\u307e\u3056\u307e\u306a\u65b9\u6cd5\u3067\u9069\u7528\u3057\u307e\u3059\u3002",source:"@site/docs/interface-design/tutorial_colours.mdx",sourceDirName:"interface-design",slug:"/interface-design/tutorial_colours",permalink:"/juce-tutorial-ja/interface-design/tutorial_colours",draft:!1,unlisted:!1,editUrl:"https://github.com/m1m0zzz/juce-tutorial-ja/tree/main/docs/interface-design/tutorial_colours.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"JUCE\u306e\u30ab\u30e9\u30fc",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"\u30a2\u30d7\u30ea\u306e\u30eb\u30c3\u30af\uff06\u30d5\u30a3\u30fc\u30eb\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba",permalink:"/juce-tutorial-ja/interface-design/tutorial_look_and_feel_customisation"},next:{title:"\u70b9\u3001\u7dda\u3001\u77e9\u5f62\u30af\u30e9\u30b9",permalink:"/juce-tutorial-ja/interface-design/tutorial_point_line_rectangle"}},i={},d=[{value:"\u306f\u3058\u3081\u308b",id:"\u306f\u3058\u3081\u308b",level:2},{value:"Specifying colours by name",id:"specifying-colours-by-name",level:2},{value:"Specifying colours from values",id:"specifying-colours-from-values",level:2},{value:"Hue, saturation, and brightness",id:"hue-saturation-and-brightness",level:2},{value:"Manipulating colour values",id:"manipulating-colour-values",level:2},{value:"Setting look-and-feel colours",id:"setting-look-and-feel-colours",level:2},{value:"Custom look-and-feel colours",id:"custom-look-and-feel-colours",level:2}];function u(e){const o={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.h1,{id:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebjuce\u306e\u8272",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebJUCE\u306e\u8272"}),"\n",(0,r.jsx)(o.p,{children:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u8272\u3092\u6307\u5b9a\u3057\u3001\u3055\u307e\u3056\u307e\u306a\u65b9\u6cd5\u3067\u9069\u7528\u3057\u307e\u3059\u3002"}),"\n",(0,r.jsx)(o.p,{children:"\u30ec\u30d9\u30eb\uff1a\u521d\u7d1a"}),"\n",(0,r.jsx)(o.p,{children:"\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\uff1aWindows, macOS, Linux, iOS, Android"}),"\n",(0,r.jsxs)(o.p,{children:["\u30af\u30e9\u30b9\uff1a ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classColour",title:"Represents a colour, also including a transparency value.",children:"\u30ab\u30e9\u30fc"}),", ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/namespaceColours",title:"Contains a set of predefined named colours (mostly standard HTML colours)",children:"\u30ab\u30e9\u30fc"}),", ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classLookAndFeel",title:"LookAndFeel objects define the appearance of all the JUCE widgets, and subclasses can be used to appl...",children:"\u30eb\u30c3\u30af\u30a2\u30f3\u30c9\u30d5\u30a3\u30fc\u30eb"})]}),"\n",(0,r.jsx)(o.h2,{id:"\u306f\u3058\u3081\u308b",children:"\u306f\u3058\u3081\u308b"}),"\n",(0,r.jsxs)(o.p,{children:["Download the demo project for this tutorial here: ",(0,r.jsx)(o.a,{href:"/tutorials/PIPs/ColoursTutorial.zip",children:"\u30d4\u30c3\u30d7"})," | ",(0,r.jsx)(o.a,{href:"/tutorials/ZIPs/ColoursTutorial.zip",children:"\u30b8\u30c3\u30d7"}),". Unzip the project and open the first header file in the Projucer."]}),"\n",(0,r.jsxs)(o.p,{children:["If you need help with this step, see ",(0,r.jsx)(o.a,{href:"../tutorial_new_projucer_project/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30ebProjucer\u30d1\u30fc\u30c81\uff1aProjucer\u3092\u59cb\u3081\u308b"}),"."]}),"\n",(0,r.jsx)(o.h1,{id:"the-demo-project",children:"The demo project"}),"\n",(0,r.jsx)(o.p,{children:"\u30c7\u30e2\u30fb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8868\u793a\u3057\u3001\u3044\u304f\u3064\u304b\u306e\u7c21\u5358\u306a\u63cf\u753b\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001JUCE\u3067\u3069\u306e\u3088\u3046\u306b\u8272\u304c\u6307\u5b9a\u3055\u308c\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u9069\u7528\u3055\u308c\u308b\u304b\u3092\u8aac\u660e\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306e\u3088\u3046\u306b\u306a\u308b\u306f\u305a\u3067\u3059\uff1a"}),"\n",(0,r.jsx)(s.A,{src:"https://docs.juce.com/master/tutorial_colours_screenshot1.png",caption:"The colours demo application"}),"\n",(0,r.jsxs)(o.p,{children:["The first part of this tutorial looks at specifying colours more generally. This is illustrated by modifying the drawing code in the ",(0,r.jsx)(o.code,{children:"\u30da\u30a4\u30f3\u30c8"})," function within the demo application. The second part of the tutorial shows how colours are specified for elements of the built-in component types (such as labels, sliders, and so on)."]}),"\n",(0,r.jsx)(o.h1,{id:"colours-and-general-painting-operations",children:"Colours and general painting operations"}),"\n",(0,r.jsxs)(o.p,{children:["JUCE specifies colours using red, green, blue, and alpha (transparency) values. This is, of course, a widely used method of specificy colours in computing, but all implementations are slightly different. In particular, JUCE provides some useful methods for manipulating colours, which can help you maintain a consistent colour palette for your application. First, let's look at the ",(0,r.jsx)(o.code,{children:"\u30da\u30a4\u30f3\u30c8"})," function from the demo application:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"    void paint (juce::Graphics& g) override\n    {\n        g.fillAll (juce::Colours::lightgreen);\n        g.setColour (juce::Colours::orange);\n \n        auto centralArea = getLocalBounds().toFloat().reduced (10.0f);\n        g.drawRoundedRectangle (centralArea, 5.0f, 3.0f);\n \n        juce::Arraycolours { juce::Colours::red, juce::Colours::green, juce::Colours::blue }\uff1b\n \n        auto colorBarArea = centralArea.reduced (4.0f).withHeight (20.0f)\uff1b\n        auto colorArea = colorBarArea.withWidth (colorBarArea.getWidth() / (float) colors.size())\uff1b\n \n        for (auto color : colors)\n        {\n            g.setColour (color)\uff1b\n            g.fillRect (colorArea)\uff1b\n \n            colorArea.translate (colorArea.getWidth(), 0.0f)\uff1b\n        }\n    }\n"})}),"\n",(0,r.jsx)(o.p,{children:"\u6700\u521d\u306e\u884c\u306f\u3001\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u30fb\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u5168\u4f53\u3092\u5358\u4e00\u8272\u3067\u5857\u308a\u3064\u3076\u3057\u307e\u3059\uff08\u3053\u308c\u306f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5883\u754c\u5168\u4f53\u3092\u610f\u5473\u3057\u307e\u3059\uff09\uff1a"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"g.fillAll (juce::Colours::lightgreen)\uff1b\n"})}),"\n",(0,r.jsx)(o.p,{children:"\u6b21\u306e\u884c\u306f\u3001\u4e0e\u3048\u3089\u308c\u305f\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u30fb\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u3001\u4eca\u5f8c\u63cf\u753b\u64cd\u4f5c\u3092\u884c\u3046\u969b\u306e\u8272\u3092\u8a2d\u5b9a\u3059\u308b\u3002"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"g.setColour (juce::Colours::orange)\uff1b\n"})}),"\n",(0,r.jsx)(o.p,{children:"\u6b21\u306b\u3001\u308f\u305a\u304b\u306b\u633f\u5165\u3055\u308c\u305f\u9577\u65b9\u5f62\u3092\u5b9a\u7fa9\u3057\u3001\u73fe\u5728\u306e\u8272\u3092\u4f7f\u7528\u3057\u3066\u3001\u5883\u754c\u7dda\u3068\u3057\u3066\u4e38\u307f\u3092\u5e2f\u3073\u305f\u9577\u65b9\u5f62\u3092\u63cf\u753b\u3059\u308b\uff1a"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"auto centralArea = getLocalBounds().toFloat().reduced (10.0f)\uff1b\ng.drawRoundedRectangle (centralArea, 5.0f, 3.0f)\uff1b\n"})}),"\n",(0,r.jsx)(o.p,{children:"\u6b21\u306b\u3001\u8272\u306e\u914d\u5217\u3092\u8a2d\u5b9a\u3057\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u7570\u306a\u308b\u8272\u306e\u9577\u65b9\u5f62\u306e\u5217\u3092\u63cf\u304f\u3002"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"juce::Arraycolours { juce::Colours::red, juce::Colours::green, juce::Colours::blue }\uff1b\n"})}),"\n",(0,r.jsx)(o.p,{children:"\u3053\u306e\u8272\u306e\u3064\u3044\u305f\u9577\u65b9\u5f62\u306e\u5217\u3092\u63cf\u304f\u306b\u306f\u3001\u307e\u305a\u3001\u9577\u65b9\u5f62\u3092\u914d\u7f6e\u3059\u308b\u9818\u57df\u3092\u5b9a\u7fa9\u3059\u308b\uff1a"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"auto colorBarArea = centralArea.reduced (4.0f).withHeight (20.0f)\uff1b\n"})}),"\n",(0,r.jsxs)(o.p,{children:["Then we define the area for the first coloured rectangle. This will be a proportion of the total width of the ",(0,r.jsx)(o.code,{children:"\u30ab\u30e9\u30fc\u30d0\u30fc\u9818\u57df"})," rectangle, divided by the number of colours that we are using:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"auto colorArea = colorBarArea.withWidth (colorBarArea.getWidth() / colors.size())\uff1b\n"})}),"\n",(0,r.jsxs)(o.p,{children:["Finally, we iterate over the array of colours, fill the rectangle with the specified colour, and move the ",(0,r.jsx)(o.code,{children:"\u30ab\u30e9\u30fc\u30a8\u30ea\u30a2"})," rectangle to the right for the next iteration:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"for (auto color : colors)\n{\n    g.setColour (color)\uff1b\n    g.fillRect (colorArea)\uff1b\n \n    colorArea.translate (colorArea.getWidth(), 0.0f)\uff1b\n}\n"})}),"\n",(0,r.jsxs)(o.p,{children:["In the next few examples we will demonstrate some methods for specifying colours by changing the colours added to the ",(0,r.jsx)(o.code,{children:"\u30ab\u30e9\u30fc\u30ba"})," array."]}),"\n",(0,r.jsx)(o.h2,{id:"specifying-colours-by-name",children:"Specifying colours by name"}),"\n",(0,r.jsxs)(o.p,{children:["As shown in the demo project and the code above, colours can be specified in JUCE using some constants in the ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/namespaceColours",title:"Contains a set of predefined named colours (mostly standard HTML colours)",children:"\u30ab\u30e9\u30fc"})," namespace."]}),"\n",(0,r.jsx)(o.admonition,{type:"note",children:(0,r.jsxs)(o.p,{children:["Have a look at the API documentation for the ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/namespaceColours",title:"Contains a set of predefined named colours (mostly standard HTML colours)",children:"\u30ab\u30e9\u30fc"})," namespace for a full list, which are mostly standard HTML colours."]})}),"\n",(0,r.jsxs)(o.p,{children:["In addition to the constants within the ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/namespaceColours",title:"Contains a set of predefined named colours (mostly standard HTML colours)",children:"\u30ab\u30e9\u30fc"})," namespace, you can use the ",(0,r.jsx)(o.a,{href:"namespaceColours.html#af4f192e53312f7dd625afc1ce029025f",title:"Attempts to look up a string in the list of known colour names, and return the appropriate colour.",children:"Colours::findColourForName()"})," function, using a string to look up the desired colour name. For example, we could use the same red, green, and blue colours using the following code to fill our ",(0,r.jsx)(o.code,{children:"\u30ab\u30e9\u30fc\u30ba"})," array:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:'auto defaultColour = Colours::black;\n \njuce::Arraycolours { juce::Colours::findColourForName ("red", defaultColour)\u3001\n                                    juce::Colours::findColourForName ("green", defaultColour)\u3001\n                                    juce::Colours::findColourForName ("blue", defaultColour) }\uff1b\nColours::blackconst Colour blackDefinition juce_Colours.h:49\n'})}),"\n",(0,r.jsx)(o.admonition,{type:"note",children:(0,r.jsx)(o.p,{children:"\u6307\u5b9a\u3057\u305f\u8272\u306e\u691c\u7d22\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306b\u5099\u3048\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8272\uff08\u3053\u306e\u5834\u5408\u306f\u9ed2\uff09\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002"})}),"\n",(0,r.jsxs)(o.p,{children:["The ",(0,r.jsx)(o.a,{href:"namespaceColours.html#af4f192e53312f7dd625afc1ce029025f",title:"Attempts to look up a string in the list of known colour names, and return the appropriate colour.",children:"Colours::findColourForName()"})," function performs a case-insensitive search and trims whitespace from the start and end of the string, but not spaces within the string. For example, the following code will still work as expected, even though the colours are stored internally using all lowercase strings:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:'auto defaultColour = juce::Colours::black;\n \njuce::Arraycolors { juce::Colours::findColourForName ("DarkRed", defaultColour)\u3001\n                                    juce::Colours::findColourForName ("DarkGreen", defaultColour)\u3001\n                                    juce::Colours::findColourForName ("DarkBlue", defaultColour) }\uff1b\n'})}),"\n",(0,r.jsx)(o.p,{children:"\u3053\u308c\u306b\u3088\u308a\u3001\u6b21\u306e\u3088\u3046\u306a\u8272\u304c\u751f\u307e\u308c\u308b\uff1a"}),"\n",(0,r.jsx)(s.A,{src:"https://docs.juce.com/master/tutorial_colours_screenshot2.png",caption:"Dark red, green, and blue"}),"\n",(0,r.jsx)(o.p,{children:"\u3057\u304b\u3057\u3001\u8272\u540d\u306e\u4e2d\u306b\u7a7a\u767d\u3092\u542b\u3080\u3068\u5931\u6557\u3057\u3001\u3053\u306e\u5834\u5408\u306f\u3044\u305a\u308c\u3082\u9ed2\u3092\u8fd4\u3059\uff1a"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:'auto defaultColour = Colours::black;\n \njuce::Arraycolours { juce::Colours::findColourForName ("Dark Red", defaultColour)\u3001\n                                    juce::Colours::findColourForName ("Dark Green", defaultColour)\u3001\n                                    juce::Colours::findColourForName ("Dark Blue", defaultColour) }\uff1b\n'})}),"\n",(0,r.jsx)(o.p,{children:"\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u3001\u30cb\u30fc\u30ba\u306b\u5408\u308f\u305b\u3066\u72ec\u81ea\u306e\u95a2\u6570\u3092\u66f8\u304f\u306e\u306f\u7c21\u5358\u3060\u3002\u4f8b\u3048\u3070\u3001\u6587\u5b57\u5217\u304b\u3089\u3059\u3079\u3066\u306e\u30b9\u30da\u30fc\u30b9\u3092\u53d6\u308a\u9664\u304f\u95a2\u6570\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\uff1a"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:'static juce::String removeSpaces (const juce::String& text)\n{\n    return text.removeCharacters (" ")\uff1b\n}\n'})}),"\n",(0,r.jsxs)(o.p,{children:["And use that when passing a string to the ",(0,r.jsx)(o.a,{href:"namespaceColours.html#af4f192e53312f7dd625afc1ce029025f",title:"Attempts to look up a string in the list of known colour names, and return the appropriate colour.",children:"Colours::findColourForName()"})," function:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:'auto defaultColour = juce::Colours::black;\n \njuce::Arraycolours { juce::Colours::findColourForName (removeSpaces ("Dark Red"), defaultColour)\u3001\n                                    juce::Colours::findColourForName (removeSpaces ("Dark Green"), defaultColour)\u3001\n                                    juce::Colours::findColourForName (removeSpaces ("Dark Blue"), defaultColour) }\uff1b\n'})}),"\n",(0,r.jsx)(o.h2,{id:"specifying-colours-from-values",children:"Specifying colours from values"}),"\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/namespaceColours",title:"Contains a set of predefined named colours (mostly standard HTML colours)",children:"\u30ab\u30e9\u30fc"})," can also be specified using the raw red, green, blue, and alpha values. Here you can create a ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classColour",title:"Represents a colour, also including a transparency value.",children:"\u30ab\u30e9\u30fc"})," object using either floating point values in the range 0.0-1.0, or integers (of type uint8) between 0-255. Using integers we can create the same red, green, and blue colours as follows:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"juce::Arraycolours { juce::Colour (255, 0, 0), // \u8d64\n                                    juce::Colour (0, 128, 0), // \u7dd1\u8272\n                                    juce::Colour (0, 0, 255) }; // \u9752\n"})}),"\n",(0,r.jsx)(o.admonition,{type:"note",children:(0,r.jsx)(o.p,{children:'\u6a19\u6e96\u306e "\u7dd1 "\u30ab\u30e9\u30fc\u306f\u3001\u30ab\u30e9\u30fc\u306e\u7dd1\u8981\u7d20\u306b\u6700\u5927\u5024255\u3092\u6301\u305f\u306a\u3044\u3002'})}),"\n",(0,r.jsx)(o.p,{children:"\u3053\u306e\u5834\u5408\u30a2\u30eb\u30d5\u30a1\u5024\u3092\u7701\u7565\u3059\u308b\u3068\u3001\u30a2\u30eb\u30d5\u30a1\u5024\u306f\u6700\u5927\u5024\uff08255\uff09\u306b\u8a2d\u5b9a\u3055\u308c\u3001\u8272\u306f\u5b8c\u5168\u306b\u4e0d\u900f\u660e\u306b\u306a\u308b\u3002"}),"\n",(0,r.jsx)(o.p,{children:"\u307e\u305f\u300116\u9032\u6570\u50241\u3064\u3067\u8272\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\u3053\u306e\u5834\u5408\u3001\u8272\u5024\u8981\u7d20\u306e\u9806\u756a\u306f\u30a2\u30eb\u30d5\u30a1\u3001\u8d64\u3001\u7dd1\u3001\u9752\u3068\u306a\u308b\uff1a"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"juce::Arraycolours { juce::Colour (0xffff0000), // \u8d64\n                                    juce::Colour (0xff008000), // \u7dd1\u8272\n                                    juce::Colour (0xff0000ff) }; // \u9752\n"})}),"\n",(0,r.jsx)(o.admonition,{type:"note",children:(0,r.jsx)(o.p,{children:"\u3053\u306e\u5834\u5408\u3001\u30a2\u30eb\u30d5\u30a1\u5024\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\u305d\u3046\u3057\u306a\u3044\u3068\u30a2\u30eb\u30d5\u30a1\u5024\u306f\u30bc\u30ed\u306b\u8a2d\u5b9a\u3055\u308c\u308b\uff08\u3064\u307e\u308a\u900f\u660e\u306b\u306a\u308b\uff09\u3002"})}),"\n",(0,r.jsxs)(o.p,{children:["We can also use floating point values using the ",(0,r.jsx)(o.a,{href:"classColour.html#a3992d5ea9bdaf0471bd6caa0595b0185",title:"Creates a colour using floating point red, green, blue and alpha values.",children:"Colour::fromFloatRGBA()"})," function:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"juce::Array\u8272 { juce::Colour::fromFloatRGBA (1.0f, 0.0f, 0.0f, 1.0f), // \u8d64\n                                    juce::Colour::fromFloatRGBA (0.0f, 0.5f, 0.0f, 1.0f), // \u7dd1\u8272\n                                    juce::Colour::fromFloatRGBA (0.0f, 0.0f, 1.0f, 1.0f) }; // \u9752\u8272\n"})}),"\n",(0,r.jsx)(o.admonition,{type:"note",children:(0,r.jsxs)(o.p,{children:["A integer value of 128 is equivalent to a floating point value of around 0.501961. Therefore the green colours is not ",(0,r.jsx)(o.em,{children:"\u304b\u306a\u308a"})," the same as the previous example, but 0.5 is close enough for this demonstration."]})}),"\n",(0,r.jsxs)(o.p,{children:["Try out different colour values and review the results by running the application. You are not limited to adding three colours to the ",(0,r.jsx)(o.code,{children:"\u30ab\u30e9\u30fc\u30ba"})," array, you can use any number of colours (greater than or equal to one)."]}),"\n",(0,r.jsx)(o.h2,{id:"hue-saturation-and-brightness",children:"Hue, saturation, and brightness"}),"\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classColour",title:"Represents a colour, also including a transparency value.",children:"\u30ab\u30e9\u30fc"})," objects can also be initialised from hue, saturation, and brightness values. This is one way to generate different colours that share some perceptual qualities."]}),"\n",(0,r.jsx)(o.p,{children:"\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u3001\u660e\u308b\u3044\u8d64\u3068\u6697\u3044\u8d64\u306e\u30b7\u30ea\u30fc\u30ba\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff1a"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"juce::Arraycolours { juce::Colour::fromHSV (0.0f, // \u8272\u76f8\n                                                           0.5f, // \u5f69\u5ea6\n                                                           0.3f, // \u660e\u5ea6\n                                                           1.0f), // \u30a2\u30eb\u30d5\u30a1\n                                    juce::Colour::fromHSV (0.0f, 0.5f, 0.5f, 1.0f)\u3001\n                                    juce::Colour::fromHSV (0.0f, 0.5f, 0.7f, 1.0f) }\uff1b\n"})}),"\n",(0,r.jsx)(o.p,{children:"\u3053\u3053\u3067\u306f\u3001\u8272\u76f8\u3001\u5f69\u5ea6\u3001\u30a2\u30eb\u30d5\u30a1\u5024\u306f\u5404\u8272\u3067\u4e00\u5b9a\u3067\u3059\uff08\u8272\u76f80.0f\u306f\u300c\u8d64\u300d\u3068\u3057\u3066\u77e5\u899a\u3055\u308c\u308b\u8272\u3092\u751f\u6210\u3059\u308b\u306f\u305a\u3067\u3059\uff09\u3002\u7d50\u679c\u306f\u6b21\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff1a"}),"\n",(0,r.jsx)(s.A,{src:"https://docs.juce.com/master/tutorial_colours_screenshot3.png",caption:"Reds with saturation 0.5 and brightnesses 0.3, 0.5, and 0.7"}),"\n",(0,r.jsxs)(o.p,{children:["We can also obtain the hue, saturation, and brightness values from a ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classColour",title:"Represents a colour, also including a transparency value.",children:"\u30ab\u30e9\u30fc"})," object. For example, if we wanted a series of purples of different brightnesses, we could use the following code:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"auto purpleHue = juce::Colours::purple.getHue();\n \njuce::Arraycolors { juce::Colour::fromHSV (purpleHue, 0.5f, 0.3f, 1.0f)\u3001\n                                    juce::Colour::fromHSV (purpleHue, 0.5f, 0.5f, 1.0f)\u3001\n                                    juce::Colour::fromHSV (purpleHue, 0.5f, 0.7f, 1.0f) }\uff1b\n"})}),"\n",(0,r.jsx)(o.p,{children:"\u305d\u306e\u7d50\u679c\u304c\u6b21\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3067\u3042\u308b\uff1a"}),"\n",(0,r.jsx)(s.A,{src:"https://docs.juce.com/master/tutorial_colours_screenshot4.png",caption:"Purples with saturation 0.5 and brightnesses 0.3, 0.5, and 0.7"}),"\n",(0,r.jsx)(o.h2,{id:"manipulating-colour-values",children:"Manipulating colour values"}),"\n",(0,r.jsxs)(o.p,{children:["We can also use existing colours to create new colours. For example, to make colours that are slightly brighter or darker than an existing colour we can use the ",(0,r.jsx)(o.a,{href:"classColour.html#a614c7699a1b47dcf324106d548238bac",title:"Returns a brighter version of this colour.",children:"\u30ab\u30e9\u30fc::\u30d6\u30e9\u30a4\u30c8()"})," or ",(0,r.jsx)(o.a,{href:"classColour.html#a9910d9b8385825a87ea0d62d96115872",title:"Returns a darker version of this colour.",children:"\u30ab\u30e9\u30fc::\u30c0\u30fc\u30ab\u30fc()"})," functions respectively:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"auto baseColour = juce::Colours::orange;\n \njuce::Arraycolors { baseColour.darker()\u3001\n                                    baseColour\u3001\n                                    baseColour.brighter() }\uff1b\n"})}),"\n",(0,r.jsxs)(o.p,{children:["Or you can blend between two colours using the ",(0,r.jsx)(o.a,{href:"classColour.html#ac1500fb05c7775db2e1b21f07cc28c0c",title:"Returns a colour that lies somewhere between this one and another.",children:"\u30ab\u30e9\u30fc::interpolatedWith()"})," function:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"auto colour1 = juce::Colours::red;\nauto colour2 = juce::Colours::purple;\n \njuce::Arraycolors { color1\u3001\n                                    color1.interpolatedWith (color2, 0.5f)\u3001\n                                    color2 }\uff1b\n"})}),"\n",(0,r.jsx)(o.p,{children:"\u305d\u306e\u7d50\u679c\u304c\u6b21\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3067\u3042\u308b\uff1a"}),"\n",(0,r.jsx)(s.A,{src:"https://docs.juce.com/master/tutorial_colours_screenshot5.png",caption:"Red and purple with an equal blend of red and purple in between"}),"\n",(0,r.jsxs)(o.p,{children:["Given one colour you can create another colour that will be clearly visible against another colour using the ",(0,r.jsx)(o.a,{href:"classColour.html#a50e8a45cda60f6853cb74ed1ff1fb7d7",title:"Returns a colour that will be clearly visible against this colour.",children:"\u30ab\u30e9\u30fc::\u30b3\u30f3\u30c8\u30e9\u30b9\u30c8()"})," function. This allows you to specify the amount of contrast using an argument:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"auto baseColour = juce::Colours::darkcyan;\n \njuce::Arraycolors { baseColour\u3001\n                                    baseColour.contrasting (0.5f) }\uff1b\n"})}),"\n",(0,r.jsx)(o.p,{children:"\u4ed6\u306e2\u8272\u306b\u5bfe\u3057\u3066\u5bfe\u7167\u7684\u306a\u8272\u3092\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u308b\uff1a"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"auto colour1 = juce;:Colours::lightblue;\nauto colour2 = juce;:Colours::darkred;\n \njuce::Arraycolors { color1\u3001\n                                    juce::Colour::contrasting (color1, color2)\u3001\n                                    color2 }\uff1b\nColours::lightblueconst Colour lightblueDefinition juce_Colours.h:105\nColours::darkredconst Colour darkredDefinition juce_Colours.h:73\njuce_AudioWorkgroup_mac.h:24\n"})}),"\n",(0,r.jsxs)(o.p,{children:["There are various other manipulations that can be performed such as blending two colours taking into account the alpha channel of the overlaid colour using the ",(0,r.jsx)(o.a,{href:"classColour.html#a3c6c94ff6f05b403b783acaf7c68b439",title:"Returns a colour that is the result of alpha-compositing a new colour over this one.",children:"\u30ab\u30e9\u30fc::\u30aa\u30fc\u30d0\u30fc\u30ec\u30a4\u30a6\u30a3\u30ba()"})," function."]}),"\n",(0,r.jsx)(o.h1,{id:"specifying-component-colours",children:"Specifying component colours"}),"\n",(0,r.jsxs)(o.p,{children:["The previous section explored the use of colours when performing your own drawing operations with your component's ",(0,r.jsx)(o.code,{children:"\u30da\u30a4\u30f3\u30c8"})," function. To customise the colours of the built-in components (such as sliders, labels, and so on) you need to use Component::setColour() or ",(0,r.jsx)(o.a,{href:"classLookAndFeel.html#a167a1e914771f32e433a0d45aaba45e3",title:"Registers a colour to be used for a particular purpose.",children:"LookAndFeel::setColour()"})," functions."]}),"\n",(0,r.jsxs)(o.p,{children:["Essentially, each of the built-in ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classComponent",title:"The base class for all JUCE user-interface objects.",children:"\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," subclasses contains an ",(0,r.jsx)(o.code,{children:"\u5217\u6319"})," that lists the various elements of the component that can have a specific colour. Each of these items is referred to as a ",(0,r.jsx)(o.em,{children:"\u30ab\u30e9\u30fcID"}),". (The values of these colour IDs are unique across the JUCE library.) For example, the colour IDs for the ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classLabel",title:"A component that displays a text string, and can optionally become a text editor when clicked.",children:"\u30e9\u30d9\u30eb"})," class are as follows (from ",(0,r.jsx)(o.a,{href:"classLabel.html#a41756012394513222e1323bb432fa701",title:"A set of colour IDs to use to change the colour of various aspects of the label.",children:"Label::ColourIds"}),"):"]}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsxs)(o.li,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.a,{href:"classLabel.html#a41756012394513222e1323bb432fa701a80bf4bb58a466a4debb994f3ee2c8cab",title:"The background colour to fill the label with.",children:"Label::backgroundColourId"})," : The background colour to fill the label with."]}),"\n"]}),"\n",(0,r.jsxs)(o.li,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.a,{href:"classLabel.html#a41756012394513222e1323bb432fa701a1f25238374bf53d43f8c73e68c8e937c",title:"The colour for the text.",children:"Label::textColourId"})," : The colour for the text."]}),"\n"]}),"\n",(0,r.jsxs)(o.li,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.a,{href:"classLabel.html#a41756012394513222e1323bb432fa701ab67bf6af853bcef12b41b3e81f7d18bb",title:"An optional colour to use to draw a border around the label.",children:"Label::outlineColourId"})," : An optional colour to use to draw a border around the label."]}),"\n",(0,r.jsx)(o.p,{children:"\u30a2\u30a6\u30c8\u30e9\u30a4\u30f3\u3092\u6301\u305f\u306a\u3044\u3088\u3046\u306b\u900f\u660e\u306b\u3057\u3066\u304a\u304f\u3002"}),"\n"]}),"\n",(0,r.jsxs)(o.li,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.a,{href:"classLabel.html#a41756012394513222e1323bb432fa701a6ccfd805ecc818013ea4bdde69d4258b",title:"The background colour when the label is being edited.",children:"Label::backgroundWhenEditingColourId"})," : The background colour when the label is being edited."]}),"\n"]}),"\n",(0,r.jsxs)(o.li,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.a,{href:"classLabel.html#a41756012394513222e1323bb432fa701adb6284340066b8c4d9ea389087c7d69d",title:"The colour for the text when the label is being edited.",children:"Label::textWhenEditingColourId"})," : The colour for the text when the label is being edited."]}),"\n"]}),"\n",(0,r.jsxs)(o.li,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.a,{href:"classLabel.html#a41756012394513222e1323bb432fa701a6c7adfce6c830c9faa94efd3445f78cf",title:"An optional border colour when the label is being edited.",children:"Label::outlineWhenEditingColourId"})," : An optional border colour when the label is being edited."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["Let's try changing some of these colours. If you look in the ",(0,r.jsx)(o.code,{children:"\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30f3\u30c4\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," constructor you will see a ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classLabel",title:"A component that displays a text string, and can optionally become a text editor when clicked.",children:"\u30e9\u30d9\u30eb"}),", a ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classTextEditor",title:"An editable text box.",children:"\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u30fc"}),", a ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classTextButton",title:"A button that uses the standard lozenge-shaped background with a line of text on it.",children:"\u30c6\u30ad\u30b9\u30c8\u30dc\u30bf\u30f3"}),", and two ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classSlider",title:"A slider control for changing a value.",children:"\u30b9\u30e9\u30a4\u30c0\u30fc"})," objects added as child components. Add the line [1] as shown below to change the label's text colour to black:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"MainContentComponent()\n{\n    label.setColour (juce::Label::textColourId, Colours::black); // [1].\n    label.setEditable (true)\uff1b\n    addAndMakeVisible (label)\uff1b\n    //...\n\u30a2\u30af\u30bb\u30b7\u30d3\u30ea\u30c6\u30a3\u30ed\u30fc\u30eb::label@ label\n"})}),"\n",(0,r.jsx)(o.p,{children:"\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306e\u3088\u3046\u306b\u306a\u308b\u306f\u305a\u3060\uff1a"}),"\n",(0,r.jsx)(s.A,{src:"https://docs.juce.com/master/tutorial_colours_screenshot6.png",caption:"Showing a label with a customised text colour"}),"\n",(0,r.jsxs)(o.p,{children:["Look at the colour IDs for the ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classTextEditor",title:"An editable text box.",children:"\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u30fc"}),", ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classTextButton",title:"A button that uses the standard lozenge-shaped background with a line of text on it.",children:"\u30c6\u30ad\u30b9\u30c8\u30dc\u30bf\u30f3"}),", and ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classSlider",title:"A slider control for changing a value.",children:"\u30b9\u30e9\u30a4\u30c0\u30fc"})," classes (",(0,r.jsx)(o.a,{href:"classTextEditor.html#aa805220923c93cd808a92fff0e3fb71d",title:"A set of colour IDs to use to change the colour of various aspects of the editor.",children:"\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u30fc::ColourIds"}),", ",(0,r.jsx)(o.a,{href:"classTextButton.html#afb6c1da587aebb63b58a2569bed70c2c",title:"A set of colour IDs to use to change the colour of various aspects of the button.",children:"\u30c6\u30ad\u30b9\u30c8\u30dc\u30bf\u30f3::ColourIds"}),", and ",(0,r.jsx)(o.a,{href:"classSlider.html#a1012002c53381ccc7c1fe7e604a75f44",title:"A set of colour IDs to use to change the colour of various aspects of the slider.",children:"\u30b9\u30e9\u30a4\u30c0\u30fc::ColourIds"}),") and experiment with setting different colours for the child components in the demo application."]}),"\n",(0,r.jsx)(o.h2,{id:"setting-look-and-feel-colours",children:"Setting look-and-feel colours"}),"\n",(0,r.jsxs)(o.p,{children:["It is very common for applications, or parts of applications, to require the same colour palette for all components of the same type. You may have found in the exercise in the previous section that you needed to repeat the calls to the Component::setColour() function for both sliders in order to give them the same appearance. One use of the ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classLookAndFeel",title:"LookAndFeel objects define the appearance of all the JUCE widgets, and subclasses can be used to appl...",children:"\u30eb\u30c3\u30af\u30a2\u30f3\u30c9\u30d5\u30a3\u30fc\u30eb"})," class is to provide a single point where these colours can be specified. To illustrate this, return the ",(0,r.jsx)(o.code,{children:"\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30f3\u30c4\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," constructor back to its original state as shown below:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:'MainContentComponent()\n    {\n        label.setEditable (true)\uff1b\n        addAndMakeVisible (label)\uff1b\n \n        textEditor.setText ("\u3053\u308c\u306f\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u3067\u3059\u3002")\uff1b\n        addAndMakeVisible (textEditor)\uff1b\n \n        textButton.setClickingTogglesState (true)\uff1b\n        addAndMakeVisible (textButton)\uff1b\n \n        addAndMakeVisible (slider1)\uff1b\n        addAndMakeVisible (slider2)\uff1b\n \n        setSize (600, 210)\uff1b\n    }\n'})}),"\n",(0,r.jsx)(o.p,{children:"Now add the following line [2] to set the colour of the thumbs for both sliders:"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"//...\ngetLookAndFeel().setColour (juce::Slider::thumbColourId, juce::Colours::red); // [2]...\naddAndMakeVisible (slider1)\uff1b\naddAndMakeVisible (slider2)\uff1b\n//...\n"})}),"\n",(0,r.jsx)(o.p,{children:"\u3053\u308c\u306b\u3088\u308a\u3001\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u306f\u305a\u3060\uff1a"}),"\n",(0,r.jsx)(s.A,{src:"https://docs.juce.com/master/tutorial_colours_screenshot7.png",caption:"Customising the colour of multiple slider thumbs using a single line of code"}),"\n",(0,r.jsx)(o.h2,{id:"custom-look-and-feel-colours",children:"Custom look-and-feel colours"}),"\n",(0,r.jsxs)(o.p,{children:["You can also make a subclass of one of the ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classLookAndFeel",title:"LookAndFeel objects define the appearance of all the JUCE widgets, and subclasses can be used to appl...",children:"\u30eb\u30c3\u30af\u30a2\u30f3\u30c9\u30d5\u30a3\u30fc\u30eb"})," classes (",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classLookAndFeel__V1",title:"The original JUCE look-and-feel, as used back from 2002 to about 2007ish.",children:"LookAndFeel_V1"}),", ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classLookAndFeel__V2",title:"This LookAndFeel subclass implements the juce style from around 2008-12.",children:"LookAndFeel_V2"}),", ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classLookAndFeel__V3",title:"The latest JUCE look-and-feel style, as introduced in 2013.",children:"LookAndFeel_V3"}),", or ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classLookAndFeel__V4",title:"The latest JUCE look-and-feel style, as introduced in 2017.",children:"LookAndFeel_V4"}),") and customise specific colours in its constructor. To do this you could add the following class as a nested class of our ",(0,r.jsx)(o.code,{children:"\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30f3\u30c4\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})," class:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"class CustomLookAndFeel : public juce::LookAndFeel_V4\n    {\n    public\uff1a\n        CustomLookAndFeel()\n        {\n            setColour (juce::Slider::thumbColourId, juce::Colours::red)\uff1b\n        }\n    };\n"})}),"\n",(0,r.jsx)(o.p,{children:"Add an instance of this class to our private member section [3]:"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:'private\uff1a\n    CustomLookAndFeel lf; // [3].\n    juce::Label label { {}, "\u3053\u308c\u306f\u30e9\u30d9\u30eb\u30c6\u30ad\u30b9\u30c8\u3067\u3059\u3002"};\n'})}),"\n",(0,r.jsx)(o.p,{children:"And set the MainContentComponent class to use this look-and-feel in its constructor [4]:"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"MainContentComponent()\n    {\n        setLookAndFeel (&lf); // [4].\n \n        label.setEditable (true)\uff1b\n"})}),"\n",(0,r.jsx)(o.admonition,{type:"note",children:(0,r.jsxs)(o.p,{children:["The changed code for this subsection can be found in the ",(0,r.jsx)(o.code,{children:"ColoursTutorial_02.h"})," file of the demo project."]})}),"\n",(0,r.jsxs)(o.p,{children:["Customise more colours in the ",(0,r.jsx)(o.code,{children:"\u30ab\u30b9\u30bf\u30e0\u30eb\u30c3\u30af\uff06\u30d5\u30a3\u30fc\u30eb"})," constructor."]}),"\n",(0,r.jsx)(o.h1,{id:"\u6982\u8981",children:"\u6982\u8981"}),"\n",(0,r.jsx)(o.p,{children:"\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001\u3042\u306a\u305f\u81ea\u8eab\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f7f\u7528\u3067\u304d\u308b\u4ee5\u4e0b\u306e\u9805\u76ee\u3092\u898b\u3066\u304d\u307e\u3057\u305f\uff1a"}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsxs)(o.li,{children:["How to use the ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classColour",title:"Represents a colour, also including a transparency value.",children:"\u30ab\u30e9\u30fc"})," class and ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/namespaceColours",title:"Contains a set of predefined named colours (mostly standard HTML colours)",children:"\u30ab\u30e9\u30fc"})," namespace to specify colours in JUCE."]}),"\n",(0,r.jsxs)(o.li,{children:["Using colours in your component's ",(0,r.jsx)(o.code,{children:"\u30da\u30a4\u30f3\u30c8"})," function when performing drawing operations."]}),"\n",(0,r.jsx)(o.li,{children:"\u30ab\u30e9\u30fcID\u3092\u4f7f\u7528\u3057\u305f\u7d44\u307f\u8fbc\u307f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8981\u7d20\u306e\u8272\u306e\u6307\u5b9a\u3002"}),"\n",(0,r.jsxs)(o.li,{children:["Specifying colours across parts of your application or your whole application using the ",(0,r.jsx)(o.a,{href:"https://docs.juce.com/master/classLookAndFeel",title:"LookAndFeel objects define the appearance of all the JUCE widgets, and subclasses can be used to appl...",children:"\u30eb\u30c3\u30af\u30a2\u30f3\u30c9\u30d5\u30a3\u30fc\u30eb"})," class."]}),"\n"]}),"\n",(0,r.jsx)(o.h1,{id:"\u95a2\u9023\u9805\u76ee",children:"\u95a2\u9023\u9805\u76ee"}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsx)(o.li,{children:(0,r.jsx)(o.a,{href:"../tutorial_random/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30e9\u30f3\u30c0\u30e0\u30fb\u30af\u30e9\u30b9"})}),"\n",(0,r.jsx)(o.li,{children:(0,r.jsx)(o.a,{href:"../tutorial_look_and_feel_customisation/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30a2\u30d7\u30ea\u306e\u30eb\u30c3\u30af\uff06\u30d5\u30a3\u30fc\u30eb\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b"})}),"\n",(0,r.jsx)(o.li,{children:(0,r.jsx)(o.a,{href:"../tutorial_component_parents_children/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u89aa\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8"})}),"\n",(0,r.jsx)(o.li,{children:(0,r.jsx)(o.a,{href:"../tutorial_point_line_rectangle/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u70b9\u3001\u7dda\u3001\u77e9\u5f62\u30af\u30e9\u30b9"})}),"\n",(0,r.jsx)(o.li,{children:(0,r.jsx)(o.a,{href:"../tutorial_rectangle_advanced/",children:"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u9ad8\u5ea6\u306aGUI\u30ec\u30a4\u30a2\u30a6\u30c8\u30c6\u30af\u30cb\u30c3\u30af"})}),"\n"]})]})}function h(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},3449:(e,o,n)=>{n.d(o,{A:()=>t});var r=n(4848);function t(e){let{src:o,caption:n,alt:t,width:s,height:l}=e;return(0,r.jsxs)("figure",{children:[(0,r.jsx)("img",{src:o,alt:t||n,width:s,height:l}),(0,r.jsx)("figcaption",{children:(0,r.jsx)("b",{children:n})})]})}},6378:(e,o,n)=>{n.d(o,{A:()=>t});var r=n(4848);function t(e){let{path:o}=e;return(0,r.jsx)("p",{children:(0,r.jsx)("a",{href:`https://docs.juce.com/master/${o}.html`,children:"\ud83d\udcda Source Page"})})}},8453:(e,o,n)=>{n.d(o,{R:()=>l,x:()=>a});var r=n(6540);const t={},s=r.createContext(t);function l(e){const o=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(s.Provider,{value:o},e.children)}}}]);